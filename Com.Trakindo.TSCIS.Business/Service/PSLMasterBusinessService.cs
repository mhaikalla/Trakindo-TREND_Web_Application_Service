using Com.Trakindo.Framework;
using Com.Trakindo.TSICS.Data.Context;
using Com.Trakindo.TSICS.Data.Model;
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Reflection;
using System.Text.RegularExpressions;

namespace Com.Trakindo.TSICS.Business.Service
{
    public class PSLMasterBusinessService
    {
        private readonly TsicsContext _ctx = Factory.Create<TsicsContext>("TsicsContext", ClassType.clsTypeDataContext);
        private readonly LogErrorBusinessService _logErrorBService = Factory.Create<LogErrorBusinessService>("LogError", ClassType.clsTypeBusinessService);
        private readonly V_TR_MEPBusinessService  _V_TR_MEPBusinessService = Factory.Create<V_TR_MEPBusinessService>("V_TR_MEP", ClassType.clsTypeBusinessService);

        public List<string> GetListArea()
        {
            List<string> result = _ctx.PSLMaster.Where(w => w.Area != null && w.Area != "").Select(s => s.Area).Distinct().ToList();
            return result;
        }

        public List<string> GetListAreaPSLCompletionPSP()
        {
            var getArea = (from item in _ctx.PSLMaster
                           where item.Area != "" && item.Area != null && item.Area != "Trakindo Utama" && item.Area != "Product Support"
                           group item by item.Area into a
                           select new
                           {
                               Area = a.FirstOrDefault().Area
                           }).OrderBy(odb => odb.Area);

            var listItem = new List<string>();
            foreach (var item in getArea.ToList())
            {
                listItem.Add(item.Area);
            }
            return listItem;
        }

        public List<string> GetListStoreName()
        {
            List<string> result = _ctx.PSLMaster.Where(w => w.SalesOffice != null && w.SalesOffice != "").Select(s => s.SalesOffice).Distinct().ToList();
            return result;
        }

        public List<string> GetListSalesOffice()
        {
            List<string> result = _ctx.PSLMaster.Where(w => w.SalesOffice != null && w.SalesOffice != "").Select(s => s.SalesOffice).Distinct().ToList();
            return result;
        }

        public List<string> GetListPSLStatus()
        {
            List<string> result = _ctx.PSLMaster.Where(w => w.SapPSLStatus != null && w.SapPSLStatus != "").Select(s => s.SapPSLStatus).Distinct().ToList();
            return result;
        }

        public List<string> GetlListPSLType()
        {
            List<string> result = _ctx.PSLMaster.Where(w => w.PSLType != null && w.PSLType != "").Select(s => s.PSLType).Distinct().ToList();
            return result;
        }

        public List<string> GetListPSLNo()
        {
            List<string> result = _ctx.PSLMaster.Where(w => w.PSLId != null && w.PSLId != "").Select(s => s.PSLId).Distinct().ToList();
            return result;
        }

        public List<int> GetListAgeIndicator()
        {
            List<int> result = _ctx.PSLMaster.Where(w => w.PslAge != null && w.PslAge != 0).Select(s => s.PslAge).Distinct().ToList();
            return result;
        }

        public List<string> GetListSerialNumber()
        {
            List<string> result = _ctx.PSLMaster.Where(w => w.SerialNumber != null && w.SerialNumber != "").Select(s => s.SerialNumber).Distinct().ToList();
            return result;
        }

        public List<string> GetListModel()
        {
            List<string> result = _ctx.PSLMaster.Where(w => w.Model != null && w.Model != "").Select(s => s.Model).Distinct().ToList();
            return result;
        }

        public List<string> GetListPriority()
        {
            List<string> result = _ctx.PSLMaster.Where(w => w.PriorityLevel != null && w.PriorityLevel != "").Select(s => s.PriorityLevel).Distinct().ToList();
            return result;
        }

        public List<string> GetListSOStatus()
        {
            List<string> result = _ctx.PSLMaster.Where(w => w.ServiceOrderStatusDesc != null && w.ServiceOrderStatusDesc != "").Select(s => s.ServiceOrderStatusDesc).Distinct().ToList();
            return result;
        }

        public List<PSLMaster> GetArea(string[] salesOffice, string[] pslStatus, string[] pslNo, int[] ageIndicator, string[] serialNumber, string[] model, string[] priority, string[] type, string termFrom, string termEnd, string releaseFrom, string releaseEnd, string inventory, string rental, string hid, string others)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.Area != null && s.Validation == "Outstanding");
            if (type != null)
            {
                queryData = queryData.Where(s => type.Contains(s.PSLType));
            }
            if (!string.IsNullOrWhiteSpace(termFrom) && !string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(termEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value >= convertToDateTimeFrom && s.TerminationDate.Value <= convertToDateTimeEnd);
            }
            if(!string.IsNullOrWhiteSpace(termFrom) && string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value == convertToDateTimeFrom);
            }

            if (!string.IsNullOrWhiteSpace(releaseFrom) && !string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(releaseEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value >= convertToDateTimeFrom && s.LetterDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(releaseFrom) && string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value == convertToDateTimeFrom);
            }

            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }

            if (salesOffice != null)
            {
                queryData = queryData.Where(s=> salesOffice.Contains(s.SalesOffice));
            }

            if (pslStatus != null)
            {
                queryData = queryData.Where(s => pslStatus.Contains(s.SapPSLStatus));
            }

            if (pslNo != null)
            {
                queryData = queryData.Where(s => pslNo.Contains(s.PSLId));
            }

            if (ageIndicator != null)
            {
                queryData = queryData.Where(s => ageIndicator.Contains(s.PslAge));
            }

            if (serialNumber != null)
            {
                queryData = queryData.Where(s => serialNumber.Contains(s.SerialNumber));
            }

            if (model != null)
            {
                queryData = queryData.Where(s => model.Contains(s.Model));
            }

            if (priority != null)
            {
                queryData = queryData.Where(s => priority.Contains(s.PriorityLevel));
            }

            var listData = queryData.GroupBy(g => g.Area)
                                            .Select(area=> new {
                                                PSLMasterId =  area.FirstOrDefault().PSLMasterId,
                                                SalesOffice = area.FirstOrDefault().SalesOffice,
                                                Area = area.FirstOrDefault().Area,
                                                PSLstatus = area.FirstOrDefault().SapPSLStatus,
                                                PSLId = area.FirstOrDefault().PSLId,
                                                ageIndicator = area.FirstOrDefault().PslAge,
                                                serialNumber = area.FirstOrDefault().SerialNumber,
                                                Model = area.FirstOrDefault().Model
                                            }).OrderBy(odb => odb.Area).Take(100);

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.Area = item.Area;
                data.Add(dataPSL);
            }
            return data;
        }

        public List<PSLMaster> GetSalesOffice(string[] area, string[] pslStatus, string[] pslNo, int[] ageIndicator, string[] serialNumber, string[] model, string[] priority, string[] type, string termFrom, string termEnd, string releaseFrom, string releaseEnd, string inventory, string rental, string hid, string others)
        {

            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.SalesOffice != "" && s.Validation == "Outstanding");
            if (type != null)
            {
                queryData = queryData.Where(s => type.Contains(s.PSLType));
            }
            if (!string.IsNullOrWhiteSpace(termFrom) && !string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(termEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value >= convertToDateTimeFrom && s.TerminationDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(termFrom) && string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value == convertToDateTimeFrom);
            }

            if (!string.IsNullOrWhiteSpace(releaseFrom) && !string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(releaseEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value >= convertToDateTimeFrom && s.LetterDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(releaseFrom) && string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value == convertToDateTimeFrom);
            }

            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }

            if (area != null)
            {
                queryData = queryData.Where(s => area.Contains(s.Area));
            }

            if (pslStatus != null)
            {
                queryData = queryData.Where(s => pslStatus.Contains(s.SapPSLStatus));
            }

            if (pslNo != null)
            {
                queryData = queryData.Where(s => pslNo.Contains(s.PSLId));
            }

            if (ageIndicator != null)
            {
                queryData = queryData.Where(s => ageIndicator.Contains(s.PslAge));
            }

            if (serialNumber != null)
            {
                queryData = queryData.Where(s => serialNumber.Contains(s.SerialNumber));
            }

            if (model != null)
            {
                queryData = queryData.Where(s => model.Contains(s.Model));
            }

            if (priority != null)
            {
                queryData = queryData.Where(s => priority.Contains(s.PriorityLevel));
            }

            var listData = queryData.GroupBy(g => g.SalesOffice)
                                            .Select(salesoffice => new {
                                                PSLMasterId = salesoffice.FirstOrDefault().PSLMasterId,
                                                SalesOffice = salesoffice.FirstOrDefault().SalesOffice,
                                                Area = salesoffice.FirstOrDefault().Area,
                                                PSLstatus = salesoffice.FirstOrDefault().SapPSLStatus,
                                                PSLId = salesoffice.FirstOrDefault().PSLId,
                                                ageIndicator = salesoffice.FirstOrDefault().PslAge,
                                                serialNumber = salesoffice.FirstOrDefault().SerialNumber,
                                                Model = salesoffice.FirstOrDefault().Model
                                            }).OrderBy(odb => odb.SalesOffice).Take(100);

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.SalesOffice = item.SalesOffice;
                data.Add(dataPSL);
            }
            return data;
        }

        public List<PSLMaster> GetPSLStatus(string[] area, string[] salesOffice, string[] pslNo, int[] ageIndicator, string[] serialNumber, string[] model, string[] priority, string[] type, string termFrom, string termEnd, string releaseFrom, string releaseEnd, string inventory, string rental, string hid, string others)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.SapPSLStatus != null && s.SapPSLStatus != "");
            if (type != null)
            {
                queryData = queryData.Where(s => type.Contains(s.PSLType));
            }
            if (!string.IsNullOrWhiteSpace(termFrom) && !string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(termEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value >= convertToDateTimeFrom && s.TerminationDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(termFrom) && string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value == convertToDateTimeFrom);
            }

            if (!string.IsNullOrWhiteSpace(releaseFrom) && !string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(releaseEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value >= convertToDateTimeFrom && s.LetterDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(releaseFrom) && string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value == convertToDateTimeFrom);
            }
            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }

            if (area != null)
            {
                queryData = queryData.Where(s => area.Contains(s.Area));
            }

            if (salesOffice != null)
            {
                queryData = queryData.Where(s => salesOffice.Contains(s.SalesOffice));
            }

            if (pslNo != null)
            {
                queryData = queryData.Where(s => pslNo.Contains(s.PSLId));
            }

            if (ageIndicator != null)
            {
                queryData = queryData.Where(s => ageIndicator.Contains(s.PslAge));
            }

            if (serialNumber != null)
            {
                queryData = queryData.Where(s => serialNumber.Contains(s.SerialNumber));
            }

            if (model != null)
            {
                queryData = queryData.Where(s => model.Contains(s.Model));
            }

            if (priority != null)
            {
                queryData = queryData.Where(s => priority.Contains(s.PriorityLevel));
            }

            var listData = queryData.Where(w => w.Validation == "Outstanding").GroupBy(g => g.SapPSLStatus)
                                            .Select(pslStatus => new {
                                                PSLMasterId = pslStatus.FirstOrDefault().PSLMasterId,
                                                SalesOffice = pslStatus.FirstOrDefault().SalesOffice,
                                                Area = pslStatus.FirstOrDefault().Area,
                                                PSLstatus = pslStatus.FirstOrDefault().SapPSLStatus,
                                                PSLId = pslStatus.FirstOrDefault().PSLId,
                                                ageIndicator = pslStatus.FirstOrDefault().PslAge,
                                                serialNumber = pslStatus.FirstOrDefault().SerialNumber,
                                                Model = pslStatus.FirstOrDefault().Model
                                            }).OrderBy(odb => odb.PSLstatus).Take(100);

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.SapPSLStatus = item.PSLstatus;
                data.Add(dataPSL);
            }
            return data;
        }

        public List<PSLMaster> GetPSLNo(string[] area, string[] salesOffice, string[] pslStatus, int[] ageIndicator, string[] serialNumber, string[] model, string[] priority, string[] type, string termFrom, string termEnd, string releaseFrom, string releaseEnd, string inventory, string rental, string hid, string others)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.PSLId != null && s.PSLId != "");
            if (type != null)
            {
                queryData = queryData.Where(s => type.Contains(s.PSLType));
            }
            if (!string.IsNullOrWhiteSpace(termFrom) && !string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(termEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value >= convertToDateTimeFrom && s.TerminationDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(termFrom) && string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value == convertToDateTimeFrom);
            }

            if (!string.IsNullOrWhiteSpace(releaseFrom) && !string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(releaseEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value >= convertToDateTimeFrom && s.LetterDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(releaseFrom) && string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value == convertToDateTimeFrom);
            }

            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }

            if (area != null)
            {
                queryData = queryData.Where(s => area.Contains(s.Area));
            }

            if (salesOffice != null)
            {
                queryData = queryData.Where(s => salesOffice.Contains(s.SalesOffice));
            }

            if (pslStatus != null)
            {
                queryData = queryData.Where(s => pslStatus.Contains(s.SapPSLStatus));
            }

            if (ageIndicator != null)
            {
                queryData = queryData.Where(s => ageIndicator.Contains(s.PslAge));
            }

            if (serialNumber != null)
            {
                queryData = queryData.Where(s => serialNumber.Contains(s.SerialNumber));
            }

            if (model != null)
            {
                queryData = queryData.Where(s => model.Contains(s.Model));
            }

            if (priority != null)
            {
                queryData = queryData.Where(s => priority.Contains(s.PriorityLevel));
            }

            var listData = queryData.Where(w => w.Validation == "Outstanding").GroupBy(g => g.PSLId)
                                            .Select(pslId => new {
                                                PSLMasterId = pslId.FirstOrDefault().PSLMasterId,
                                                SalesOffice = pslId.FirstOrDefault().SalesOffice,
                                                Area = pslId.FirstOrDefault().Area,
                                                PSLstatus = pslId.FirstOrDefault().SapPSLStatus,
                                                PSLId = pslId.FirstOrDefault().PSLId,
                                                ageIndicator = pslId.FirstOrDefault().PslAge,
                                                serialNumber = pslId.FirstOrDefault().SerialNumber,
                                                Model = pslId.FirstOrDefault().Model
                                            }).OrderBy(odb => odb.PSLId).Take(100);

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.PSLId = item.PSLId;
                data.Add(dataPSL);
            }
            return data;
        }

        public List<PSLMaster> GetAgeIndicator(string[] area, string[] salesOffice, string[] pslStatus, string[] pslNo, string[] serialNumber, string[] model, string[] priority, string[] type, string termFrom, string termEnd, string releaseFrom, string releaseEnd, string inventory, string rental, string hid, string others)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.PslAge != null && s.Validation == "Outstanding");
            if (type != null)
            {
                queryData = queryData.Where(s => type.Contains(s.PSLType));
            }
            if (!string.IsNullOrWhiteSpace(termFrom) && !string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(termEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value >= convertToDateTimeFrom && s.TerminationDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(termFrom) && string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value == convertToDateTimeFrom);
            }

            if (!string.IsNullOrWhiteSpace(releaseFrom) && !string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(releaseEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value >= convertToDateTimeFrom && s.LetterDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(releaseFrom) && string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value == convertToDateTimeFrom);
            }

            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }

            if (area != null)
            {
                queryData = queryData.Where(s => area.Contains(s.Area));
            }

            if (salesOffice != null)
            {
                queryData = queryData.Where(s => salesOffice.Contains(s.SalesOffice));
            }

            if (pslStatus != null)
            {
                queryData = queryData.Where(s => pslStatus.Contains(s.SapPSLStatus));
            }

            if (pslNo != null)
            {
                queryData = queryData.Where(s => pslNo.Contains(s.PSLId));
            }

            if (serialNumber != null)
            {
                queryData = queryData.Where(s => serialNumber.Contains(s.SerialNumber));
            }

            if (model != null)
            {
                queryData = queryData.Where(s => model.Contains(s.Model));
            }

            if (priority != null)
            {
                queryData = queryData.Where(s => priority.Contains(s.PriorityLevel));
            }

            var listData = queryData.Where(w => w.Validation != "Completed").GroupBy(g => g.PslAge)
                                            .Select(pslAge => new {
                                                PSLMasterId = pslAge.FirstOrDefault().PSLMasterId,
                                                SalesOffice = pslAge.FirstOrDefault().SalesOffice,
                                                Area = pslAge.FirstOrDefault().Area,
                                                PSLstatus = pslAge.FirstOrDefault().SapPSLStatus,
                                                PSLId = pslAge.FirstOrDefault().PSLId,
                                                ageIndicator = pslAge.FirstOrDefault().PslAge,
                                                serialNumber = pslAge.FirstOrDefault().SerialNumber,
                                                Model = pslAge.FirstOrDefault().Model
                                            }).OrderBy(odb => odb.ageIndicator).Take(100);

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.PslAge = item.ageIndicator;
                data.Add(dataPSL);
            }
            return data;
        }

        public List<PSLMaster> GetSerialNumber(string[] area, string[] salesOffice, string[] pslStatus, string[] pslNo, int[] ageIndicator, string[] model, string[] priority, string[] type, string termFrom, string termEnd, string releaseFrom, string releaseEnd, string inventory, string rental, string hid, string others)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.SerialNumber != null && s.SerialNumber != "");
            if (type != null)
            {
                queryData = queryData.Where(s => type.Contains(s.PSLType));
            }
            if (!string.IsNullOrWhiteSpace(termFrom) && !string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(termEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value >= convertToDateTimeFrom && s.TerminationDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(termFrom) && string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value == convertToDateTimeFrom);
            }

            if (!string.IsNullOrWhiteSpace(releaseFrom) && !string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(releaseEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value >= convertToDateTimeFrom && s.LetterDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(releaseFrom) && string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value == convertToDateTimeFrom);
            }

            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }

            if (area != null)
            {
                queryData = queryData.Where(s => area.Contains(s.Area));
            }

            if (salesOffice != null)
            {
                queryData = queryData.Where(s => salesOffice.Contains(s.SalesOffice));
            }

            if (pslStatus != null)
            {
                queryData = queryData.Where(s => pslStatus.Contains(s.SapPSLStatus));
            }

            if (pslNo != null)
            {
                queryData = queryData.Where(s => pslNo.Contains(s.PSLId));
            }

            if (ageIndicator != null)
            {
                queryData = queryData.Where(s => ageIndicator.Contains(s.PslAge));
            }

            if (model != null)
            {
                queryData = queryData.Where(s => model.Contains(s.Model));
            }

            if (priority != null)
            {
                queryData = queryData.Where(s => priority.Contains(s.PriorityLevel));
            }

            var listData = queryData.Where(w => w.Validation == "Outstanding").GroupBy(g => g.SerialNumber)
                                            .Select(sn => new {
                                                PSLMasterId = sn.FirstOrDefault().PSLMasterId,
                                                SalesOffice = sn.FirstOrDefault().SalesOffice,
                                                Area = sn.FirstOrDefault().Area,
                                                PSLstatus = sn.FirstOrDefault().SapPSLStatus,
                                                PSLId = sn.FirstOrDefault().PSLId,
                                                ageIndicator = sn.FirstOrDefault().PslAge,
                                                serialNumber = sn.FirstOrDefault().SerialNumber,
                                                Model = sn.FirstOrDefault().Model
                                            }).OrderBy(odb => odb.serialNumber).Take(100);

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.SerialNumber = item.serialNumber;
                data.Add(dataPSL);
            }
            return data;
        }

        public List<PSLMaster> GetModel(string[] area, string[] salesOffice, string[] pslStatus, string[] pslNo, int[] ageIndicator, string[] serialNumber, string[] priority, string[] type, string termFrom, string termEnd, string releaseFrom, string releaseEnd, string inventory, string rental, string hid, string others)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.Model != null && s.Model != "");
            if (type != null)
            {
                queryData = queryData.Where(s => type.Contains(s.PSLType));
            }
            if (!string.IsNullOrWhiteSpace(termFrom) && !string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(termEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value >= convertToDateTimeFrom && s.TerminationDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(termFrom) && string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value == convertToDateTimeFrom);
            }

            if (!string.IsNullOrWhiteSpace(releaseFrom) && !string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(releaseEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value >= convertToDateTimeFrom && s.LetterDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(releaseFrom) && string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value == convertToDateTimeFrom);
            }

            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }

            if (area != null)
            {
                queryData = queryData.Where(s => area.Contains(s.Area));
            }

            if (salesOffice != null)
            {
                queryData = queryData.Where(s => salesOffice.Contains(s.SalesOffice));
            }

            if (pslStatus != null)
            {
                queryData = queryData.Where(s => pslStatus.Contains(s.SapPSLStatus));
            }

            if (pslNo != null)
            {
                queryData = queryData.Where(s => pslNo.Contains(s.PSLId));
            }

            if (ageIndicator != null)
            {
                queryData = queryData.Where(s => ageIndicator.Contains(s.PslAge));
            }

            if (serialNumber != null)
            {
                queryData = queryData.Where(s => serialNumber.Contains(s.SerialNumber));
            }

            if (priority != null)
            {
                queryData = queryData.Where(s => priority.Contains(s.PriorityLevel));
            }

            var listData = queryData.Where(w => w.Validation == "Outstanding").GroupBy(g => g.Model)
                                            .Select(model => new {
                                                PSLMasterId = model.FirstOrDefault().PSLMasterId,
                                                SalesOffice = model.FirstOrDefault().SalesOffice,
                                                Area = model.FirstOrDefault().Area,
                                                PSLstatus = model.FirstOrDefault().SapPSLStatus,
                                                PSLId = model.FirstOrDefault().PSLId,
                                                ageIndicator = model.FirstOrDefault().PslAge,
                                                serialNumber = model.FirstOrDefault().SerialNumber,
                                                Model = model.FirstOrDefault().Model
                                            }).OrderBy(odb => odb.Model).Take(100);

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.Model = item.Model;
                data.Add(dataPSL);
            }
            return data;
        }
         
        public List<PSLMaster> GetPriorityLevel(string[] area, string[] salesOffice, string[] pslStatus, string[] pslNo, int[] ageIndicator, string[] serialNumber, string[] model, string[] type, string termFrom, string termEnd, string releaseFrom, string releaseEnd, string inventory, string rental, string hid, string others)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.PriorityLevel != null && s.PriorityLevel != "");
            if (type != null)
            {
                queryData = queryData.Where(s => type.Contains(s.PSLType));
            }
            if (!string.IsNullOrWhiteSpace(termFrom) && !string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(termEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value >= convertToDateTimeFrom && s.TerminationDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(termFrom) && string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value == convertToDateTimeFrom);
            }

            if (!string.IsNullOrWhiteSpace(releaseFrom) && !string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(releaseEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value >= convertToDateTimeFrom && s.LetterDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(releaseFrom) && string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value == convertToDateTimeFrom);
            }

            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }

            if (area != null)
            {
                queryData = queryData.Where(s => area.Contains(s.Area));
            }

            if (salesOffice != null)
            {
                queryData = queryData.Where(s => salesOffice.Contains(s.SalesOffice));
            }

            if (pslStatus != null)
            {
                queryData = queryData.Where(s => pslStatus.Contains(s.SapPSLStatus));
            }

            if (pslNo != null)
            {
                queryData = queryData.Where(s => pslNo.Contains(s.PSLId));
            }

            if (ageIndicator != null)
            {
                queryData = queryData.Where(s => ageIndicator.Contains(s.PslAge));
            }

            if (serialNumber != null)
            {
                queryData = queryData.Where(s => serialNumber.Contains(s.SerialNumber));
            }

            if (model != null)
            {
                queryData = queryData.Where(s => model.Contains(s.Model));
            }

            var listData = queryData.Where(w => w.Validation == "Outstanding").GroupBy(g => g.PriorityLevel)
                                            .Select(priority => new {
                                                PSLMasterId = priority.FirstOrDefault().PSLMasterId,
                                                SalesOffice = priority.FirstOrDefault().SalesOffice,
                                                Area = priority.FirstOrDefault().Area,
                                                PSLstatus = priority.FirstOrDefault().SapPSLStatus,
                                                PSLId = priority.FirstOrDefault().PSLId,
                                                ageIndicator = priority.FirstOrDefault().PslAge,
                                                serialNumber = priority.FirstOrDefault().SerialNumber,
                                                Model = priority.FirstOrDefault().Model,
                                                Priority = priority.FirstOrDefault().PriorityLevel
                                            }).OrderBy(odb => odb.Priority).Take(100);

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.PriorityLevel = item.Priority;
                data.Add(dataPSL);
            }
            return data;
        }


        public List<PSLMaster> GetAreaForPSLExecution(string[] model, string[] pslNo, string[] pslStatus, string[] soStatus, string inventory, string rental, string hid, string others)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.Area != null && s.Area != "");
            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }
            if (pslNo != null)
            {
                queryData = queryData.Where(s => pslNo.Contains(s.PSLId));
            }

            if (pslStatus != null)
            {
                queryData = queryData.Where(s => pslStatus.Contains(s.SapPSLStatus));
            }

            if (model != null)
            {
                queryData = queryData.Where(s => model.Contains(s.Model));
            }

            if (soStatus != null)
            {
                queryData = queryData.Where(s => soStatus.Contains(s.ServiceOrderStatusDesc));
            }


            var listData = queryData.GroupBy(g => g.Area)
                                            .Select(area => new {
                                                PSLMasterId = area.FirstOrDefault().PSLMasterId,
                                                Area = area.FirstOrDefault().Area,
                                                PSLstatus = area.FirstOrDefault().SapPSLStatus,
                                                PSLId = area.FirstOrDefault().PSLId,
                                                Model = area.FirstOrDefault().Model,
                                                SoStatus = area.FirstOrDefault().ServiceOrderStatusDesc
                                            }).Take(100).OrderBy(osb => osb.Area).ToList();

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.Area = item.Area;
                data.Add(dataPSL);
            }
            return data;
        }

        public List<PSLMaster> GetModelForPSLExecution(string[] area, string[] pslNo, string[] pslStatus, string[] soStatus, string inventory, string rental, string hid, string others)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.Model != null && s.Model != "");
            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }
            if (pslNo != null)
            {
                queryData = queryData.Where(s => pslNo.Contains(s.PSLId));
            }

            if (pslStatus != null)
            {
                queryData = queryData.Where(s => pslStatus.Contains(s.SapPSLStatus));
            }

            if (area != null)
            {
                queryData = queryData.Where(s => area.Contains(s.Area));
            }

            if (soStatus != null)
            {
                queryData = queryData.Where(s => soStatus.Contains(s.ServiceOrderStatusDesc));
            }


            var listData = queryData.GroupBy(g => g.Model)
                                            .Select(model => new {
                                                PSLMasterId = model.FirstOrDefault().PSLMasterId,
                                                Area = model.FirstOrDefault().Area,
                                                PSLstatus = model.FirstOrDefault().SapPSLStatus,
                                                PSLId = model.FirstOrDefault().PSLId,
                                                Model = model.FirstOrDefault().Model,
                                                SoStatus = model.FirstOrDefault().ServiceOrderStatusDesc
                                            }).Take(100).OrderBy(osb => osb.Model).ToList();

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.Model = item.Model;
                data.Add(dataPSL);
            }
            return data;
        }

        public List<PSLMaster> GetPSLNoForPSLExecution(string[] area, string[] model, string[] pslStatus, string[] soStatus, string inventory, string rental, string hid, string others)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.PSLId != null && s.PSLId != "");
            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }
            if (area != null)
            {
                queryData = queryData.Where(s => area.Contains(s.Area));
            }

            if (pslStatus != null)
            {
                queryData = queryData.Where(s => pslStatus.Contains(s.SapPSLStatus));
            }

            if (model != null)
            {
                queryData = queryData.Where(s => model.Contains(s.Model));
            }

            if (soStatus != null)
            {
                queryData = queryData.Where(s => soStatus.Contains(s.ServiceOrderStatusDesc));
            }


            var listData = queryData.GroupBy(g => g.PSLId)
                                            .Select(pslNo => new {
                                                PSLMasterId = pslNo.FirstOrDefault().PSLMasterId,
                                                Area = pslNo.FirstOrDefault().Area,
                                                PSLstatus = pslNo.FirstOrDefault().SapPSLStatus,
                                                PSLId = pslNo.FirstOrDefault().PSLId,
                                                Model = pslNo.FirstOrDefault().Model,
                                                SoStatus = pslNo.FirstOrDefault().ServiceOrderStatusDesc
                                            }).Take(100).OrderBy(osb => osb.PSLId).ToList();

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.PSLId = item.PSLId;
                data.Add(dataPSL);
            }
            return data;
        }

        public List<PSLMaster> GetPSLStatusForPSLExecution(string[] area, string[] model, string[] pslNo, string[] soStatus, string inventory, string rental, string hid, string others)
        {
             var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.SapPSLStatus != null && s.SapPSLStatus != "");
            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }
            if (area != null)
            {
                queryData = queryData.Where(s => area.Contains(s.Area));
            }

            if (pslNo != null)
            {
                queryData = queryData.Where(s => pslNo.Contains(s.PSLId));
            }

            if (model != null)
            {
                queryData = queryData.Where(s => model.Contains(s.Model));
            }

            if (soStatus != null)
            {
                queryData = queryData.Where(s => soStatus.Contains(s.ServiceOrderStatusDesc));
            }


            var listData = queryData.GroupBy(g => g.SapPSLStatus)
                                            .Select(pslStatus => new {
                                                PSLMasterId = pslStatus.FirstOrDefault().PSLMasterId,
                                                Area = pslStatus.FirstOrDefault().Area,
                                                PSLstatus = pslStatus.FirstOrDefault().SapPSLStatus,
                                                PSLId = pslStatus.FirstOrDefault().PSLId,
                                                Model = pslStatus.FirstOrDefault().Model,
                                                SoStatus = pslStatus.FirstOrDefault().ServiceOrderStatusDesc
                                            }).Take(100).OrderBy(osb => osb.PSLstatus).ToList();

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.SapPSLStatus = item.PSLstatus;
                data.Add(dataPSL);
            }
            return data;
        }

        public List<PSLMaster> GetSoStatusForPSLExecution(string[] area, string[] model, string[] pslStatus, string[] pslNo, string inventory, string rental, string hid, string others)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.ServiceOrderStatusDesc != null && s.ServiceOrderStatusDesc != "");
            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }
            if (area != null)
            {
                queryData = queryData.Where(s => area.Contains(s.Area));
            }

            if (pslNo != null)
            {
                queryData = queryData.Where(s => pslNo.Contains(s.PSLId));
            }

            if (model != null)
            {
                queryData = queryData.Where(s => model.Contains(s.Model));
            }

            if (pslStatus != null)
            {
                queryData = queryData.Where(s => pslStatus.Contains(s.SapPSLStatus));
            }


            var listData = queryData.GroupBy(g => g.ServiceOrderStatusDesc)
                                            .Select(soStatus => new {
                                                PSLMasterId = soStatus.FirstOrDefault().PSLMasterId,
                                                Area = soStatus.FirstOrDefault().Area,
                                                PSLstatus = soStatus.FirstOrDefault().SapPSLStatus,
                                                PSLId = soStatus.FirstOrDefault().PSLId,
                                                Model = soStatus.FirstOrDefault().Model,
                                                SoStatus = soStatus.FirstOrDefault().ServiceOrderStatusDesc
                                            }).Take(100).OrderBy(osb => osb.SoStatus).ToList();

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.ServiceOrderStatusDesc = item.SoStatus;
                data.Add(dataPSL);
            }
            return data;
        }


        public List<PSLMaster> GetPSLTypeForPIP(string[] area, string[] storeName)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.PSLType != null && s.PSLType != "" && s.PSLType == "A" && s.PSLType == "C" && s.PSLType == "P" && s.PSLType == "S");

            if (area != null)
            {
                queryData = queryData.Where(s => area.Contains(s.Area));
            }

            if (storeName != null)
            {
                queryData = queryData.Where(s => storeName.Contains(s.SalesOffice));
            }


            var listData = queryData.GroupBy(g => g.PSLType)
                                            .Select(pslType => new {
                                                PSLMasterId = pslType.FirstOrDefault().PSLMasterId,
                                                Area = pslType.FirstOrDefault().Area,
                                                PSLType = pslType.FirstOrDefault().PSLType,
                                                PSLstatus = pslType.FirstOrDefault().SapPSLStatus,
                                                PSLId = pslType.FirstOrDefault().PSLId,
                                                Model = pslType.FirstOrDefault().Model,
                                                SoStatus = pslType.FirstOrDefault().ServiceOrderStatusDesc
                                            }).Take(100).OrderBy(osb => osb.PSLType).ToList();

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.PSLType = item.PSLType;
                data.Add(dataPSL);
            }
            return data;
        }

        public List<PSLMaster> GetAreaForPIP(string[] psltype, string[] storeName, string releaseFrom, string releaseEnd, string inventory, string rental, string hid, string others)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.Area != null && s.Area != "");
            if (!string.IsNullOrWhiteSpace(releaseFrom) && !string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(releaseEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value >= convertToDateTimeFrom && s.LetterDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(releaseFrom) && string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value == convertToDateTimeFrom);
            }
            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }
            if (psltype != null)
            {
                queryData = queryData.Where(s => psltype.Contains(s.PSLType));
            }

            if (storeName != null)
            {
                queryData = queryData.Where(s => storeName.Contains(s.SalesOffice));
            }


            var listData = queryData.GroupBy(g => g.Area)
                                            .Select(area => new {
                                                PSLMasterId = area.FirstOrDefault().PSLMasterId,
                                                Area = area.FirstOrDefault().Area,
                                                PSLType = area.FirstOrDefault().PSLType,
                                                PSLstatus = area.FirstOrDefault().SapPSLStatus,
                                                PSLId = area.FirstOrDefault().PSLId,
                                                Model = area.FirstOrDefault().Model,
                                                SoStatus = area.FirstOrDefault().ServiceOrderStatusDesc
                                            }).Take(100).OrderBy(osb => osb.Area).ToList();

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.Area = item.Area;
                data.Add(dataPSL);
            }
            return data;
        }

        public List<PSLMaster> GetSalesOfficeForPIP(string[] psltype, string[] area, string releaseFrom, string releaseEnd, string inventory, string rental, string hid, string others)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.SalesOffice != null && s.SalesOffice != "");
            if (!string.IsNullOrWhiteSpace(releaseFrom) && !string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(releaseEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value >= convertToDateTimeFrom && s.LetterDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(releaseFrom) && string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value == convertToDateTimeFrom);
            }
            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }
            if (psltype != null)
            {
                queryData = queryData.Where(s => psltype.Contains(s.PSLType));
            }

            if (area != null)
            {
                queryData = queryData.Where(s => area.Contains(s.Area));
            }


            var listData = queryData.GroupBy(g => g.SalesOffice)
                                            .Select(salesOffice => new {
                                                PSLMasterId = salesOffice.FirstOrDefault().PSLMasterId,
                                                Area = salesOffice.FirstOrDefault().Area,
                                                PSLType = salesOffice.FirstOrDefault().PSLType,
                                                PSLstatus = salesOffice.FirstOrDefault().SapPSLStatus,
                                                PSLId = salesOffice.FirstOrDefault().PSLId,
                                                Model = salesOffice.FirstOrDefault().Model,
                                                SoStatus = salesOffice.FirstOrDefault().ServiceOrderStatusDesc,
                                                SalesOffice = salesOffice.FirstOrDefault().SalesOffice
                                            }).Take(100).OrderBy(osb => osb.SalesOffice).ToList();

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.SalesOffice = item.SalesOffice;
                data.Add(dataPSL);
            }
            return data;
        }

        public List<PSLMaster> GetPSLTypeForPSP(string[] area, string[] storeName)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.PSLType != null && s.PSLType != "" && s.PSLType == "A" && s.PSLType == "C" && s.PSLType == "P" && s.PSLType == "S");

            if (area != null)
            {
                queryData = queryData.Where(s => area.Contains(s.Area));
            }

            if (storeName != null)
            {
                queryData = queryData.Where(s => storeName.Contains(s.SalesOffice));
            }


            var listData = queryData.GroupBy(g => g.PSLType)
                                            .Select(pslType => new {
                                                PSLMasterId = pslType.FirstOrDefault().PSLMasterId,
                                                Area = pslType.FirstOrDefault().Area,
                                                PSLType = pslType.FirstOrDefault().PSLType,
                                                PSLstatus = pslType.FirstOrDefault().SapPSLStatus,
                                                PSLId = pslType.FirstOrDefault().PSLId,
                                                Model = pslType.FirstOrDefault().Model,
                                                SoStatus = pslType.FirstOrDefault().ServiceOrderStatusDesc
                                            }).Take(100).OrderBy(osb => osb.PSLType).ToList();

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.PSLType = item.PSLType;
                data.Add(dataPSL);
            }
            return data;
        }

        public List<PSLMaster> GetAreaForPSP(string[] psltype, string[] storeName, string releaseFrom, string releaseEnd, string inventory, string rental, string hid, string others)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.Area != null && s.Area != "");
            if (!string.IsNullOrWhiteSpace(releaseFrom) && !string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(releaseEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value >= convertToDateTimeFrom && s.TerminationDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(releaseFrom) && string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value == convertToDateTimeFrom);
            }
            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }
            if (psltype != null)
            {
                queryData = queryData.Where(s => psltype.Contains(s.PSLType));
            }

            if (storeName != null)
            {
                queryData = queryData.Where(s => storeName.Contains(s.SalesOffice));
            }


            var listData = queryData.GroupBy(g => g.Area)
                                            .Select(area => new {
                                                PSLMasterId = area.FirstOrDefault().PSLMasterId,
                                                Area = area.FirstOrDefault().Area,
                                                PSLType = area.FirstOrDefault().PSLType,
                                                PSLstatus = area.FirstOrDefault().SapPSLStatus,
                                                PSLId = area.FirstOrDefault().PSLId,
                                                Model = area.FirstOrDefault().Model,
                                                SoStatus = area.FirstOrDefault().ServiceOrderStatusDesc
                                            }).Take(100).OrderBy(osb => osb.Area).ToList();

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.Area = item.Area;
                data.Add(dataPSL);
            }
            return data;
        }

        public List<PSLMaster> GetSalesOfficeForPSP(string[] psltype, string[] area, string releaseFrom, string releaseEnd, string inventory, string rental, string hid, string others)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.SalesOffice != null && s.SalesOffice != "");
            if (!string.IsNullOrWhiteSpace(releaseFrom) && !string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(releaseEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value >= convertToDateTimeFrom && s.TerminationDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(releaseFrom) && string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value == convertToDateTimeFrom);
            }
            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }
            if (psltype != null)
            {
                queryData = queryData.Where(s => psltype.Contains(s.PSLType));
            }

            if (area != null)
            {
                queryData = queryData.Where(s => area.Contains(s.Area));
            }


            var listData = queryData.GroupBy(g => g.SalesOffice)
                                            .Select(salesOffice => new {
                                                PSLMasterId = salesOffice.FirstOrDefault().PSLMasterId,
                                                Area = salesOffice.FirstOrDefault().Area,
                                                PSLType = salesOffice.FirstOrDefault().PSLType,
                                                PSLstatus = salesOffice.FirstOrDefault().SapPSLStatus,
                                                PSLId = salesOffice.FirstOrDefault().PSLId,
                                                Model = salesOffice.FirstOrDefault().Model,
                                                SoStatus = salesOffice.FirstOrDefault().ServiceOrderStatusDesc,
                                                SalesOffice = salesOffice.FirstOrDefault().SalesOffice
                                            }).Take(100).OrderBy(osb => osb.SalesOffice).ToList();

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.SalesOffice = item.SalesOffice;
                data.Add(dataPSL);
            }
            return data;
        }


        public List<PSLMaster> GetModelForSummary(string[] area, string[] salesoffice, string[] psltype, string termFrom, string termEnd, string releaseFrom, string releaseEnd, string inventory, string rental, string hid, string others)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.Model != null && s.Model != "");
            if (!string.IsNullOrWhiteSpace(termFrom) && !string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(termEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value >= convertToDateTimeFrom && s.TerminationDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(termFrom) && string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value == convertToDateTimeFrom);
            }

            if (!string.IsNullOrWhiteSpace(releaseFrom) && !string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(releaseEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value >= convertToDateTimeFrom && s.LetterDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(releaseFrom) && string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value == convertToDateTimeFrom);
            }

            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }
            if (area != null)
            {
                queryData = queryData.Where(s => area.Contains(s.Area));
            }

            if (salesoffice != null)
            {
                queryData = queryData.Where(s => salesoffice.Contains(s.SalesOffice));
            }

            if (psltype != null)
            {
                queryData = queryData.Where(s => psltype.Contains(s.PSLType));
            }


            var listData = queryData.GroupBy(g => g.Model)
                                            .Select(model => new {
                                                PSLMasterId = model.FirstOrDefault().PSLMasterId,
                                                Area = model.FirstOrDefault().Area,
                                                PSLType = model.FirstOrDefault().PSLType,
                                                PSLstatus = model.FirstOrDefault().SapPSLStatus,
                                                PSLId = model.FirstOrDefault().PSLId,
                                                Model = model.FirstOrDefault().Model,
                                                SoStatus = model.FirstOrDefault().ServiceOrderStatusDesc,
                                                SalesOffice = model.FirstOrDefault().SalesOffice
                                            }).Take(100).OrderBy(osb => osb.Model).ToList();

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.Model = item.Model;
                data.Add(dataPSL);
            }
            return data;
        }

        public List<PSLMaster> GetPSLTypeForSummary(string[] area, string[] salesoffice, string[] model, string termFrom, string termEnd, string releaseFrom, string releaseEnd, string inventory, string rental, string hid, string others)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.PSLType != null && s.PSLType != "" && s.PSLType == "A" && s.PSLType == "C" && s.PSLType == "P" && s.PSLType == "S");
            if (!string.IsNullOrWhiteSpace(termFrom) && !string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(termEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value >= convertToDateTimeFrom && s.TerminationDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(termFrom) && string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value == convertToDateTimeFrom);
            }

            if (!string.IsNullOrWhiteSpace(releaseFrom) && !string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(releaseEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value >= convertToDateTimeFrom && s.LetterDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(releaseFrom) && string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value == convertToDateTimeFrom);
            }

            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }
            if (area != null)
            {
                queryData = queryData.Where(s => area.Contains(s.Area));
            }

            if (salesoffice != null)
            {
                queryData = queryData.Where(s => salesoffice.Contains(s.SalesOffice));
            }

            if (model != null)
            {
                queryData = queryData.Where(s => model.Contains(s.Model));
            }


            var listData = queryData.GroupBy(g => g.PSLType)
                                            .Select(psltype => new {
                                                PSLMasterId = psltype.FirstOrDefault().PSLMasterId,
                                                Area = psltype.FirstOrDefault().Area,
                                                PSLType = psltype.FirstOrDefault().PSLType,
                                                PSLstatus = psltype.FirstOrDefault().SapPSLStatus,
                                                PSLId = psltype.FirstOrDefault().PSLId,
                                                Model = psltype.FirstOrDefault().Model,
                                                SoStatus = psltype.FirstOrDefault().ServiceOrderStatusDesc,
                                                SalesOffice = psltype.FirstOrDefault().SalesOffice
                                            }).Take(100).OrderBy(osb => osb.PSLType).ToList();

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.PSLType = item.PSLType;
                data.Add(dataPSL);
            }
            return data;
        }

        public List<PSLMaster> GetSalesOfficeForSummary(string[] area, string[] model, string[] psltype, string termFrom, string termEnd, string releaseFrom, string releaseEnd, string inventory, string rental, string hid, string others)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.SalesOffice != null && s.SalesOffice != "");
            if (!string.IsNullOrWhiteSpace(termFrom) && !string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(termEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value >= convertToDateTimeFrom && s.TerminationDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(termFrom) && string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value == convertToDateTimeFrom);
            }

            if (!string.IsNullOrWhiteSpace(releaseFrom) && !string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(releaseEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value >= convertToDateTimeFrom && s.LetterDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(releaseFrom) && string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value == convertToDateTimeFrom);
            }

            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }
            if (area != null)
            {
                queryData = queryData.Where(s => area.Contains(s.Area));
            }

            if (psltype != null)
            {
                queryData = queryData.Where(s => psltype.Contains(s.PSLType));
            }

            if (model != null)
            {
                queryData = queryData.Where(s => model.Contains(s.Model));
            }


            var listData = queryData.GroupBy(g => g.SalesOffice)
                                            .Select(salesoffice => new {
                                                PSLMasterId = salesoffice.FirstOrDefault().PSLMasterId,
                                                Area = salesoffice.FirstOrDefault().Area,
                                                PSLType = salesoffice.FirstOrDefault().PSLType,
                                                PSLstatus = salesoffice.FirstOrDefault().SapPSLStatus,
                                                PSLId = salesoffice.FirstOrDefault().PSLId,
                                                Model = salesoffice.FirstOrDefault().Model,
                                                SoStatus = salesoffice.FirstOrDefault().ServiceOrderStatusDesc,
                                                SalesOffice = salesoffice.FirstOrDefault().SalesOffice
                                            }).Take(100).OrderBy(osb => osb.SalesOffice).ToList();

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.SalesOffice = item.SalesOffice;
                data.Add(dataPSL);
            }
            return data;
        }

        public List<PSLMaster> GetAreaForSummary(string[] salesoffice, string[] model, string[] psltype, string termFrom, string termEnd, string releaseFrom, string releaseEnd, string inventory, string rental, string hid, string others)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.Area != null && s.Area != "");
            if (!string.IsNullOrWhiteSpace(termFrom) && !string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(termEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value >= convertToDateTimeFrom && s.TerminationDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(termFrom) && string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value == convertToDateTimeFrom);
            }

            if (!string.IsNullOrWhiteSpace(releaseFrom) && !string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(releaseEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value >= convertToDateTimeFrom && s.LetterDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(releaseFrom) && string.IsNullOrWhiteSpace(releaseEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.LetterDate.Value == convertToDateTimeFrom);
            }

            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }
            if (salesoffice != null)
            {
                queryData = queryData.Where(s => salesoffice.Contains(s.SalesOffice));
            }

            if (psltype != null)
            {
                queryData = queryData.Where(s => psltype.Contains(s.PSLType));
            }

            if (model != null)
            {
                queryData = queryData.Where(s => model.Contains(s.Model));
            }


            var listData = queryData.GroupBy(g => g.Area)
                                            .Select(area => new {
                                                PSLMasterId = area.FirstOrDefault().PSLMasterId,
                                                Area = area.FirstOrDefault().Area,
                                                PSLType = area.FirstOrDefault().PSLType,
                                                PSLstatus = area.FirstOrDefault().SapPSLStatus,
                                                PSLId = area.FirstOrDefault().PSLId,
                                                Model = area.FirstOrDefault().Model,
                                                SoStatus = area.FirstOrDefault().ServiceOrderStatusDesc,
                                                SalesOffice = area.FirstOrDefault().SalesOffice
                                            }).Take(100).OrderBy(osb => osb.Area).ToList();

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.Area = item.Area;
                data.Add(dataPSL);
            }
            return data;
        }


        public List<PSLMaster> GetModelForCostRecovery(string[] area, string[] salesoffice, string[] psltype, string[] pslstatus, string termFrom, string termEnd, string inventory, string rental, string hid, string others)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.Model != null && s.Model != "");
            if (!string.IsNullOrWhiteSpace(termFrom) && !string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(termEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value >= convertToDateTimeFrom && s.TerminationDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(termFrom) && string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value == convertToDateTimeFrom);
            }
            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }
            if (area != null)
            {
                queryData = queryData.Where(s => area.Contains(s.Area));
            }

            if (salesoffice != null)
            {
                queryData = queryData.Where(s => salesoffice.Contains(s.SalesOffice));
            }

            if (psltype != null)
            {
                queryData = queryData.Where(s => psltype.Contains(s.PSLType));
            }

            if (pslstatus != null)
            {
                queryData = queryData.Where(s => pslstatus.Contains(s.SapPSLStatus));
            }


            var listData = queryData.GroupBy(g => g.Model)
                                            .Select(model => new {
                                                PSLMasterId = model.FirstOrDefault().PSLMasterId,
                                                Area = model.FirstOrDefault().Area,
                                                PSLType = model.FirstOrDefault().PSLType,
                                                PSLstatus = model.FirstOrDefault().SapPSLStatus,
                                                PSLId = model.FirstOrDefault().PSLId,
                                                Model = model.FirstOrDefault().Model,
                                                SoStatus = model.FirstOrDefault().ServiceOrderStatusDesc,
                                                SalesOffice = model.FirstOrDefault().SalesOffice
                                            }).Take(100).OrderBy(osb => osb.Model).ToList();

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.Model = item.Model;
                data.Add(dataPSL);
            }
            return data;
        }

        public List<PSLMaster> GetPSLTypeForCostRecovery(string[] area, string[] salesoffice, string[] model, string[] pslstatus, string termFrom, string termEnd, string inventory, string rental, string hid, string others)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.PSLType != null && s.PSLType != "" && s.PSLType == "A" && s.PSLType == "C" && s.PSLType == "P" && s.PSLType == "S");
            if (!string.IsNullOrWhiteSpace(termFrom) && !string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(termEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value >= convertToDateTimeFrom && s.TerminationDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(termFrom) && string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value == convertToDateTimeFrom);
            }
            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }
            if (area != null)
            {
                queryData = queryData.Where(s => area.Contains(s.Area));
            }

            if (salesoffice != null)
            {
                queryData = queryData.Where(s => salesoffice.Contains(s.SalesOffice));
            }

            if (model != null)
            {
                queryData = queryData.Where(s => model.Contains(s.Model));
            }

            if (pslstatus != null)
            {
                queryData = queryData.Where(s => pslstatus.Contains(s.SapPSLStatus));
            }


            var listData = queryData.GroupBy(g => g.PSLType)
                                            .Select(psltype => new {
                                                PSLMasterId = psltype.FirstOrDefault().PSLMasterId,
                                                Area = psltype.FirstOrDefault().Area,
                                                PSLType = psltype.FirstOrDefault().PSLType,
                                                PSLstatus = psltype.FirstOrDefault().SapPSLStatus,
                                                PSLId = psltype.FirstOrDefault().PSLId,
                                                Model = psltype.FirstOrDefault().Model,
                                                SoStatus = psltype.FirstOrDefault().ServiceOrderStatusDesc,
                                                SalesOffice = psltype.FirstOrDefault().SalesOffice
                                            }).Take(100).OrderBy(osb => osb.PSLType).ToList();

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.PSLType = item.PSLType;
                data.Add(dataPSL);
            }
            return data;
        }

        public List<PSLMaster> GetSalesOfficeForCostRecovery(string[] area, string[] model, string[] psltype, string[] pslstatus, string termFrom, string termEnd, string inventory, string rental, string hid, string others)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.SalesOffice != null && s.SalesOffice != "");
            if (!string.IsNullOrWhiteSpace(termFrom) && !string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(termEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value >= convertToDateTimeFrom && s.TerminationDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(termFrom) && string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value == convertToDateTimeFrom);
            }
            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }
            if (area != null)
            {
                queryData = queryData.Where(s => area.Contains(s.Area));
            }

            if (psltype != null)
            {
                queryData = queryData.Where(s => psltype.Contains(s.PSLType));
            }

            if (model != null)
            {
                queryData = queryData.Where(s => model.Contains(s.Model));
            }

            if (pslstatus != null)
            {
                queryData = queryData.Where(s => pslstatus.Contains(s.SapPSLStatus));
            }


            var listData = queryData.GroupBy(g => g.SalesOffice)
                                            .Select(salesoffice => new {
                                                PSLMasterId = salesoffice.FirstOrDefault().PSLMasterId,
                                                Area = salesoffice.FirstOrDefault().Area,
                                                PSLType = salesoffice.FirstOrDefault().PSLType,
                                                PSLstatus = salesoffice.FirstOrDefault().SapPSLStatus,
                                                PSLId = salesoffice.FirstOrDefault().PSLId,
                                                Model = salesoffice.FirstOrDefault().Model,
                                                SoStatus = salesoffice.FirstOrDefault().ServiceOrderStatusDesc,
                                                SalesOffice = salesoffice.FirstOrDefault().SalesOffice
                                            }).Take(100).OrderBy(osb => osb.SalesOffice).ToList();

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.SalesOffice = item.SalesOffice;
                data.Add(dataPSL);
            }
            return data;
        }

        public List<PSLMaster> GetAreaForCostRecovery(string[] salesoffice, string[] model, string[] psltype, string[] pslstatus, string termFrom, string termEnd, string inventory, string rental, string hid, string others)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.Area != null && s.Area != "");
            if (!string.IsNullOrWhiteSpace(termFrom) && !string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(termEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value >= convertToDateTimeFrom && s.TerminationDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(termFrom) && string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value == convertToDateTimeFrom);
            }
            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }
            if (salesoffice != null)
            {
                queryData = queryData.Where(s => salesoffice.Contains(s.SalesOffice));
            }

            if (psltype != null)
            {
                queryData = queryData.Where(s => psltype.Contains(s.PSLType));
            }

            if (model != null)
            {
                queryData = queryData.Where(s => model.Contains(s.Model));
            }

            if (pslstatus != null)
            {
                queryData = queryData.Where(s => pslstatus.Contains(s.SapPSLStatus));
            }


            var listData = queryData.GroupBy(g => g.Area)
                                            .Select(area => new {
                                                PSLMasterId = area.FirstOrDefault().PSLMasterId,
                                                Area = area.FirstOrDefault().Area,
                                                PSLType = area.FirstOrDefault().PSLType,
                                                PSLstatus = area.FirstOrDefault().SapPSLStatus,
                                                PSLId = area.FirstOrDefault().PSLId,
                                                Model = area.FirstOrDefault().Model,
                                                SoStatus = area.FirstOrDefault().ServiceOrderStatusDesc,
                                                SalesOffice = area.FirstOrDefault().SalesOffice
                                            }).Take(100).OrderBy(osb => osb.Area).ToList();

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.Area = item.Area;
                data.Add(dataPSL);
            }
            return data;
        }

        public List<PSLMaster> GetPSLStatusForCostRecovery(string[] area, string[] salesoffice, string[] model, string[] psltype, string termFrom, string termEnd, string inventory, string rental, string hid, string others)
        {
            var data = new List<PSLMaster>();
            var queryData = _ctx.PSLMaster.Where(s => s.SapPSLStatus != null && s.SapPSLStatus != "");
            if (!string.IsNullOrWhiteSpace(termFrom) && !string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(termEnd, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value >= convertToDateTimeFrom && s.TerminationDate.Value <= convertToDateTimeEnd);
            }
            if (!string.IsNullOrWhiteSpace(termFrom) && string.IsNullOrWhiteSpace(termEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(termFrom, "dd-MM-yyyy", null);
                queryData = queryData.Where(s => s.TerminationDate.Value == convertToDateTimeFrom);
            }
            if (hid == "on" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "");
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                queryData = queryData.Where(s => s.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.RentStatus != "" || s.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                queryData = queryData.Where(s => s.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                queryData = queryData.Where(s => s.HIDStatus != "" || s.RentStatus != "" || s.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                queryData = queryData.Where(s => s.HIDStatus == "" || s.RentStatus == "" || s.Plant == "");
            }
            if (salesoffice != null)
            {
                queryData = queryData.Where(s => salesoffice.Contains(s.SalesOffice));
            }

            if (psltype != null)
            {
                queryData = queryData.Where(s => psltype.Contains(s.PSLType));
            }

            if (model != null)
            {
                queryData = queryData.Where(s => model.Contains(s.Model));
            }

            if (area != null)
            {
                queryData = queryData.Where(s => area.Contains(s.Area));
            }


            var listData = queryData.GroupBy(g => g.SapPSLStatus)
                                            .Select(pslstatus => new {
                                                PSLMasterId = pslstatus.FirstOrDefault().PSLMasterId,
                                                Area = pslstatus.FirstOrDefault().Area,
                                                PSLType = pslstatus.FirstOrDefault().PSLType,
                                                PSLstatus = pslstatus.FirstOrDefault().SapPSLStatus,
                                                PSLId = pslstatus.FirstOrDefault().PSLId,
                                                Model = pslstatus.FirstOrDefault().Model,
                                                SoStatus = pslstatus.FirstOrDefault().ServiceOrderStatusDesc,
                                                SalesOffice = pslstatus.FirstOrDefault().SalesOffice
                                            }).Take(100).OrderBy(osb => osb.PSLstatus).ToList();

            foreach (var item in listData)
            {
                var dataPSL = new PSLMaster();
                dataPSL.SapPSLStatus = item.PSLstatus;
                data.Add(dataPSL);
            }
            return data;
        }

        public List<PSLMaster> GetAreaOverview(string salesoffice, string customer, string family, string model, string serialnumber, string smurange)
        {
            //var dateRangeFrompurchasedate = "";
            //var dateRangeEndpurchasedate = "";
            //var dateRangeFromdeliverydate = "";
            //var dateRangeEnddeliverydate = "";
            //var dateRangeFromlastrepairdate = "";
            //var dateRangeEndlastrepairdate = "";
            //if (purchasedate != "" && purchasedate != null)
            //{
            //    var strList = purchasedate.Split(' ', 't', 'o', ' ');
            //    if (strList.Count() == 5)
            //    {
            //        dateRangeFrompurchasedate = strList[0];
            //        dateRangeEndpurchasedate = strList[4];
            //    }
            //    else
            //    {
            //        dateRangeFrompurchasedate = strList[0];
            //    }
            //}
            //if (deliverydate != "" && deliverydate != null)
            //{
            //    var strList = deliverydate.Split(' ', 't', 'o', ' ');
            //    if (strList.Count() == 5)
            //    {
            //        dateRangeFromdeliverydate = strList[0];
            //        dateRangeEnddeliverydate = strList[4];
            //    }
            //    else
            //    {
            //        dateRangeFromdeliverydate = strList[0];
            //    }
            //}
            //if (lastrepairdate != "" && lastrepairdate != null)
            //{
            //    var strList = lastrepairdate.Split(' ', 't', 'o', ' ');
            //    if (strList.Count() == 5)
            //    {
            //        dateRangeFromlastrepairdate = strList[0];
            //        dateRangeEndlastrepairdate = strList[4];
            //    }
            //    else
            //    {
            //        dateRangeFromlastrepairdate = strList[0];
            //    }
            //}
            var getData = _ctx.PSLMaster.Where(w => w.Area != null && w.Area != "");
            if(!string.IsNullOrWhiteSpace(salesoffice))
            {
                getData = getData.Where(w => w.SalesOffice.Contains(salesoffice));
            }
            if(!string.IsNullOrWhiteSpace(customer))
            {
                getData = getData.Where(w => w.SapCustomerName.Contains(customer));
            }
            if(!string.IsNullOrWhiteSpace(family))
            {
                getData = getData.Where(w => w.SapCustomerName.Contains(salesoffice));
            }
            if(!string.IsNullOrWhiteSpace(model))
            {
                getData = getData.Where(w => w.Model.Contains(model));
            }
            if(!string.IsNullOrWhiteSpace(serialnumber))
            {
                getData = getData.Where(w => w.SerialNumber.Contains(serialnumber));
            }
            if(smurange != "0")
            {
                getData = getData.Where(w => w.LastSmu.Contains(smurange));
            }
            //if(!string.IsNullOrWhiteSpace(dateRangeFromdeliverydate) && !string.IsNullOrWhiteSpace(dateRangeEnddeliverydate))
            //{
            //    var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFromdeliverydate, "dd-MM-yyyy", null);
            //    var convertToDateTimeEnd = DateTime.ParseExact(dateRangeEnddeliverydate, "dd-MM-yyyy", null);
            //    getData = getData.Where(w => w.DeliveryDate.Value >= convertToDateTimeFrom && w.DeliveryDate.Value <= convertToDateTimeEnd);
            //}
            //if(!string.IsNullOrWhiteSpace(dateRangeFromdeliverydate) && string.IsNullOrWhiteSpace(dateRangeEnddeliverydate))
            //{
            //    var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFromdeliverydate, "dd-MM-yyyy", null);
            //    getData = getData.Where(w => w.DeliveryDate.Value == convertToDateTimeFrom);
            //}
            //if (!string.IsNullOrWhiteSpace(dateRangeFromlastrepairdate) && !string.IsNullOrWhiteSpace(dateRangeFromlastrepairdate))
            //{
            //    var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFromlastrepairdate, "dd-MM-yyyy", null);
            //    var convertToDateTimeEnd = DateTime.ParseExact(dateRangeEndlastrepairdate, "dd-MM-yyyy", null);
            //    getData = getData.Where(w => w.RepairDate.Value >= convertToDateTimeFrom && w.RepairDate.Value <= convertToDateTimeEnd);
            //}
            //if (!string.IsNullOrWhiteSpace(dateRangeFromlastrepairdate) && string.IsNullOrWhiteSpace(dateRangeFromlastrepairdate))
            //{
            //    var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFromlastrepairdate, "dd-MM-yyyy", null);
            //    getData = getData.Where(w => w.RepairDate.Value == convertToDateTimeFrom);
            //}
            var listData = getData.GroupBy(g => g.Area)
                                            .Select(select => new
                                            {
                                                Area = select.FirstOrDefault().Area
                                            }).Take(100).OrderBy(odb => odb.Area).ToList();
            var listitem = new List<PSLMaster>();
            foreach(var item in listData)
            {
                var data = new PSLMaster();
                data.Area = item.Area;
                listitem.Add(data);
            }
            return listitem;
        }

        public List<PSLMaster> GetSalesOfficeOverview(string area, string customer, string family, string model, string serialnumber, string smurange)
        {
            //var dateRangeFrompurchasedate = "";
            //var dateRangeEndpurchasedate = "";
            //var dateRangeFromdeliverydate = "";
            //var dateRangeEnddeliverydate = "";
            //var dateRangeFromlastrepairdate = "";
            //var dateRangeEndlastrepairdate = "";
            //if (purchasedate != "" && purchasedate != null)
            //{
            //    var strList = purchasedate.Split(' ', 't', 'o', ' ');
            //    if (strList.Count() == 5)
            //    {
            //        dateRangeFrompurchasedate = strList[0];
            //        dateRangeEndpurchasedate = strList[4];
            //    }
            //    else
            //    {
            //        dateRangeFrompurchasedate = strList[0];
            //    }
            //}
            //if (deliverydate != "" && deliverydate != null)
            //{
            //    var strList = deliverydate.Split(' ', 't', 'o', ' ');
            //    if (strList.Count() == 5)
            //    {
            //        dateRangeFromdeliverydate = strList[0];
            //        dateRangeEnddeliverydate = strList[4];
            //    }
            //    else
            //    {
            //        dateRangeFromdeliverydate = strList[0];
            //    }
            //}
            //if (lastrepairdate != "" && lastrepairdate != null)
            //{
            //    var strList = lastrepairdate.Split(' ', 't', 'o', ' ');
            //    if (strList.Count() == 5)
            //    {
            //        dateRangeFromlastrepairdate = strList[0];
            //        dateRangeEndlastrepairdate = strList[4];
            //    }
            //    else
            //    {
            //        dateRangeFromlastrepairdate = strList[0];
            //    }
            //}
            var getData = _ctx.PSLMaster.Where(w => w.SalesOffice != null && w.SalesOffice != "");
            if (!string.IsNullOrWhiteSpace(area))
            {
                getData = getData.Where(w => w.Area.Contains(area));
            }
            if (!string.IsNullOrWhiteSpace(customer))
            {
                getData = getData.Where(w => w.SapCustomerName.Contains(customer));
            }
            if (!string.IsNullOrWhiteSpace(family))
            {
                getData = getData.Where(w => w.SapCustomerName.Contains(family));
            }
            if (!string.IsNullOrWhiteSpace(model))
            {
                getData = getData.Where(w => w.Model.Contains(model));
            }
            if (!string.IsNullOrWhiteSpace(serialnumber))
            {
                getData = getData.Where(w => w.SerialNumber.Contains(serialnumber));
            }
            if (smurange != "0")
            {
                getData = getData.Where(w => w.LastSmu.Contains(smurange));
            }
            //if (!string.IsNullOrWhiteSpace(dateRangeFromdeliverydate) && !string.IsNullOrWhiteSpace(dateRangeEnddeliverydate))
            //{
            //    var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFromdeliverydate, "dd-MM-yyyy", null);
            //    var convertToDateTimeEnd = DateTime.ParseExact(dateRangeEnddeliverydate, "dd-MM-yyyy", null);
            //    getData = getData.Where(w => w.DeliveryDate.Value >= convertToDateTimeFrom && w.DeliveryDate.Value <= convertToDateTimeEnd);
            //}
            //if (!string.IsNullOrWhiteSpace(dateRangeFromdeliverydate) && string.IsNullOrWhiteSpace(dateRangeEnddeliverydate))
            //{
            //    var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFromdeliverydate, "dd-MM-yyyy", null);
            //    getData = getData.Where(w => w.DeliveryDate.Value == convertToDateTimeFrom);
            //}
            //if (!string.IsNullOrWhiteSpace(dateRangeFromlastrepairdate) && !string.IsNullOrWhiteSpace(dateRangeFromlastrepairdate))
            //{
            //    var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFromlastrepairdate, "dd-MM-yyyy", null);
            //    var convertToDateTimeEnd = DateTime.ParseExact(dateRangeEndlastrepairdate, "dd-MM-yyyy", null);
            //    getData = getData.Where(w => w.RepairDate.Value >= convertToDateTimeFrom && w.RepairDate.Value <= convertToDateTimeEnd);
            //}
            //if (!string.IsNullOrWhiteSpace(dateRangeFromlastrepairdate) && string.IsNullOrWhiteSpace(dateRangeFromlastrepairdate))
            //{
            //    var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFromlastrepairdate, "dd-MM-yyyy", null);
            //    getData = getData.Where(w => w.RepairDate.Value == convertToDateTimeFrom);
            //}
            var listData = getData.GroupBy(g => g.SalesOffice)
                                            .Select(select => new
                                            {
                                                SalesOffice = select.FirstOrDefault().SalesOffice
                                            }).Take(100).OrderBy(odb => odb.SalesOffice).ToList();
            var listitem = new List<PSLMaster>();
            foreach (var item in listData)
            {
                var data = new PSLMaster();
                data.SalesOffice = item.SalesOffice;
                listitem.Add(data);
            }
            return listitem;
        }

        public List<PSLMaster> GetCustomerOverview(string area, string salesoffice, string family, string model, string serialnumber, string smurange)
        {
            //var dateRangeFrompurchasedate = "";
            //var dateRangeEndpurchasedate = "";
            //var dateRangeFromdeliverydate = "";
            //var dateRangeEnddeliverydate = "";
            //var dateRangeFromlastrepairdate = "";
            //var dateRangeEndlastrepairdate = "";
            //if (purchasedate != "" && purchasedate != null)
            //{
            //    var strList = purchasedate.Split(' ', 't', 'o', ' ');
            //    if (strList.Count() == 5)
            //    {
            //        dateRangeFrompurchasedate = strList[0];
            //        dateRangeEndpurchasedate = strList[4];
            //    }
            //    else
            //    {
            //        dateRangeFrompurchasedate = strList[0];
            //    }
            //}
            //if (deliverydate != "" && deliverydate != null)
            //{
            //    var strList = deliverydate.Split(' ', 't', 'o', ' ');
            //    if (strList.Count() == 5)
            //    {
            //        dateRangeFromdeliverydate = strList[0];
            //        dateRangeEnddeliverydate = strList[4];
            //    }
            //    else
            //    {
            //        dateRangeFromdeliverydate = strList[0];
            //    }
            //}
            //if (lastrepairdate != "" && lastrepairdate != null)
            //{
            //    var strList = lastrepairdate.Split(' ', 't', 'o', ' ');
            //    if (strList.Count() == 5)
            //    {
            //        dateRangeFromlastrepairdate = strList[0];
            //        dateRangeEndlastrepairdate = strList[4];
            //    }
            //    else
            //    {
            //        dateRangeFromlastrepairdate = strList[0];
            //    }
            //}
            var getData = _ctx.PSLMaster.Where(w => w.SapCustomerName != null && w.SapCustomerName != "");
            if (!string.IsNullOrWhiteSpace(area))
            {
                getData = getData.Where(w => w.Area.Contains(area));
            }
            if (!string.IsNullOrWhiteSpace(salesoffice))
            {
                getData = getData.Where(w => w.SalesOffice.Contains(salesoffice));
            }
            if (!string.IsNullOrWhiteSpace(family))
            {
                getData = getData.Where(w => w.SapCustomerName.Contains(family));
            }
            if (!string.IsNullOrWhiteSpace(model))
            {
                getData = getData.Where(w => w.Model.Contains(model));
            }
            if (!string.IsNullOrWhiteSpace(serialnumber))
            {
                getData = getData.Where(w => w.SerialNumber.Contains(serialnumber));
            }
            if (smurange != "0")
            {
                getData = getData.Where(w => w.LastSmu.Contains(smurange));
            }
            //if (!string.IsNullOrWhiteSpace(dateRangeFromdeliverydate) && !string.IsNullOrWhiteSpace(dateRangeEnddeliverydate))
            //{
            //    var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFromdeliverydate, "dd-MM-yyyy", null);
            //    var convertToDateTimeEnd = DateTime.ParseExact(dateRangeEnddeliverydate, "dd-MM-yyyy", null);
            //    getData = getData.Where(w => w.DeliveryDate.Value >= convertToDateTimeFrom && w.DeliveryDate.Value <= convertToDateTimeEnd);
            //}
            //if (!string.IsNullOrWhiteSpace(dateRangeFromdeliverydate) && string.IsNullOrWhiteSpace(dateRangeEnddeliverydate))
            //{
            //    var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFromdeliverydate, "dd-MM-yyyy", null);
            //    getData = getData.Where(w => w.DeliveryDate.Value == convertToDateTimeFrom);
            //}
            //if (!string.IsNullOrWhiteSpace(dateRangeFromlastrepairdate) && !string.IsNullOrWhiteSpace(dateRangeFromlastrepairdate))
            //{
            //    var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFromlastrepairdate, "dd-MM-yyyy", null);
            //    var convertToDateTimeEnd = DateTime.ParseExact(dateRangeEndlastrepairdate, "dd-MM-yyyy", null);
            //    getData = getData.Where(w => w.RepairDate.Value >= convertToDateTimeFrom && w.RepairDate.Value <= convertToDateTimeEnd);
            //}
            //if (!string.IsNullOrWhiteSpace(dateRangeFromlastrepairdate) && string.IsNullOrWhiteSpace(dateRangeFromlastrepairdate))
            //{
            //    var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFromlastrepairdate, "dd-MM-yyyy", null);
            //    getData = getData.Where(w => w.RepairDate.Value == convertToDateTimeFrom);
            //}
            var listData = getData.GroupBy(g => g.SapCustomerName)
                                            .Select(select => new
                                            {
                                                CustomerName = select.FirstOrDefault().SapCustomerName
                                            }).Take(100).OrderBy(odb => odb.CustomerName).ToList();
            var listitem = new List<PSLMaster>();
            foreach (var item in listData)
            {
                var data = new PSLMaster();
                data.SapCustomerName = item.CustomerName;
                listitem.Add(data);
            }
            return listitem;
        }

        public List<PSLMaster> GetModelOverview(string area, string salesoffice, string customer, string family, string serialnumber, string smurange)
        {
            //var dateRangeFrompurchasedate = "";
            //var dateRangeEndpurchasedate = "";
            //var dateRangeFromdeliverydate = "";
            //var dateRangeEnddeliverydate = "";
            //var dateRangeFromlastrepairdate = "";
            //var dateRangeEndlastrepairdate = "";
            //if (purchasedate != "" && purchasedate != null)
            //{
            //    var strList = purchasedate.Split(' ', 't', 'o', ' ');
            //    if (strList.Count() == 5)
            //    {
            //        dateRangeFrompurchasedate = strList[0];
            //        dateRangeEndpurchasedate = strList[4];
            //    }
            //    else
            //    {
            //        dateRangeFrompurchasedate = strList[0];
            //    }
            //}
            //if (deliverydate != "" && deliverydate != null)
            //{
            //    var strList = deliverydate.Split(' ', 't', 'o', ' ');
            //    if (strList.Count() == 5)
            //    {
            //        dateRangeFromdeliverydate = strList[0];
            //        dateRangeEnddeliverydate = strList[4];
            //    }
            //    else
            //    {
            //        dateRangeFromdeliverydate = strList[0];
            //    }
            //}
            //if (lastrepairdate != "" && lastrepairdate != null)
            //{
            //    var strList = lastrepairdate.Split(' ', 't', 'o', ' ');
            //    if (strList.Count() == 5)
            //    {
            //        dateRangeFromlastrepairdate = strList[0];
            //        dateRangeEndlastrepairdate = strList[4];
            //    }
            //    else
            //    {
            //        dateRangeFromlastrepairdate = strList[0];
            //    }
            //}
            var getData = _ctx.PSLMaster.Where(w => w.Model != null && w.Model != "");
            if (!string.IsNullOrWhiteSpace(area))
            {
                getData = getData.Where(w => w.Area.Contains(area));
            }
            if (!string.IsNullOrWhiteSpace(salesoffice))
            {
                getData = getData.Where(w => w.SalesOffice.Contains(salesoffice));
            }
            if (!string.IsNullOrWhiteSpace(family))
            {
                getData = getData.Where(w => w.SapCustomerName.Contains(family));
            }
            if (!string.IsNullOrWhiteSpace(customer))
            {
                getData = getData.Where(w => w.SapCustomerName.Contains(customer));
            }
            if (!string.IsNullOrWhiteSpace(serialnumber))
            {
                getData = getData.Where(w => w.SerialNumber.Contains(serialnumber));
            }
            if (smurange != "0")
            {
                getData = getData.Where(w => w.LastSmu.Contains(smurange));
            }
            //if (!string.IsNullOrWhiteSpace(dateRangeFromdeliverydate) && !string.IsNullOrWhiteSpace(dateRangeEnddeliverydate))
            //{
            //    var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFromdeliverydate, "dd-MM-yyyy", null);
            //    var convertToDateTimeEnd = DateTime.ParseExact(dateRangeEnddeliverydate, "dd-MM-yyyy", null);
            //    getData = getData.Where(w => w.DeliveryDate.Value >= convertToDateTimeFrom && w.DeliveryDate.Value <= convertToDateTimeEnd);
            //}
            //if (!string.IsNullOrWhiteSpace(dateRangeFromdeliverydate) && string.IsNullOrWhiteSpace(dateRangeEnddeliverydate))
            //{
            //    var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFromdeliverydate, "dd-MM-yyyy", null);
            //    getData = getData.Where(w => w.DeliveryDate.Value == convertToDateTimeFrom);
            //}
            //if (!string.IsNullOrWhiteSpace(dateRangeFromlastrepairdate) && !string.IsNullOrWhiteSpace(dateRangeFromlastrepairdate))
            //{
            //    var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFromlastrepairdate, "dd-MM-yyyy", null);
            //    var convertToDateTimeEnd = DateTime.ParseExact(dateRangeEndlastrepairdate, "dd-MM-yyyy", null);
            //    getData = getData.Where(w => w.RepairDate.Value >= convertToDateTimeFrom && w.RepairDate.Value <= convertToDateTimeEnd);
            //}
            //if (!string.IsNullOrWhiteSpace(dateRangeFromlastrepairdate) && string.IsNullOrWhiteSpace(dateRangeFromlastrepairdate))
            //{
            //    var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFromlastrepairdate, "dd-MM-yyyy", null);
            //    getData = getData.Where(w => w.RepairDate.Value == convertToDateTimeFrom);
            //}
            var listData = getData.GroupBy(g => g.Model)
                                            .Select(select => new
                                            {
                                                Model = select.FirstOrDefault().Model
                                            }).Take(100).OrderBy(odb => odb.Model).ToList();
            var listitem = new List<PSLMaster>();
            foreach (var item in listData)
            {
                var data = new PSLMaster();
                data.Model = item.Model;
                listitem.Add(data);
            }
            return listitem;
        }

        public List<PSLMaster> GetSNOverview(string area, string salesoffice, string customer, string family, string model, string smurange)
        {
            //var dateRangeFrompurchasedate = "";
            //var dateRangeEndpurchasedate = "";
            //var dateRangeFromdeliverydate = "";
            //var dateRangeEnddeliverydate = "";
            //var dateRangeFromlastrepairdate = "";
            //var dateRangeEndlastrepairdate = "";
            //if (purchasedate != "" && purchasedate != null)
            //{
            //    var strList = purchasedate.Split(' ', 't', 'o', ' ');
            //    if (strList.Count() == 5)
            //    {
            //        dateRangeFrompurchasedate = strList[0];
            //        dateRangeEndpurchasedate = strList[4];
            //    }
            //    else
            //    {
            //        dateRangeFrompurchasedate = strList[0];
            //    }
            //}
            //if (deliverydate != "" && deliverydate != null)
            //{
            //    var strList = deliverydate.Split(' ', 't', 'o', ' ');
            //    if (strList.Count() == 5)
            //    {
            //        dateRangeFromdeliverydate = strList[0];
            //        dateRangeEnddeliverydate = strList[4];
            //    }
            //    else
            //    {
            //        dateRangeFromdeliverydate = strList[0];
            //    }
            //}
            //if (lastrepairdate != "" && lastrepairdate != null)
            //{
            //    var strList = lastrepairdate.Split(' ', 't', 'o', ' ');
            //    if (strList.Count() == 5)
            //    {
            //        dateRangeFromlastrepairdate = strList[0];
            //        dateRangeEndlastrepairdate = strList[4];
            //    }
            //    else
            //    {
            //        dateRangeFromlastrepairdate = strList[0];
            //    }
            //}
            var getData = _ctx.PSLMaster.Where(w => w.SerialNumber != null && w.SerialNumber != "");
            if (!string.IsNullOrWhiteSpace(area))
            {
                getData = getData.Where(w => w.Area.Contains(area));
            }
            if (!string.IsNullOrWhiteSpace(salesoffice))
            {
                getData = getData.Where(w => w.SalesOffice.Contains(salesoffice));
            }
            if (!string.IsNullOrWhiteSpace(family))
            {
                getData = getData.Where(w => w.SapCustomerName.Contains(family));
            }
            if (!string.IsNullOrWhiteSpace(customer))
            {
                getData = getData.Where(w => w.SapCustomerName.Contains(customer));
            }
            if (!string.IsNullOrWhiteSpace(model))
            {
                getData = getData.Where(w => w.Model.Contains(model));
            }
            if(smurange != "0")
            {
                getData = getData.Where(w => w.LastSmu.Contains(smurange));
            }
            //if (!string.IsNullOrWhiteSpace(dateRangeFromdeliverydate) && !string.IsNullOrWhiteSpace(dateRangeEnddeliverydate))
            //{
            //    var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFromdeliverydate, "dd-MM-yyyy", null);
            //    var convertToDateTimeEnd = DateTime.ParseExact(dateRangeEnddeliverydate, "dd-MM-yyyy", null);
            //    getData = getData.Where(w => w.DeliveryDate.Value >= convertToDateTimeFrom && w.DeliveryDate.Value <= convertToDateTimeEnd);
            //}
            //if (!string.IsNullOrWhiteSpace(dateRangeFromdeliverydate) && string.IsNullOrWhiteSpace(dateRangeEnddeliverydate))
            //{
            //    var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFromdeliverydate, "dd-MM-yyyy", null);
            //    getData = getData.Where(w => w.DeliveryDate.Value == convertToDateTimeFrom);
            //}
            //if (!string.IsNullOrWhiteSpace(dateRangeFromlastrepairdate) && !string.IsNullOrWhiteSpace(dateRangeFromlastrepairdate))
            //{
            //    var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFromlastrepairdate, "dd-MM-yyyy", null);
            //    var convertToDateTimeEnd = DateTime.ParseExact(dateRangeEndlastrepairdate, "dd-MM-yyyy", null);
            //    getData = getData.Where(w => w.RepairDate.Value >= convertToDateTimeFrom && w.RepairDate.Value <= convertToDateTimeEnd);
            //}
            //if (!string.IsNullOrWhiteSpace(dateRangeFromlastrepairdate) && string.IsNullOrWhiteSpace(dateRangeFromlastrepairdate))
            //{
            //    var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFromlastrepairdate, "dd-MM-yyyy", null);
            //    getData = getData.Where(w => w.RepairDate.Value == convertToDateTimeFrom);
            //}
            var listData = getData.GroupBy(g => g.SerialNumber)
                                            .Select(select => new
                                            {
                                                SerialNumber = select.FirstOrDefault().SerialNumber
                                            }).Take(100).OrderBy(odb => odb.SerialNumber).ToList();
            var listitem = new List<PSLMaster>();
            foreach (var item in listData)
            {
                var data = new PSLMaster();
                data.SerialNumber = item.SerialNumber;
                listitem.Add(data);
            }
            return listitem;
        }

        public List<TablePSLOutstanding> GetListPSL(string releaseDateFrom, string releaseDateEnd, string terminationDateFrom, string terminationDateEnd, string[] splitArea, string[] splitSalesOffice, string[] splitPSLStatus, string[] splitPSLNo, string[] splitAgeIndicator, string[] splitSerialNumber, string[] splitModel, string[] splitPriority, int column, string order, bool searchArea, bool searchPSLNo, bool searchStoreName, bool searchModel, bool searchSerialNumber, bool searchSRNo, bool searchQuotNo, bool searchSoNo, bool searchSAPPSLStatus, string valueSearch, string PipSafety, string PipPriority, string PspProactive, string PspAfterFailure, string area, string type, string hid, string rental, string inventory, string others)
        {
            var getListFromDate = (from item in _ctx.PSLMaster
                                   where item.Area != "" && item.Area != null && item.SapPSLStatus.Contains("Open") && item.Validation == "Outstanding" || item.Area != "" && item.Area != null && item.SapPSLStatus.Contains("Outstanding") && item.Validation == "Outstanding" || item.Area != "" && item.Area != null && item.SapPSLStatus.Contains("In Progress") && item.Validation == "Outstanding" || item.Area != "" && item.Area != null && item.SapPSLStatus.Contains("Released") && item.Validation == "Outstanding"
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLNo = item.PSLId,
                                       StoreName = item.SalesOffice,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.ServiceOrderNo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.LetterDate,
                                       PSLType = item.PSLType,
                                       PriorityLevel = item.PriorityLevel,
                                       AgeIndicator = item.PslAge,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       CatPSLStatus = item.CatPSLStatus
                                   });

            if (splitAgeIndicator != null && splitAgeIndicator.Count() > 0)
            {
                foreach (var data in splitAgeIndicator)
                {
                    if (data == "Q1" || data == "Q2" || data == "Q3" || data == "Q4" || data == ">Q4")
                    {
                        getListFromDate = (from item in _ctx.PSLMaster
                                           where item.Area != "" && item.Area != null && item.SapPSLStatus.Contains("Open") && item.Validation == "Outstanding" || item.Area != "" && item.Area != null && item.SapPSLStatus.Contains("Outstanding") && item.Validation == "Outstanding" || item.Area != "" && item.Area != null && item.SapPSLStatus.Contains("In Progress") && item.Validation == "Outstanding" || item.Area != "" && item.Area != null && item.SapPSLStatus.Contains("Released") && item.Validation == "Outstanding"
                                           select new
                                           {
                                               PSLMasterId = item.PSLMasterId,
                                               Area = item.Area,
                                               PSLNo = item.PSLId,
                                               StoreName = item.SalesOffice,
                                               Model = item.Model,
                                               SerialNumber = item.SerialNumber,
                                               ServiceRequestNo = item.ServiceRequestNo,
                                               QuotationNo = item.QuotationNo,
                                               SONo = item.ServiceOrderNo,
                                               SapPSLStatus = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               ReleaseDate = item.LetterDate,
                                               PSLType = item.PSLType,
                                               PriorityLevel = item.PriorityLevel,
                                               AgeIndicator = item.PslAge,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               DaysToExpired = item.DaysToExpired,
                                               WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                               Validation = item.Validation,
                                               PslAge = item.PslAge,
                                               CatPSLStatus = item.CatPSLStatus
                                           });
                    }

                    if (data == "Over 1 Year To Expired" || data == "1Q Year To Expired" || data == "2Q Year To Expired" || data == "3Q Year To Expired" || data == "4Q Year To Expired")
                    {
                        getListFromDate = (from item in _ctx.PSLMaster
                                           where item.DaysToExpired != "Expired" && item.Area != "" && item.Area != null && item.SapPSLStatus.Contains("Open") && item.Validation == "Outstanding" || item.Area != "" && item.Area != null && item.SapPSLStatus.Contains("Outstanding") && item.Validation == "Outstanding" || item.Area != "" && item.Area != null && item.SapPSLStatus.Contains("In Progress") && item.Validation == "Outstanding" || item.Area != "" && item.Area != null && item.SapPSLStatus.Contains("Released") && item.Validation == "Outstanding"
                                           select new
                                           {
                                               PSLMasterId = item.PSLMasterId,
                                               Area = item.Area,
                                               PSLNo = item.PSLId,
                                               StoreName = item.SalesOffice,
                                               Model = item.Model,
                                               SerialNumber = item.SerialNumber,
                                               ServiceRequestNo = item.ServiceRequestNo,
                                               QuotationNo = item.QuotationNo,
                                               SONo = item.ServiceOrderNo,
                                               SapPSLStatus = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               ReleaseDate = item.LetterDate,
                                               PSLType = item.PSLType,
                                               PriorityLevel = item.PriorityLevel,
                                               AgeIndicator = item.PslAge,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               DaysToExpired = item.DaysToExpired,
                                               WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                               Validation = item.Validation,
                                               PslAge = item.PslAge,
                                               CatPSLStatus = item.CatPSLStatus
                                           });
                    }
                }

            }

            if (hid == "on" && rental == "" && inventory == "")
            {
                getListFromDate = (from item in getListFromDate
                                   where item.HIDStatus != ""
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       PriorityLevel = item.PriorityLevel,
                                       AgeIndicator = item.AgeIndicator,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       CatPSLStatus = item.CatPSLStatus
                                   });
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                getListFromDate = (from item in getListFromDate
                                   where item.HIDStatus != "" || item.RentStatus != ""
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       PriorityLevel = item.PriorityLevel,
                                       AgeIndicator = item.AgeIndicator,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       CatPSLStatus = item.CatPSLStatus
                                   });
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                getListFromDate = (from item in getListFromDate
                                   where item.HIDStatus != "" || item.Plant != ""
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       PriorityLevel = item.PriorityLevel,
                                       AgeIndicator = item.AgeIndicator,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       CatPSLStatus = item.CatPSLStatus
                                   });
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                getListFromDate = (from item in getListFromDate
                                   where item.RentStatus != "" 
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       PriorityLevel = item.PriorityLevel,
                                       AgeIndicator = item.AgeIndicator,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       CatPSLStatus = item.CatPSLStatus
                                   });
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                getListFromDate = (from item in getListFromDate
                                   where item.RentStatus != "" || item.Plant != ""
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       PriorityLevel = item.PriorityLevel,
                                       AgeIndicator = item.AgeIndicator,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       CatPSLStatus = item.CatPSLStatus
                                   });
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                getListFromDate = (from item in getListFromDate
                                   where item.Plant != ""
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       PriorityLevel = item.PriorityLevel,
                                       AgeIndicator = item.AgeIndicator,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       CatPSLStatus = item.CatPSLStatus
                                   });
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                getListFromDate = (from item in getListFromDate
                                   where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       PriorityLevel = item.PriorityLevel,
                                       AgeIndicator = item.AgeIndicator,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       CatPSLStatus = item.CatPSLStatus
                                   });
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                getListFromDate = (from item in getListFromDate
                                   where  item.HIDStatus == "" || item.RentStatus == "" ||  item.Plant == ""
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       PriorityLevel = item.PriorityLevel,
                                       AgeIndicator = item.AgeIndicator,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       CatPSLStatus = item.CatPSLStatus
                                   });
            }

            if (PipSafety == "on" || PipPriority == "on" || PspProactive == "on" || PspAfterFailure == "on")
            {
                var array = new List<string>();
                if (PipSafety == "on")
                {
                    array.Add("S");
                }
                if (PipPriority == "on")
                {
                    array.Add("P");
                }
                if (PspProactive == "on")
                {
                    array.Add("C");
                }
                if (PspAfterFailure == "on")
                {
                    array.Add("A");
                }
                string[] strArray = array.ToArray();
                getListFromDate = (from item in getListFromDate
                                   where item.Area != "" && item.Area != null && strArray.Contains(item.PSLType)
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       PriorityLevel = item.PriorityLevel,
                                       AgeIndicator = item.AgeIndicator,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       CatPSLStatus = item.CatPSLStatus
                                   });
            }

            if (splitArea != null && splitArea.Count() > 0)
            {
                getListFromDate = (from item in getListFromDate
                                   where splitArea.Contains(item.Area)
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       PriorityLevel = item.PriorityLevel,
                                       AgeIndicator = item.AgeIndicator,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       CatPSLStatus = item.CatPSLStatus
                                   });
            }

            if (splitSalesOffice != null && splitSalesOffice.Count() > 0)
            {
                getListFromDate = (from item in getListFromDate
                                   where splitSalesOffice.Contains(item.StoreName)
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       PriorityLevel = item.PriorityLevel,
                                       AgeIndicator = item.AgeIndicator,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       CatPSLStatus = item.CatPSLStatus
                                   });
            }

            if (splitPSLStatus != null && splitPSLStatus.Count() > 0)
            {
                getListFromDate = (from item in getListFromDate
                                   where splitPSLStatus.Contains(item.SapPSLStatus)
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       PriorityLevel = item.PriorityLevel,
                                       AgeIndicator = item.AgeIndicator,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       CatPSLStatus = item.CatPSLStatus
                                   });
            }

            if (splitPSLNo != null && splitPSLNo.Count() > 0)
            {
                getListFromDate = (from item in getListFromDate
                                   where splitPSLNo.Contains(item.PSLNo)
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       PriorityLevel = item.PriorityLevel,
                                       AgeIndicator = item.AgeIndicator,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       CatPSLStatus = item.CatPSLStatus
                                   });
            }

            if (splitSerialNumber != null && splitSerialNumber.Count() > 0)
            {
                getListFromDate = (from item in getListFromDate
                                   where splitSerialNumber.Contains(item.SerialNumber)
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       PriorityLevel = item.PriorityLevel,
                                       AgeIndicator = item.AgeIndicator,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       CatPSLStatus = item.CatPSLStatus
                                   });
            }

            if (splitModel != null && splitModel.Count() > 0)
            {
                getListFromDate = (from item in getListFromDate
                                   where splitModel.Contains(item.Model)
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       PriorityLevel = item.PriorityLevel,
                                       AgeIndicator = item.AgeIndicator,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       CatPSLStatus = item.CatPSLStatus
                                   });
            }

            if (splitPriority != null && splitPriority.Count() > 0)
            {
                getListFromDate = (from item in getListFromDate
                                   where splitPriority.Contains(item.PriorityLevel)
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       PriorityLevel = item.PriorityLevel,
                                       AgeIndicator = item.AgeIndicator,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       CatPSLStatus = item.CatPSLStatus

                                   });
            }

            if (!string.IsNullOrWhiteSpace(releaseDateFrom) && !string.IsNullOrWhiteSpace(releaseDateEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseDateFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(releaseDateEnd, "dd-MM-yyyy", null);
                getListFromDate = (from item in getListFromDate
                                   where item.Area != null && item.Area != "" && item.ReleaseDate.Value >= convertToDateTimeFrom && item.ReleaseDate.Value <= convertToDateTimeEnd
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       PriorityLevel = item.PriorityLevel,
                                       AgeIndicator = item.AgeIndicator,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       CatPSLStatus = item.CatPSLStatus
                                   });
            }

            if(!string.IsNullOrWhiteSpace(releaseDateFrom) && string.IsNullOrWhiteSpace(releaseDateEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseDateFrom, "dd-MM-yyyy", null);
                getListFromDate = (from item in getListFromDate
                                   where item.Area != null && item.Area != "" && item.ReleaseDate.Value == convertToDateTimeFrom
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       PriorityLevel = item.PriorityLevel,
                                       AgeIndicator = item.AgeIndicator,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       CatPSLStatus = item.CatPSLStatus
                                   });
            }

            if (terminationDateFrom != "" && terminationDateEnd != "")
            {
                var convertToDateTimeFrom = DateTime.ParseExact(terminationDateFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(terminationDateEnd, "dd-MM-yyyy", null);
                getListFromDate = (from item in getListFromDate
                                   where item.Area != null && item.Area != "" && item.TerminationDate.Value >= convertToDateTimeFrom && item.TerminationDate.Value <= convertToDateTimeEnd
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       PriorityLevel = item.PriorityLevel,
                                       AgeIndicator = item.AgeIndicator,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       CatPSLStatus = item.CatPSLStatus
                                   });
            }
            if (terminationDateFrom != "" && terminationDateEnd == "")
            {
                var convertToDateTimeFrom = DateTime.ParseExact(terminationDateFrom, "dd-MM-yyyy", null);
                getListFromDate = (from item in getListFromDate
                                   where item.Area != null && item.Area != "" && item.TerminationDate.Value == convertToDateTimeFrom
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       PriorityLevel = item.PriorityLevel,
                                       AgeIndicator = item.AgeIndicator,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       CatPSLStatus = item.CatPSLStatus
                                   });
            }

            if (!string.IsNullOrWhiteSpace(area))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.Area.Contains(area)
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       PriorityLevel = item.PriorityLevel,
                                       AgeIndicator = item.AgeIndicator,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       CatPSLStatus = item.CatPSLStatus
                                   });
            }

            if(type != null)
            {
                if (type.Contains("Open"))
                {
                    getListFromDate = (from item in getListFromDate
                                       where item.SapPSLStatus.Contains("Open")
                                       select new
                                       {
                                           PSLMasterId = item.PSLMasterId,
                                           Area = item.Area,
                                           PSLNo = item.PSLNo,
                                           StoreName = item.StoreName,
                                           Model = item.Model,
                                           SerialNumber = item.SerialNumber,
                                           ServiceRequestNo = item.ServiceRequestNo,
                                           QuotationNo = item.QuotationNo,
                                           SONo = item.SONo,
                                           SapPSLStatus = item.SapPSLStatus,
                                           TerminationDate = item.TerminationDate,
                                           ReleaseDate = item.ReleaseDate,
                                           PSLType = item.PSLType,
                                           PriorityLevel = item.PriorityLevel,
                                           AgeIndicator = item.AgeIndicator,
                                           RentStatus = item.RentStatus,
                                           HIDStatus = item.HIDStatus,
                                           Plant = item.Plant,
                                           DaysToExpired = item.DaysToExpired,
                                           WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                           Validation = item.Validation,
                                           PslAge = item.PslAge,
                                           CatPSLStatus = item.CatPSLStatus
                                       });
                }

                if (type.Contains("Release"))
                {
                    getListFromDate = (from item in getListFromDate
                                       where item.SapPSLStatus.Contains("Release")
                                       select new
                                       {
                                           PSLMasterId = item.PSLMasterId,
                                           Area = item.Area,
                                           PSLNo = item.PSLNo,
                                           StoreName = item.StoreName,
                                           Model = item.Model,
                                           SerialNumber = item.SerialNumber,
                                           ServiceRequestNo = item.ServiceRequestNo,
                                           QuotationNo = item.QuotationNo,
                                           SONo = item.SONo,
                                           SapPSLStatus = item.SapPSLStatus,
                                           TerminationDate = item.TerminationDate,
                                           ReleaseDate = item.ReleaseDate,
                                           PSLType = item.PSLType,
                                           PriorityLevel = item.PriorityLevel,
                                           AgeIndicator = item.AgeIndicator,
                                           RentStatus = item.RentStatus,
                                           HIDStatus = item.HIDStatus,
                                           Plant = item.Plant,
                                           DaysToExpired = item.DaysToExpired,
                                           WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                           Validation = item.Validation,
                                           PslAge = item.PslAge,
                                           CatPSLStatus = item.CatPSLStatus
                                       });
                }

                if (type.Contains("Outstanding"))
                {
                    getListFromDate = (from item in getListFromDate
                                       where item.SapPSLStatus.Contains("Outstanding")
                                       select new
                                       {
                                           PSLMasterId = item.PSLMasterId,
                                           Area = item.Area,
                                           PSLNo = item.PSLNo,
                                           StoreName = item.StoreName,
                                           Model = item.Model,
                                           SerialNumber = item.SerialNumber,
                                           ServiceRequestNo = item.ServiceRequestNo,
                                           QuotationNo = item.QuotationNo,
                                           SONo = item.SONo,
                                           SapPSLStatus = item.SapPSLStatus,
                                           TerminationDate = item.TerminationDate,
                                           ReleaseDate = item.ReleaseDate,
                                           PSLType = item.PSLType,
                                           PriorityLevel = item.PriorityLevel,
                                           AgeIndicator = item.AgeIndicator,
                                           RentStatus = item.RentStatus,
                                           HIDStatus = item.HIDStatus,
                                           Plant = item.Plant,
                                           DaysToExpired = item.DaysToExpired,
                                           WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                           Validation = item.Validation,
                                           PslAge = item.PslAge,
                                           CatPSLStatus = item.CatPSLStatus
                                       });
                }

                if (type.Contains("In Progress"))
                {
                    getListFromDate = (from item in getListFromDate
                                       where item.SapPSLStatus.Contains("In Progress")
                                       select new
                                       {
                                           PSLMasterId = item.PSLMasterId,
                                           Area = item.Area,
                                           PSLNo = item.PSLNo,
                                           StoreName = item.StoreName,
                                           Model = item.Model,
                                           SerialNumber = item.SerialNumber,
                                           ServiceRequestNo = item.ServiceRequestNo,
                                           QuotationNo = item.QuotationNo,
                                           SONo = item.SONo,
                                           SapPSLStatus = item.SapPSLStatus,
                                           TerminationDate = item.TerminationDate,
                                           ReleaseDate = item.ReleaseDate,
                                           PSLType = item.PSLType,
                                           PriorityLevel = item.PriorityLevel,
                                           AgeIndicator = item.AgeIndicator,
                                           RentStatus = item.RentStatus,
                                           HIDStatus = item.HIDStatus,
                                           Plant = item.Plant,
                                           DaysToExpired = item.DaysToExpired,
                                           WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                           Validation = item.Validation,
                                           PslAge = item.PslAge,
                                           CatPSLStatus = item.CatPSLStatus
                                       });
                }
            }

           

            if (!string.IsNullOrWhiteSpace(valueSearch))
            {
                if (searchArea == true || searchPSLNo || true || searchStoreName == true || searchModel == true || searchSerialNumber == true || searchSRNo == true || searchQuotNo == true || searchSoNo == true || searchSAPPSLStatus == true)
            {
                getListFromDate = getListFromDate.Where(w => w.Area.Contains(valueSearch) || w.PSLNo.Contains(valueSearch) || w.StoreName.Contains(valueSearch) || w.Model.Contains(valueSearch) || w.SerialNumber.Contains(valueSearch) || w.ServiceRequestNo.ToString().Contains(valueSearch) || w.QuotationNo.ToString().Contains(valueSearch) || w.SONo.ToString().Contains(valueSearch) || w.SapPSLStatus.Contains(valueSearch));
            }
            }

            #region OrderData
            if (column == 0)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.Area);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.Area);
                }
            }
            else if (column == 1)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.PSLNo);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.PSLNo);
                }
            }
            else if (column == 2)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.StoreName);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.StoreName);
                }
            }
            else if (column == 3)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.Model);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.Model);
                }
            }
            else if (column == 4)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.SerialNumber);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.SerialNumber);
                }
            }
            else if (column == 5)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.ServiceRequestNo);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.ServiceRequestNo);
                }
            }
            else if (column == 6)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.QuotationNo);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.QuotationNo);
                }
            }
            else if (column == 7)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.SONo);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.SONo);
                }
            }
            else if (column == 8)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.CatPSLStatus);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.CatPSLStatus);
                }
            }
            else if (column == 9)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.SapPSLStatus);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.SapPSLStatus);
                }
            }
            else if (column == 10)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.ReleaseDate);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.ReleaseDate);
                }
            }
            else if (column == 11)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.TerminationDate);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.TerminationDate);
                }
            }
            #endregion
            var listitem = new List<TablePSLOutstanding>();
            int ida = 0;
            foreach (var item in getListFromDate.ToList())
            {
                if(splitAgeIndicator.Count() > 0)
                {
                    foreach (var data in splitAgeIndicator)
                    {

                        if (data == "Over 1 Year To Expired")
                        {
                            if (Convert.ToInt32(item.DaysToExpired) > 365)
                            {
                                var list = new TablePSLOutstanding();
                                list.Row = ida++;
                                if (!string.IsNullOrWhiteSpace(item.Area))
                                {
                                    list.Area = item.Area;
                                }
                                else
                                {
                                    list.Area = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.PSLNo))
                                {
                                    list.PSLNo = item.PSLNo;
                                }
                                else
                                {
                                    list.PSLNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.StoreName))
                                {
                                    list.StoreName = item.StoreName;
                                }
                                else
                                {
                                    list.StoreName = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.Model))
                                {
                                    list.Model = item.Model;
                                }
                                else
                                {
                                    list.Model = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.SerialNumber))
                                {
                                    list.SerialNo = item.SerialNumber;
                                }
                                else
                                {
                                    list.SerialNo = "-";
                                }

                                if (item.ServiceRequestNo != "0" || item.ServiceRequestNo != null || item.ServiceRequestNo != "")
                                {
                                    list.SRNo = item.ServiceRequestNo;
                                }
                                else
                                {
                                    list.SRNo = "-";
                                }
                                if (item.QuotationNo != "0" || item.QuotationNo != null || item.QuotationNo != "")
                                {
                                    list.QuotNo = item.QuotationNo;
                                }
                                else
                                {
                                    list.QuotNo = "-";
                                }
                                if (item.SONo != "0" || item.SONo != null || item.SONo != "")
                                {
                                    list.SoNo = item.SONo;
                                }
                                else
                                {
                                    list.SoNo = "-";
                                }
                                if (!string.IsNullOrWhiteSpace(item.SapPSLStatus))
                                {
                                    list.PSLStatus = item.SapPSLStatus;
                                }
                                else
                                {
                                    list.PSLStatus = "-";
                                }

                                var releaseDate = item.ReleaseDate.Value.Date.ToString();
                                if (item.ReleaseDate == null)
                                {
                                    list.ReleaseDate = "-";
                                }
                                else
                                {
                                    var splitReleaseDate = releaseDate.Split(' ');
                                    list.ReleaseDate = splitReleaseDate[0].ToString();
                                }
                                var terminationDate = item.TerminationDate.Value.Date.ToString();
                                if (item.TerminationDate == null)
                                {
                                    list.TerminationDate = "-";
                                }
                                else
                                {
                                    var splitTerminationDate = terminationDate.Split(' ');
                                    list.TerminationDate = splitTerminationDate[0].ToString();
                                }
                                list.TerminationDateFormat = item.TerminationDate;
                                list.ReleaseDateFormat = item.ReleaseDate;
                                list.WipAge = item.WipAge;
                                list.DaysToExpired = item.DaysToExpired;
                                list.Validation = item.Validation;
                                list.PslAge = item.PslAge;
                                list.CatPSLStatus = item.CatPSLStatus;
                                listitem.Add(list);
                            }
                        }

                        if (data == "4Q Year To Expired")
                        {
                            if (Convert.ToInt32(item.DaysToExpired) > 275 && Convert.ToInt32(item.DaysToExpired) <= 365)
                            {
                                var list = new TablePSLOutstanding();
                                list.Row = ida++;
                                if (!string.IsNullOrWhiteSpace(item.Area))
                                {
                                    list.Area = item.Area;
                                }
                                else
                                {
                                    list.Area = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.PSLNo))
                                {
                                    list.PSLNo = item.PSLNo;
                                }
                                else
                                {
                                    list.PSLNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.StoreName))
                                {
                                    list.StoreName = item.StoreName;
                                }
                                else
                                {
                                    list.StoreName = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.Model))
                                {
                                    list.Model = item.Model;
                                }
                                else
                                {
                                    list.Model = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.SerialNumber))
                                {
                                    list.SerialNo = item.SerialNumber;
                                }
                                else
                                {
                                    list.SerialNo = "-";
                                }

                                if (item.ServiceRequestNo != "0" || item.ServiceRequestNo != null || item.ServiceRequestNo != "")
                                {
                                    list.SRNo = item.ServiceRequestNo;
                                }
                                else
                                {
                                    list.SRNo = "-";
                                }
                                if (item.QuotationNo != "0" || item.QuotationNo != null || item.QuotationNo != "")
                                {
                                    list.QuotNo = item.QuotationNo;
                                }
                                else
                                {
                                    list.QuotNo = "-";
                                }
                                if (item.SONo != "0" || item.SONo != null || item.SONo != "")
                                {
                                    list.SoNo = item.SONo;
                                }
                                else
                                {
                                    list.SoNo = "-";
                                }
                                if (!string.IsNullOrWhiteSpace(item.SapPSLStatus))
                                {
                                    list.PSLStatus = item.SapPSLStatus;
                                }
                                else
                                {
                                    list.PSLStatus = "-";
                                }

                                var releaseDate = item.ReleaseDate.Value.Date.ToString();
                                if (item.ReleaseDate == null)
                                {
                                    list.ReleaseDate = "-";
                                }
                                else
                                {
                                    var splitReleaseDate = releaseDate.Split(' ');
                                    list.ReleaseDate = splitReleaseDate[0].ToString();
                                }
                                var terminationDate = item.TerminationDate.Value.Date.ToString();
                                if (item.TerminationDate == null)
                                {
                                    list.TerminationDate = "-";
                                }
                                else
                                {
                                    var splitTerminationDate = terminationDate.Split(' ');
                                    list.TerminationDate = splitTerminationDate[0].ToString();
                                }
                                list.TerminationDateFormat = item.TerminationDate;
                                list.ReleaseDateFormat = item.ReleaseDate;
                                list.WipAge = item.WipAge;
                                list.DaysToExpired = item.DaysToExpired;
                                list.Validation = item.Validation;
                                list.PslAge = item.PslAge;
                                list.CatPSLStatus = item.CatPSLStatus;
                                listitem.Add(list);
                            }
                        }

                        if (data == "3Q Year To Expired")
                        {
                            if (Convert.ToInt32(item.DaysToExpired) > 185 && Convert.ToInt32(item.DaysToExpired) <= 275)
                            {
                                var list = new TablePSLOutstanding();
                                list.Row = ida++;
                                if (!string.IsNullOrWhiteSpace(item.Area))
                                {
                                    list.Area = item.Area;
                                }
                                else
                                {
                                    list.Area = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.PSLNo))
                                {
                                    list.PSLNo = item.PSLNo;
                                }
                                else
                                {
                                    list.PSLNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.StoreName))
                                {
                                    list.StoreName = item.StoreName;
                                }
                                else
                                {
                                    list.StoreName = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.Model))
                                {
                                    list.Model = item.Model;
                                }
                                else
                                {
                                    list.Model = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.SerialNumber))
                                {
                                    list.SerialNo = item.SerialNumber;
                                }
                                else
                                {
                                    list.SerialNo = "-";
                                }

                                if (item.ServiceRequestNo != "0" || item.ServiceRequestNo != null || item.ServiceRequestNo != "")
                                {
                                    list.SRNo = item.ServiceRequestNo;
                                }
                                else
                                {
                                    list.SRNo = "-";
                                }
                                if (item.QuotationNo != "0" || item.QuotationNo != null || item.QuotationNo != "")
                                {
                                    list.QuotNo = item.QuotationNo;
                                }
                                else
                                {
                                    list.QuotNo = "-";
                                }
                                if (item.SONo != "0" || item.SONo != null || item.SONo != "")
                                {
                                    list.SoNo = item.SONo;
                                }
                                else
                                {
                                    list.SoNo = "-";
                                }
                                if (!string.IsNullOrWhiteSpace(item.SapPSLStatus))
                                {
                                    list.PSLStatus = item.SapPSLStatus;
                                }
                                else
                                {
                                    list.PSLStatus = "-";
                                }

                                var releaseDate = item.ReleaseDate.Value.Date.ToString();
                                if (item.ReleaseDate == null)
                                {
                                    list.ReleaseDate = "-";
                                }
                                else
                                {
                                    var splitReleaseDate = releaseDate.Split(' ');
                                    list.ReleaseDate = splitReleaseDate[0].ToString();
                                }
                                var terminationDate = item.TerminationDate.Value.Date.ToString();
                                if (item.TerminationDate == null)
                                {
                                    list.TerminationDate = "-";
                                }
                                else
                                {
                                    var splitTerminationDate = terminationDate.Split(' ');
                                    list.TerminationDate = splitTerminationDate[0].ToString();
                                }
                                list.TerminationDateFormat = item.TerminationDate;
                                list.ReleaseDateFormat = item.ReleaseDate;
                                list.WipAge = item.WipAge;
                                list.DaysToExpired = item.DaysToExpired;
                                list.Validation = item.Validation;
                                list.PslAge = item.PslAge;
                                list.CatPSLStatus = item.CatPSLStatus;
                                listitem.Add(list);
                            }
                        }

                        if (data == "2Q Year To Expired")
                        {
                            if (Convert.ToInt32(item.DaysToExpired) > 90 && Convert.ToInt32(item.DaysToExpired) <= 185)
                            {
                                var list = new TablePSLOutstanding();
                                list.Row = ida++;
                                if (!string.IsNullOrWhiteSpace(item.Area))
                                {
                                    list.Area = item.Area;
                                }
                                else
                                {
                                    list.Area = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.PSLNo))
                                {
                                    list.PSLNo = item.PSLNo;
                                }
                                else
                                {
                                    list.PSLNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.StoreName))
                                {
                                    list.StoreName = item.StoreName;
                                }
                                else
                                {
                                    list.StoreName = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.Model))
                                {
                                    list.Model = item.Model;
                                }
                                else
                                {
                                    list.Model = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.SerialNumber))
                                {
                                    list.SerialNo = item.SerialNumber;
                                }
                                else
                                {
                                    list.SerialNo = "-";
                                }

                                if (item.ServiceRequestNo != "0" || item.ServiceRequestNo != null || item.ServiceRequestNo != "")
                                {
                                    list.SRNo = item.ServiceRequestNo;
                                }
                                else
                                {
                                    list.SRNo = "-";
                                }
                                if (item.QuotationNo != "0" || item.QuotationNo != null || item.QuotationNo != "")
                                {
                                    list.QuotNo = item.QuotationNo;
                                }
                                else
                                {
                                    list.QuotNo = "-";
                                }
                                if (item.SONo != "0" || item.SONo != null || item.SONo != "")
                                {
                                    list.SoNo = item.SONo;
                                }
                                else
                                {
                                    list.SoNo = "-";
                                }
                                if (!string.IsNullOrWhiteSpace(item.SapPSLStatus))
                                {
                                    list.PSLStatus = item.SapPSLStatus;
                                }
                                else
                                {
                                    list.PSLStatus = "-";
                                }

                                var releaseDate = item.ReleaseDate.Value.Date.ToString();
                                if (item.ReleaseDate == null)
                                {
                                    list.ReleaseDate = "-";
                                }
                                else
                                {
                                    var splitReleaseDate = releaseDate.Split(' ');
                                    list.ReleaseDate = splitReleaseDate[0].ToString();
                                }
                                var terminationDate = item.TerminationDate.Value.Date.ToString();
                                if (item.TerminationDate == null)
                                {
                                    list.TerminationDate = "-";
                                }
                                else
                                {
                                    var splitTerminationDate = terminationDate.Split(' ');
                                    list.TerminationDate = splitTerminationDate[0].ToString();
                                }
                                list.TerminationDateFormat = item.TerminationDate;
                                list.ReleaseDateFormat = item.ReleaseDate;
                                list.WipAge = item.WipAge;
                                list.DaysToExpired = item.DaysToExpired;
                                list.Validation = item.Validation;
                                list.PslAge = item.PslAge;
                                list.CatPSLStatus = item.CatPSLStatus;
                                listitem.Add(list);
                            }
                        }

                        if (data == "1Q Year To Expired")
                        {
                            if (Convert.ToInt32(item.DaysToExpired) > 0 && Convert.ToInt32(item.DaysToExpired) <= 90)
                            {
                                var list = new TablePSLOutstanding();
                                list.Row = ida++;
                                if (!string.IsNullOrWhiteSpace(item.Area))
                                {
                                    list.Area = item.Area;
                                }
                                else
                                {
                                    list.Area = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.PSLNo))
                                {
                                    list.PSLNo = item.PSLNo;
                                }
                                else
                                {
                                    list.PSLNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.StoreName))
                                {
                                    list.StoreName = item.StoreName;
                                }
                                else
                                {
                                    list.StoreName = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.Model))
                                {
                                    list.Model = item.Model;
                                }
                                else
                                {
                                    list.Model = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.SerialNumber))
                                {
                                    list.SerialNo = item.SerialNumber;
                                }
                                else
                                {
                                    list.SerialNo = "-";
                                }

                                if (item.ServiceRequestNo != "0" || item.ServiceRequestNo != null || item.ServiceRequestNo != "")
                                {
                                    list.SRNo = item.ServiceRequestNo;
                                }
                                else
                                {
                                    list.SRNo = "-";
                                }
                                if (item.QuotationNo != "0" || item.QuotationNo != null || item.QuotationNo != "")
                                {
                                    list.QuotNo = item.QuotationNo;
                                }
                                else
                                {
                                    list.QuotNo = "-";
                                }
                                if (item.SONo != "0" || item.SONo != null || item.SONo != "")
                                {
                                    list.SoNo = item.SONo;
                                }
                                else
                                {
                                    list.SoNo = "-";
                                }
                                if (!string.IsNullOrWhiteSpace(item.SapPSLStatus))
                                {
                                    list.PSLStatus = item.SapPSLStatus;
                                }
                                else
                                {
                                    list.PSLStatus = "-";
                                }

                                var releaseDate = item.ReleaseDate.Value.Date.ToString();
                                if (item.ReleaseDate == null)
                                {
                                    list.ReleaseDate = "-";
                                }
                                else
                                {
                                    var splitReleaseDate = releaseDate.Split(' ');
                                    list.ReleaseDate = splitReleaseDate[0].ToString();
                                }
                                var terminationDate = item.TerminationDate.Value.Date.ToString();
                                if (item.TerminationDate == null)
                                {
                                    list.TerminationDate = "-";
                                }
                                else
                                {
                                    var splitTerminationDate = terminationDate.Split(' ');
                                    list.TerminationDate = splitTerminationDate[0].ToString();
                                }
                                list.TerminationDateFormat = item.TerminationDate;
                                list.ReleaseDateFormat = item.ReleaseDate;
                                list.WipAge = item.WipAge;
                                list.DaysToExpired = item.DaysToExpired;
                                list.Validation = item.Validation;
                                list.PslAge = item.PslAge;
                                list.CatPSLStatus = item.CatPSLStatus;
                                listitem.Add(list);
                            }
                        }

                        if (data == "Q1")
                        {
                            if (item.PslAge > 0 && item.PslAge <= 90)
                            {
                                var list = new TablePSLOutstanding();
                                list.Row = ida++;
                                if (!string.IsNullOrWhiteSpace(item.Area))
                                {
                                    list.Area = item.Area;
                                }
                                else
                                {
                                    list.Area = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.PSLNo))
                                {
                                    list.PSLNo = item.PSLNo;
                                }
                                else
                                {
                                    list.PSLNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.StoreName))
                                {
                                    list.StoreName = item.StoreName;
                                }
                                else
                                {
                                    list.StoreName = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.Model))
                                {
                                    list.Model = item.Model;
                                }
                                else
                                {
                                    list.Model = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.SerialNumber))
                                {
                                    list.SerialNo = item.SerialNumber;
                                }
                                else
                                {
                                    list.SerialNo = "-";
                                }

                                if (item.ServiceRequestNo != "0" || item.ServiceRequestNo != null || item.ServiceRequestNo != "")
                                {
                                    list.SRNo = item.ServiceRequestNo;
                                }
                                else
                                {
                                    list.SRNo = "-";
                                }
                                if (item.QuotationNo != "0" || item.QuotationNo != null || item.QuotationNo != "")
                                {
                                    list.QuotNo = item.QuotationNo;
                                }
                                else
                                {
                                    list.QuotNo = "-";
                                }
                                if (item.SONo != "0" || item.SONo != null || item.SONo != "")
                                {
                                    list.SoNo = item.SONo;
                                }
                                else
                                {
                                    list.SoNo = "-";
                                }
                                if (!string.IsNullOrWhiteSpace(item.SapPSLStatus))
                                {
                                    list.PSLStatus = item.SapPSLStatus;
                                }
                                else
                                {
                                    list.PSLStatus = "-";
                                }

                                var releaseDate = item.ReleaseDate.Value.Date.ToString();
                                if (item.ReleaseDate == null)
                                {
                                    list.ReleaseDate = "-";
                                }
                                else
                                {
                                    var splitReleaseDate = releaseDate.Split(' ');
                                    list.ReleaseDate = splitReleaseDate[0].ToString();
                                }
                                var terminationDate = item.TerminationDate.Value.Date.ToString();
                                if (item.TerminationDate == null)
                                {
                                    list.TerminationDate = "-";
                                }
                                else
                                {
                                    var splitTerminationDate = terminationDate.Split(' ');
                                    list.TerminationDate = splitTerminationDate[0].ToString();
                                }
                                list.TerminationDateFormat = item.TerminationDate;
                                list.ReleaseDateFormat = item.ReleaseDate;
                                list.WipAge = item.WipAge;
                                list.DaysToExpired = item.DaysToExpired;
                                list.Validation = item.Validation;
                                list.PslAge = item.PslAge;
                                list.CatPSLStatus = item.CatPSLStatus;
                                listitem.Add(list);
                            }
                        }

                        if (data == "Q2")
                        {
                            if (item.PslAge > 91 && item.PslAge <= 180)
                            {
                                var list = new TablePSLOutstanding();
                                list.Row = ida++;
                                if (!string.IsNullOrWhiteSpace(item.Area))
                                {
                                    list.Area = item.Area;
                                }
                                else
                                {
                                    list.Area = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.PSLNo))
                                {
                                    list.PSLNo = item.PSLNo;
                                }
                                else
                                {
                                    list.PSLNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.StoreName))
                                {
                                    list.StoreName = item.StoreName;
                                }
                                else
                                {
                                    list.StoreName = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.Model))
                                {
                                    list.Model = item.Model;
                                }
                                else
                                {
                                    list.Model = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.SerialNumber))
                                {
                                    list.SerialNo = item.SerialNumber;
                                }
                                else
                                {
                                    list.SerialNo = "-";
                                }

                                if (item.ServiceRequestNo != "0" || item.ServiceRequestNo != null || item.ServiceRequestNo != "")
                                {
                                    list.SRNo = item.ServiceRequestNo;
                                }
                                else
                                {
                                    list.SRNo = "-";
                                }
                                if (item.QuotationNo != "0" || item.QuotationNo != null || item.QuotationNo != "")
                                {
                                    list.QuotNo = item.QuotationNo;
                                }
                                else
                                {
                                    list.QuotNo = "-";
                                }
                                if (item.SONo != "0" || item.SONo != null || item.SONo != "")
                                {
                                    list.SoNo = item.SONo;
                                }
                                else
                                {
                                    list.SoNo = "-";
                                }
                                if (!string.IsNullOrWhiteSpace(item.SapPSLStatus))
                                {
                                    list.PSLStatus = item.SapPSLStatus;
                                }
                                else
                                {
                                    list.PSLStatus = "-";
                                }

                                var releaseDate = item.ReleaseDate.Value.Date.ToString();
                                if (item.ReleaseDate == null)
                                {
                                    list.ReleaseDate = "-";
                                }
                                else
                                {
                                    var splitReleaseDate = releaseDate.Split(' ');
                                    list.ReleaseDate = splitReleaseDate[0].ToString();
                                }
                                var terminationDate = item.TerminationDate.Value.Date.ToString();
                                if (item.TerminationDate == null)
                                {
                                    list.TerminationDate = "-";
                                }
                                else
                                {
                                    var splitTerminationDate = terminationDate.Split(' ');
                                    list.TerminationDate = splitTerminationDate[0].ToString();
                                }
                                list.TerminationDateFormat = item.TerminationDate;
                                list.ReleaseDateFormat = item.ReleaseDate;
                                list.WipAge = item.WipAge;
                                list.DaysToExpired = item.DaysToExpired;
                                list.Validation = item.Validation;
                                list.PslAge = item.PslAge;
                                list.CatPSLStatus = item.CatPSLStatus;
                                listitem.Add(list);
                            }
                        }

                        if (data == "Q3")
                        {
                            if (item.PslAge > 181 && item.PslAge <= 270)
                            {
                                var list = new TablePSLOutstanding();
                                list.Row = ida++;
                                if (!string.IsNullOrWhiteSpace(item.Area))
                                {
                                    list.Area = item.Area;
                                }
                                else
                                {
                                    list.Area = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.PSLNo))
                                {
                                    list.PSLNo = item.PSLNo;
                                }
                                else
                                {
                                    list.PSLNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.StoreName))
                                {
                                    list.StoreName = item.StoreName;
                                }
                                else
                                {
                                    list.StoreName = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.Model))
                                {
                                    list.Model = item.Model;
                                }
                                else
                                {
                                    list.Model = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.SerialNumber))
                                {
                                    list.SerialNo = item.SerialNumber;
                                }
                                else
                                {
                                    list.SerialNo = "-";
                                }

                                if (item.ServiceRequestNo != "0" || item.ServiceRequestNo != null || item.ServiceRequestNo != "")
                                {
                                    list.SRNo = item.ServiceRequestNo;
                                }
                                else
                                {
                                    list.SRNo = "-";
                                }
                                if (item.QuotationNo != "0" || item.QuotationNo != null || item.QuotationNo != "")
                                {
                                    list.QuotNo = item.QuotationNo;
                                }
                                else
                                {
                                    list.QuotNo = "-";
                                }
                                if (item.SONo != "0" || item.SONo != null || item.SONo != "")
                                {
                                    list.SoNo = item.SONo;
                                }
                                else
                                {
                                    list.SoNo = "-";
                                }
                                if (!string.IsNullOrWhiteSpace(item.SapPSLStatus))
                                {
                                    list.PSLStatus = item.SapPSLStatus;
                                }
                                else
                                {
                                    list.PSLStatus = "-";
                                }

                                var releaseDate = item.ReleaseDate.Value.Date.ToString();
                                if (item.ReleaseDate == null)
                                {
                                    list.ReleaseDate = "-";
                                }
                                else
                                {
                                    var splitReleaseDate = releaseDate.Split(' ');
                                    list.ReleaseDate = splitReleaseDate[0].ToString();
                                }
                                var terminationDate = item.TerminationDate.Value.Date.ToString();
                                if (item.TerminationDate == null)
                                {
                                    list.TerminationDate = "-";
                                }
                                else
                                {
                                    var splitTerminationDate = terminationDate.Split(' ');
                                    list.TerminationDate = splitTerminationDate[0].ToString();
                                }
                                list.TerminationDateFormat = item.TerminationDate;
                                list.ReleaseDateFormat = item.ReleaseDate;
                                list.WipAge = item.WipAge;
                                list.DaysToExpired = item.DaysToExpired;
                                list.Validation = item.Validation;
                                list.PslAge = item.PslAge;
                                list.CatPSLStatus = item.CatPSLStatus;
                                listitem.Add(list);
                            }
                        }

                        if (data == "Q4")
                        {
                            if (item.PslAge > 271 && item.PslAge <= 365)
                            {
                                var list = new TablePSLOutstanding();
                                list.Row = ida++;
                                if (!string.IsNullOrWhiteSpace(item.Area))
                                {
                                    list.Area = item.Area;
                                }
                                else
                                {
                                    list.Area = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.PSLNo))
                                {
                                    list.PSLNo = item.PSLNo;
                                }
                                else
                                {
                                    list.PSLNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.StoreName))
                                {
                                    list.StoreName = item.StoreName;
                                }
                                else
                                {
                                    list.StoreName = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.Model))
                                {
                                    list.Model = item.Model;
                                }
                                else
                                {
                                    list.Model = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.SerialNumber))
                                {
                                    list.SerialNo = item.SerialNumber;
                                }
                                else
                                {
                                    list.SerialNo = "-";
                                }

                                if (item.ServiceRequestNo != "0" || item.ServiceRequestNo != null || item.ServiceRequestNo != "")
                                {
                                    list.SRNo = item.ServiceRequestNo;
                                }
                                else
                                {
                                    list.SRNo = "-";
                                }
                                if (item.QuotationNo != "0" || item.QuotationNo != null || item.QuotationNo != "")
                                {
                                    list.QuotNo = item.QuotationNo;
                                }
                                else
                                {
                                    list.QuotNo = "-";
                                }
                                if (item.SONo != "0" || item.SONo != null || item.SONo != "")
                                {
                                    list.SoNo = item.SONo;
                                }
                                else
                                {
                                    list.SoNo = "-";
                                }
                                if (!string.IsNullOrWhiteSpace(item.SapPSLStatus))
                                {
                                    list.PSLStatus = item.SapPSLStatus;
                                }
                                else
                                {
                                    list.PSLStatus = "-";
                                }

                                var releaseDate = item.ReleaseDate.Value.Date.ToString();
                                if (item.ReleaseDate == null)
                                {
                                    list.ReleaseDate = "-";
                                }
                                else
                                {
                                    var splitReleaseDate = releaseDate.Split(' ');
                                    list.ReleaseDate = splitReleaseDate[0].ToString();
                                }
                                var terminationDate = item.TerminationDate.Value.Date.ToString();
                                if (item.TerminationDate == null)
                                {
                                    list.TerminationDate = "-";
                                }
                                else
                                {
                                    var splitTerminationDate = terminationDate.Split(' ');
                                    list.TerminationDate = splitTerminationDate[0].ToString();
                                }
                                list.TerminationDateFormat = item.TerminationDate;
                                list.ReleaseDateFormat = item.ReleaseDate;
                                list.WipAge = item.WipAge;
                                list.DaysToExpired = item.DaysToExpired;
                                list.Validation = item.Validation;
                                list.PslAge = item.PslAge;
                                list.CatPSLStatus = item.CatPSLStatus;
                                listitem.Add(list);
                            }
                        }

                        if (data == ">Q4")
                        {
                            if (item.PslAge > 365)
                            {
                                var list = new TablePSLOutstanding();
                                list.Row = ida++;
                                if (!string.IsNullOrWhiteSpace(item.Area))
                                {
                                    list.Area = item.Area;
                                }
                                else
                                {
                                    list.Area = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.PSLNo))
                                {
                                    list.PSLNo = item.PSLNo;
                                }
                                else
                                {
                                    list.PSLNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.StoreName))
                                {
                                    list.StoreName = item.StoreName;
                                }
                                else
                                {
                                    list.StoreName = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.Model))
                                {
                                    list.Model = item.Model;
                                }
                                else
                                {
                                    list.Model = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.SerialNumber))
                                {
                                    list.SerialNo = item.SerialNumber;
                                }
                                else
                                {
                                    list.SerialNo = "-";
                                }

                                if (item.ServiceRequestNo != "0" || item.ServiceRequestNo != null || item.ServiceRequestNo != "")
                                {
                                    list.SRNo = item.ServiceRequestNo;
                                }
                                else
                                {
                                    list.SRNo = "-";
                                }
                                if (item.QuotationNo != "0" || item.QuotationNo != null || item.QuotationNo != "")
                                {
                                    list.QuotNo = item.QuotationNo;
                                }
                                else
                                {
                                    list.QuotNo = "-";
                                }
                                if (item.SONo != "0" || item.SONo != null || item.SONo != "")
                                {
                                    list.SoNo = item.SONo;
                                }
                                else
                                {
                                    list.SoNo = "-";
                                }
                                if (!string.IsNullOrWhiteSpace(item.SapPSLStatus))
                                {
                                    list.PSLStatus = item.SapPSLStatus;
                                }
                                else
                                {
                                    list.PSLStatus = "-";
                                }

                                var releaseDate = item.ReleaseDate.Value.Date.ToString();
                                if (item.ReleaseDate == null)
                                {
                                    list.ReleaseDate = "-";
                                }
                                else
                                {
                                    var splitReleaseDate = releaseDate.Split(' ');
                                    list.ReleaseDate = splitReleaseDate[0].ToString();
                                }
                                var terminationDate = item.TerminationDate.Value.Date.ToString();
                                if (item.TerminationDate == null)
                                {
                                    list.TerminationDate = "-";
                                }
                                else
                                {
                                    var splitTerminationDate = terminationDate.Split(' ');
                                    list.TerminationDate = splitTerminationDate[0].ToString();
                                }
                                list.TerminationDateFormat = item.TerminationDate;
                                list.ReleaseDateFormat = item.ReleaseDate;
                                list.WipAge = item.WipAge;
                                list.DaysToExpired = item.DaysToExpired;
                                list.Validation = item.Validation;
                                list.PslAge = item.PslAge;
                                list.CatPSLStatus = item.CatPSLStatus;
                                listitem.Add(list);
                            }
                        }
                    }
                }
                else
                {
                    var list = new TablePSLOutstanding();
                    list.Row = ida++;
                    if (!string.IsNullOrWhiteSpace(item.Area))
                    {
                        list.Area = item.Area;
                    }
                    else
                    {
                        list.Area = "-";
                    }

                    if (!string.IsNullOrWhiteSpace(item.PSLNo))
                    {
                        list.PSLNo = item.PSLNo;
                    }
                    else
                    {
                        list.PSLNo = "-";
                    }

                    if (!string.IsNullOrWhiteSpace(item.StoreName))
                    {
                        list.StoreName = item.StoreName;
                    }
                    else
                    {
                        list.StoreName = "-";
                    }

                    if (!string.IsNullOrWhiteSpace(item.Model))
                    {
                        list.Model = item.Model;
                    }
                    else
                    {
                        list.Model = "-";
                    }

                    if (!string.IsNullOrWhiteSpace(item.SerialNumber))
                    {
                        list.SerialNo = item.SerialNumber;
                    }
                    else
                    {
                        list.SerialNo = "-";
                    }

                    if (item.ServiceRequestNo != "0" || item.ServiceRequestNo != null || item.ServiceRequestNo != "")
                    {
                        list.SRNo = item.ServiceRequestNo;
                    }
                    else
                    {
                        list.SRNo = "-";
                    }
                    if (item.QuotationNo != "0" || item.QuotationNo != null || item.QuotationNo != "")
                    {
                        list.QuotNo = item.QuotationNo;
                    }
                    else
                    {
                        list.QuotNo = "-";
                    }
                    if (item.SONo != "0" || item.SONo != null || item.SONo != "")
                    {
                        list.SoNo = item.SONo;
                    }
                    else
                    {
                        list.SoNo = "-";
                    }
                    if (!string.IsNullOrWhiteSpace(item.SapPSLStatus))
                    {
                        list.PSLStatus = item.SapPSLStatus;
                    }
                    else
                    {
                        list.PSLStatus = "-";
                    }
                    var releaseDate = item.ReleaseDate.Value.Date.ToString();
                    if (item.ReleaseDate == null)
                    {
                        list.ReleaseDate = "-";
                    }
                    else
                    {
                        var splitReleaseDate = releaseDate.Split(' ');
                        list.ReleaseDate = splitReleaseDate[0].ToString();
                    }
                    var terminationDate = item.TerminationDate.Value.Date.ToString();
                    if (item.TerminationDate == null)
                    {
                        list.TerminationDate = "-";
                    }
                    else
                    {
                        var splitTerminationDate = terminationDate.Split(' ');
                        list.TerminationDate = splitTerminationDate[0].ToString();
                    }

                    list.TerminationDateFormat = item.TerminationDate;
                    list.ReleaseDateFormat = item.ReleaseDate;
                    list.WipAge = item.WipAge;
                    list.DaysToExpired = item.DaysToExpired;
                    list.Validation = item.Validation;
                    list.PslAge = item.PslAge;
                    list.CatPSLStatus = item.CatPSLStatus;
                    listitem.Add(list);
                }
            }
            return listitem;

        }

        public List<DataChartOutstanding> GetListByArea(string[] splitArea, string[] splitSalesOffice, string[] splitPSLStatus, string[] splitPSLNo, string[] splitAgeIndicator, string[] splitSerialNumber, string[] splitModel, string[] splitPriority, string releaseDateFrom, string releaseDateEnd, string terminationDateFrom, string terminationDateEnd, string areaFilter, string filterType, string PipSafety, string PipPriority, string PspProactive, string PspAfterFailure, string hid, string rental, string inventory, string others)
        {
            var getList = (from item in _ctx.PSLMaster
                           where item.Area != "" && item.Area != null && item.SapPSLStatus.Contains("Open") && item.Validation == "Outstanding" || item.Area != "" && item.Area != null && item.SapPSLStatus.Contains("Outstanding") && item.Validation == "Outstanding" || item.Area != "" && item.Area != null && item.SapPSLStatus.Contains("In Progress") && item.Validation == "Outstanding" || item.Area != "" && item.Area != null && item.SapPSLStatus.Contains("Released") && item.Validation == "Outstanding"
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.SalesOffice,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.ServiceOrderNo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.LetterDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.PslAge,
                               Priority = item.PriorityLevel,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            if (splitAgeIndicator.Count() > 0 && splitAgeIndicator != null)
            {
                foreach (var data in splitAgeIndicator)
                {
                    if (data == "Q1" || data == "Q2" || data == "Q3" || data == "Q4" || data == ">Q4")
                    {
                        getList = (from item in _ctx.PSLMaster
                                   where item.Area != "" && item.Area != null && item.SapPSLStatus.Contains("Open") && item.Validation != "Completed" || item.Area != "" && item.Area != null && item.SapPSLStatus.Contains("Outstanding") && item.Validation != "Completed" || item.Area != "" && item.Area != null && item.SapPSLStatus.Contains("In Progress") && item.Validation != "Completed" || item.Area != "" && item.Area != null && item.SapPSLStatus.Contains("Released") && item.Validation != "Completed"
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLId = item.PSLId,
                                       StoreName = item.SalesOffice,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.ServiceOrderNo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.LetterDate,
                                       PSLType = item.PSLType,
                                       AgeIndicator = item.PslAge,
                                       Priority = item.PriorityLevel,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       Validation = item.Validation
                                   });
                    }

                    if (data == "Over 1 Year" || data == "1Q" || data == "2Q" || data == "3Q" || data == "4Q")
                    {
                        getList = (from item in _ctx.PSLMaster
                                   where item.DaysToExpired != "Expired" && item.Area != "" && item.Area != null && item.SapPSLStatus.Contains("Open") && item.Validation != "Completed" || item.Area != "" && item.Area != null && item.SapPSLStatus.Contains("Outstanding") && item.Validation != "Completed" || item.Area != "" && item.Area != null && item.SapPSLStatus.Contains("In Progress") && item.Validation != "Completed" || item.Area != "" && item.Area != null && item.SapPSLStatus.Contains("Released") && item.Validation != "Completed"
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLId = item.PSLId,
                                       StoreName = item.SalesOffice,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.ServiceOrderNo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.LetterDate,
                                       PSLType = item.PSLType,
                                       AgeIndicator = item.PslAge,
                                       Priority = item.PriorityLevel,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       Validation = item.Validation
                                   });
                    }
                }
            }

            if (hid == "on" && rental == "" && inventory == "")
            {
                getList = (from item in getList
                           where item.HIDStatus != ""
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                getList = (from item in getList
                           where item.HIDStatus != "" || item.RentStatus != ""
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                getList = (from item in getList
                           where item.HIDStatus != "" || item.Plant != ""
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                getList = (from item in getList
                           where item.RentStatus != ""
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                getList = (from item in getList
                           where item.RentStatus != "" || item.Plant != ""
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                getList = (from item in getList
                           where item.Plant != ""
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                getList = (from item in getList
                           where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                getList = (from item in getList
                           where item.HIDStatus == "" || item.RentStatus == "" || item.Plant == ""
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }

            if (PipSafety == "on" || PipPriority == "on" || PspProactive == "on" || PspAfterFailure == "on")
            {
                var array = new List<string>();
                if (PipSafety == "on")
                {
                    array.Add("S");
                }
                if (PipPriority == "on")
                {
                    array.Add("P");
                }
                if (PspProactive == "on")
                {
                    array.Add("C");
                }
                if (PspAfterFailure == "on")
                {
                    array.Add("A");
                }
                string[] strArray = array.ToArray();

                getList = (from item in getList
                           where strArray.Contains(item.PSLType)
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           }).OrderByDescending(odb => odb.Area);
            }

            if (!string.IsNullOrWhiteSpace(releaseDateFrom) && !string.IsNullOrWhiteSpace(releaseDateEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseDateFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(releaseDateEnd, "dd-MM-yyyy", null);
                getList = (from item in getList
                           where item.ReleaseDate.Value >= convertToDateTimeFrom && item.ReleaseDate.Value <= convertToDateTimeEnd
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }
            if (!string.IsNullOrWhiteSpace(releaseDateFrom) && string.IsNullOrWhiteSpace(releaseDateEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseDateFrom, "dd-MM-yyyy", null);
                getList = (from item in getList
                           where item.ReleaseDate.Value == convertToDateTimeFrom
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }

            if (terminationDateFrom != "" && terminationDateEnd != "")
            {
                var convertToDateTimeFrom = DateTime.ParseExact(terminationDateFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(terminationDateEnd, "dd-MM-yyyy", null);
                getList = (from item in getList
                           where item.TerminationDate.Value >= convertToDateTimeFrom && item.TerminationDate.Value <= convertToDateTimeEnd
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }
            if (terminationDateFrom != "" && terminationDateEnd == "")
            {
                var convertToDateTimeFrom = DateTime.ParseExact(terminationDateFrom, "dd-MM-yyyy", null);
                getList = (from item in getList
                           where item.TerminationDate.Value == convertToDateTimeFrom
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }

            if (splitArea.Count() > 0 && splitArea != null)
            {
                getList = (from item in getList
                           where splitArea.Contains(item.Area)
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }

            if (splitSalesOffice.Count() > 0 && splitSalesOffice != null)
            {
                getList = (from item in getList
                           where splitSalesOffice.Contains(item.StoreName)
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }

            if (splitPSLStatus.Count() > 0 && splitPSLStatus != null)
            {
                getList = (from item in getList
                           where splitPSLStatus.Contains(item.SapPSLStatus)
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }

            if (splitPSLNo.Count() > 0 && splitPSLNo != null)
            {
                getList = (from item in getList
                           where splitPSLNo.Contains(item.PSLId)
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }

            if (splitSerialNumber.Count() > 0 && splitSerialNumber != null)
            {
                getList = (from item in getList
                           where splitSerialNumber.Contains(item.SerialNumber)
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }

            if (splitModel.Count() > 0 && splitModel != null)
            {
                getList = (from item in getList
                           where splitModel.Contains(item.Model)
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }

            if (splitPriority.Count() > 0 && splitPriority != null)
            {
                getList = (from item in getList
                           where splitPriority.Contains(item.Priority)
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }

            //var getListData = (from item in getList
            //                   where item.Area != null && item.Area != "" 
            //                   group item by item.Area into a
            //                   select new
            //                   {
            //                       PSLMasterId = a.FirstOrDefault().PSLMasterId,
            //                       Area = a.FirstOrDefault().Area,
            //                       PSLNo = a.FirstOrDefault().PSLId,
            //                       StoreName = a.FirstOrDefault().StoreName,
            //                       Model = a.FirstOrDefault().Model,
            //                       SerialNumber = a.FirstOrDefault().SerialNumber,
            //                       ServiceRequestNo = a.FirstOrDefault().ServiceRequestNo,
            //                       QuotationNo = a.FirstOrDefault().QuotationNo,
            //                       SONo = a.FirstOrDefault().SONo,
            //                       SapPSLStatus = a.FirstOrDefault().SapPSLStatus,
            //                       TerminationDate = a.FirstOrDefault().TerminationDate,
            //                       ReleaseDate = a.FirstOrDefault().ReleaseDate,
            //                       statusOpen = a.Where(w => w.SapPSLStatus.Contains("Open")).Count(),
            //                       statusRelease = a.Where(w => w.SapPSLStatus.Contains("Release")).Count(),
            //                       statusOutstanding = a.Where(w => w.SapPSLStatus.Contains("Outstanding")).Count(),
            //                       statusInProgress = a.Where(w => w.SapPSLStatus.Contains("In Progress")).Count(),
            //                       PSLType = a.FirstOrDefault().PSLType,
            //                       AgeIndicator = a.FirstOrDefault().AgeIndicator,
            //                       Priority = a.FirstOrDefault().Priority
            //                   }).OrderBy(odb => odb.Area);

            var listItem = new List<DataChartOutstanding>();
            foreach (var item in getList.ToList())
            {
                if(splitAgeIndicator.Count() > 0)
                {
                    foreach(var data in splitAgeIndicator)
                    {
                        if (data == "Over 1 Year To Expired")
                        {
                            if(Convert.ToInt32(item.DaysToExpired) > 365)
                            {
                                var list = new DataChartOutstanding();
                                list.Area = item.Area;
                                list.SAPPslStatus = item.SapPSLStatus;
                                //list.StatusOpen = item.statusOpen;
                                //list.StatusRelease = item.statusRelease;
                                //list.StatusOutstanding = item.statusOutstanding;
                                //list.StatusInProgress = item.statusInProgress;
                                listItem.Add(list);
                            }
                           
                        }

                        if (data == "4Q Year To Expired")
                        {
                            if (Convert.ToInt32(item.DaysToExpired) > 275 && Convert.ToInt32(item.DaysToExpired) <= 365)
                            {
                                var list = new DataChartOutstanding();
                                list.Area = item.Area;
                                list.SAPPslStatus = item.SapPSLStatus;
                                //list.StatusOpen = item.statusOpen;
                                //list.StatusRelease = item.statusRelease;
                                //list.StatusOutstanding = item.statusOutstanding;
                                //list.StatusInProgress = item.statusInProgress;
                                listItem.Add(list);
                            }    
                        }

                        if (data == "3Q Year To Expired")
                        {
                            if (Convert.ToInt32(item.DaysToExpired) > 185 && Convert.ToInt32(item.DaysToExpired) <= 275)
                            {
                                var list = new DataChartOutstanding();
                                list.Area = item.Area;
                                list.SAPPslStatus = item.SapPSLStatus;
                                //list.StatusOpen = item.statusOpen;
                                //list.StatusRelease = item.statusRelease;
                                //list.StatusOutstanding = item.statusOutstanding;
                                //list.StatusInProgress = item.statusInProgress;
                                listItem.Add(list);
                            }  
                        }

                        if (data == "2Q Year To Expired")
                        {
                            if (Convert.ToInt32(item.DaysToExpired) > 90 && Convert.ToInt32(item.DaysToExpired) <= 185)
                            {
                                var list = new DataChartOutstanding();
                                list.Area = item.Area;
                                list.SAPPslStatus = item.SapPSLStatus;
                                //list.StatusOpen = item.statusOpen;
                                //list.StatusRelease = item.statusRelease;
                                //list.StatusOutstanding = item.statusOutstanding;
                                //list.StatusInProgress = item.statusInProgress;
                                listItem.Add(list);
                            }
                                
                        }

                        if (data == "1Q Year To Expired")
                        {
                            if (Convert.ToInt32(item.DaysToExpired) > 0 && Convert.ToInt32(item.DaysToExpired) <= 90)
                            {
                                var list = new DataChartOutstanding();
                                list.Area = item.Area;
                                list.SAPPslStatus = item.SapPSLStatus;
                                //list.StatusOpen = item.statusOpen;
                                //list.StatusRelease = item.statusRelease;
                                //list.StatusOutstanding = item.statusOutstanding;
                                //list.StatusInProgress = item.statusInProgress;
                                listItem.Add(list);
                            }   
                        }

                        if (data == "Q1")
                        {
                            if(item.AgeIndicator > 0 && item.AgeIndicator <= 90)
                            {
                                var list = new DataChartOutstanding();
                                list.Area = item.Area;
                                list.SAPPslStatus = item.SapPSLStatus;
                                //list.StatusOpen = item.statusOpen;
                                //list.StatusRelease = item.statusRelease;
                                //list.StatusOutstanding = item.statusOutstanding;
                                //list.StatusInProgress = item.statusInProgress;
                                listItem.Add(list);
                            }
                            
                        }

                        if (data == "Q2")
                        {
                            if (item.AgeIndicator > 91 && item.AgeIndicator <= 180)
                            {
                                var list = new DataChartOutstanding();
                                list.Area = item.Area;
                                list.SAPPslStatus = item.SapPSLStatus;
                                //list.StatusOpen = item.statusOpen;
                                //list.StatusRelease = item.statusRelease;
                                //list.StatusOutstanding = item.statusOutstanding;
                                //list.StatusInProgress = item.statusInProgress;
                                listItem.Add(list);
                            }   
                        }

                        if (data == "Q3")
                        {
                            if (item.AgeIndicator > 181 && item.AgeIndicator <= 270)
                            {
                                var list = new DataChartOutstanding();
                                list.Area = item.Area;
                                list.SAPPslStatus = item.SapPSLStatus;
                                //list.StatusOpen = item.statusOpen;
                                //list.StatusRelease = item.statusRelease;
                                //list.StatusOutstanding = item.statusOutstanding;
                                //list.StatusInProgress = item.statusInProgress;
                                listItem.Add(list);
                            }
                               
                        }

                        if (data == "Q4")
                        {
                            if (item.AgeIndicator > 271 && item.AgeIndicator <= 365)
                            {
                                var list = new DataChartOutstanding();
                                list.Area = item.Area;
                                list.SAPPslStatus = item.SapPSLStatus;
                                //list.StatusOpen = item.statusOpen;
                                //list.StatusRelease = item.statusRelease;
                                //list.StatusOutstanding = item.statusOutstanding;
                                //list.StatusInProgress = item.statusInProgress;
                                listItem.Add(list);
                            }
                                
                        }

                        if (data == ">Q4")
                        {
                            if (item.AgeIndicator > 365)
                            {
                                var list = new DataChartOutstanding();
                                list.Area = item.Area;
                                list.SAPPslStatus = item.SapPSLStatus;
                                //list.StatusOpen = item.statusOpen;
                                //list.StatusRelease = item.statusRelease;
                                //list.StatusOutstanding = item.statusOutstanding;
                                //list.StatusInProgress = item.statusInProgress;
                                listItem.Add(list);
                            }
                        }
                    }
                }
                else
                {
                    var list = new DataChartOutstanding();
                    list.Area = item.Area;
                    list.SAPPslStatus = item.SapPSLStatus;
                    //list.StatusOpen = item.statusOpen;
                    //list.StatusRelease = item.statusRelease;
                    //list.StatusOutstanding = item.statusOutstanding;
                    //list.StatusInProgress = item.statusInProgress;
                    listItem.Add(list);
                }
            }
            var tempListData = new List<DataChartOutstanding>();
            var dataItem = (from data in listItem
                            group data by data.Area into area
                            select new
                            {
                                Area = area.FirstOrDefault().Area,
                                StatusOpen = area.Where(w => w.SAPPslStatus == "Open").Count(),
                                statusRelease = area.Where(w => w.SAPPslStatus.Contains("Release")).Count(),
                                statusOutstanding = area.Where(w => w.SAPPslStatus.Contains("Outstanding")).Count(),
                                statusInProgress = area.Where(w => w.SAPPslStatus.Contains("In Progress")).Count(),
                            }).ToList();
            foreach(var data in dataItem.OrderBy(odb => odb.Area))
            {
                var tempData = new DataChartOutstanding();
                tempData.Area = data.Area;
                tempData.StatusOpen = data.StatusOpen;
                tempData.StatusInProgress = data.statusInProgress;
                tempData.StatusOutstanding = data.statusOutstanding;
                tempData.StatusRelease = data.statusRelease;
                tempListData.Add(tempData);
            }
            return tempListData;
        }

        public List<DataChartOutstanding> GetListByAreaPostArea(string[] splitArea, string[] splitSalesOffice, string[] splitPSLStatus, string[] splitPSLNo, string[] splitSerialNumber, string[] splitModel, string[] splitpriority, string[] splitAgeIndicator, string releaseDateFrom, string releaseDateEnd, string terminationDateFrom, string terminationDateEnd, string areaFilter,string filterType, string PipSafety, string PipPriority, string PspProactive, string PspAfterFailure, string hid, string rental, string inventory, string others)
        {
            var getList = (from item in _ctx.PSLMaster
                           where item.Area.Contains(areaFilter) && item.SapPSLStatus.Contains("Open") && item.Validation == "Outstanding" || item.Area.Contains(areaFilter) && item.SapPSLStatus.Contains("Outstanding") && item.Validation == "Outstanding" || item.Area.Contains(areaFilter) && item.SapPSLStatus.Contains("In Progress") && item.Validation == "Outstanding" || item.Area.Contains(areaFilter) && item.SapPSLStatus.Contains("Released") && item.Validation == "Outstanding"
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.SalesOffice,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.ServiceOrderNo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.LetterDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.PslAge,
                               Priority = item.PriorityLevel,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Validation = item.Validation,
                               DaysToExpired = item.DaysToExpired
                           });

            if (PipSafety == "on" || PipPriority == "on" || PspProactive == "on" || PspAfterFailure == "on")
            {
                var array = new List<string>();
                if (PipSafety == "on")
                {
                    array.Add("S");
                }
                if (PipPriority == "on")
                {
                    array.Add("P");
                }
                if (PspProactive == "on")
                {
                    array.Add("C");
                }
                if (PspAfterFailure == "on")
                {
                    array.Add("A");
                }
                string[] strArray = array.ToArray();

                getList = (from item in _ctx.PSLMaster
                           where item.Area.Contains(areaFilter) && item.SapPSLStatus.Contains("Open") && item.Validation == "Outstanding" && strArray.Contains(item.PSLType) || item.Area.Contains(areaFilter) && item.SapPSLStatus.Contains("Outstanding") && item.Validation == "Outstanding" && strArray.Contains(item.PSLType) || item.Area.Contains(areaFilter) && item.SapPSLStatus.Contains("In Progress") && item.Validation == "Outstanding" && strArray.Contains(item.PSLType) || item.Area.Contains(areaFilter) && item.SapPSLStatus.Contains("Released") && item.Validation == "Outstanding" && strArray.Contains(item.PSLType)
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.SalesOffice,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.ServiceOrderNo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.LetterDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.PslAge,
                               Priority = item.PriorityLevel,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Validation = item.Validation,
                               DaysToExpired = item.DaysToExpired
                           });
            }

            if (hid == "on" && rental == "" && inventory == "")
            {
                getList = (from item in getList
                           where item.HIDStatus != ""
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Validation = item.Validation,
                               DaysToExpired = item.DaysToExpired
                           });
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                getList = (from item in getList
                           where item.HIDStatus != "" || item.RentStatus != ""
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Validation = item.Validation,
                               DaysToExpired = item.DaysToExpired
                           });
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                getList = (from item in getList
                           where item.HIDStatus != "" || item.Plant != ""
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Validation = item.Validation,
                               DaysToExpired = item.DaysToExpired
                           });
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                getList = (from item in getList
                           where item.RentStatus != ""
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Validation = item.Validation,
                               DaysToExpired = item.DaysToExpired
                           });
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                getList = (from item in getList
                           where item.RentStatus != "" || item.Plant != ""
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Validation = item.Validation,
                               DaysToExpired = item.DaysToExpired
                           });
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                getList = (from item in getList
                           where item.Plant != ""
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Validation = item.Validation,
                               DaysToExpired = item.DaysToExpired
                           });
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                getList = (from item in getList
                           where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Validation = item.Validation,
                               DaysToExpired = item.DaysToExpired
                           });
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                getList = (from item in getList
                           where item.HIDStatus == "" || item.RentStatus == "" || item.Plant == ""
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Validation = item.Validation,
                               DaysToExpired = item.DaysToExpired
                           });
            }

            if (!string.IsNullOrWhiteSpace(releaseDateFrom) && !string.IsNullOrWhiteSpace(releaseDateEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseDateFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(releaseDateEnd, "dd-MM-yyyy", null);
                getList = (from item in getList
                           where item.ReleaseDate.Value >= convertToDateTimeFrom && item.ReleaseDate.Value <= convertToDateTimeEnd
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Validation = item.Validation,
                               DaysToExpired = item.DaysToExpired
                           });
            }
            if (!string.IsNullOrWhiteSpace(releaseDateFrom) && string.IsNullOrWhiteSpace(releaseDateEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(releaseDateFrom, "dd-MM-yyyy", null);
                getList = (from item in getList
                           where item.ReleaseDate.Value == convertToDateTimeFrom
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Validation = item.Validation,
                               DaysToExpired = item.DaysToExpired
                           });
            }

            if (terminationDateFrom != "" && terminationDateEnd != "")
            {
                var convertToDateTimeFrom = DateTime.ParseExact(terminationDateFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(terminationDateEnd, "dd-MM-yyyy", null);
                getList = (from item in getList
                           where item.TerminationDate.Value >= convertToDateTimeFrom && item.TerminationDate.Value <= convertToDateTimeEnd
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Validation = item.Validation,
                               DaysToExpired = item.DaysToExpired
                           });
            }
            if (terminationDateFrom != "" && terminationDateEnd == "")
            {
                var convertToDateTimeFrom = DateTime.ParseExact(terminationDateFrom, "dd-MM-yyyy", null);
                getList = (from item in getList
                           where item.TerminationDate.Value == convertToDateTimeFrom
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Validation = item.Validation,
                               DaysToExpired = item.DaysToExpired
                           });
            }

            if (splitArea.Count() > 0 && splitArea != null)
            {
                getList = (from item in getList
                           where splitArea.Contains(item.Area)
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Validation = item.Validation,
                               DaysToExpired = item.DaysToExpired
                           });
            }

            if (splitSalesOffice.Count() > 0 && splitSalesOffice != null)
            {
                getList = (from item in getList
                           where splitSalesOffice.Contains(item.StoreName)
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Validation = item.Validation,
                               DaysToExpired = item.DaysToExpired
                           });
            }

            if (splitPSLStatus.Count() > 0 && splitPSLStatus != null)
            {
                getList = (from item in getList
                           where splitPSLStatus.Contains(item.SapPSLStatus)
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Validation = item.Validation,
                               DaysToExpired = item.DaysToExpired
                           });
            }

            if (splitPSLNo.Count() > 0 && splitPSLNo != null)
            {
                getList = (from item in getList
                           where splitPSLNo.Contains(item.PSLId)
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Validation = item.Validation,
                               DaysToExpired = item.DaysToExpired
                           });
            }

            if (splitAgeIndicator.Count() > 0 && splitAgeIndicator != null)
            {
                foreach(var data in splitAgeIndicator)
                {
                    if(data == "Q1" || data == "Q2" || data == "Q3" || data == "Q4" || data == ">Q4")
                    {
                        getList = (from item in getList
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLId = item.PSLId,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       AgeIndicator = item.AgeIndicator,
                                       Priority = item.Priority,
                                       HIDStatus = item.HIDStatus,
                                       RentStatus = item.RentStatus,
                                       Plant = item.Plant,
                                       Validation = item.Validation,
                                       DaysToExpired = item.DaysToExpired
                                   });
                    }

                    if(data == "1Q Year To Expired" || data == "2Q Year To Expired" || data == "3Q Year To Expired" || data == "4Q Year To Expired" || data == "Over 1 Year To Expired")
                    {
                        getList = (from item in getList
                                   where item.DaysToExpired != "Expired"
                                   select new
                                   {
                                       PSLMasterId = item.PSLMasterId,
                                       Area = item.Area,
                                       PSLId = item.PSLId,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       AgeIndicator = item.AgeIndicator,
                                       Priority = item.Priority,
                                       HIDStatus = item.HIDStatus,
                                       RentStatus = item.RentStatus,
                                       Plant = item.Plant,
                                       Validation = item.Validation,
                                       DaysToExpired = item.DaysToExpired
                                   });
                    }
                }
            }

            if (splitSerialNumber.Count() > 0 && splitSerialNumber != null)
            {
                getList = (from item in getList
                           where splitSerialNumber.Contains(item.SerialNumber)
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Validation = item.Validation,
                               DaysToExpired = item.DaysToExpired
                           });
            }

            if (splitModel.Count() > 0 && splitModel != null)
            {
                getList = (from item in getList
                           where splitModel.Contains(item.Model)
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Validation = item.Validation,
                               DaysToExpired = item.DaysToExpired
                           });
            }

            if (splitpriority.Count() > 0 && splitpriority != null)
            {
                getList = (from item in getList
                           where splitpriority.Contains(item.Priority)
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLId = item.PSLId,
                               StoreName = item.StoreName,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.SONo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               AgeIndicator = item.AgeIndicator,
                               Priority = item.Priority,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Validation = item.Validation,
                               DaysToExpired = item.DaysToExpired
                           });
            }

            //var getListData = (from item in getList
            //                   where item.Area.Contains(areaFilter)
            //                   group item by item.Area into a
            //                   select new
            //                   {
            //                       PSLMasterId = a.FirstOrDefault().PSLMasterId,
            //                       Area = a.FirstOrDefault().Area,
            //                       PSLNo = a.FirstOrDefault().PSLId,
            //                       StoreName = a.FirstOrDefault().StoreName,
            //                       Model = a.FirstOrDefault().Model,
            //                       SerialNumber = a.FirstOrDefault().SerialNumber,
            //                       ServiceRequestNo = a.FirstOrDefault().ServiceRequestNo,
            //                       QuotationNo = a.FirstOrDefault().QuotationNo,
            //                       SONo = a.FirstOrDefault().SONo,
            //                       SapPSLStatus = a.FirstOrDefault().SapPSLStatus,
            //                       TerminationDate = a.FirstOrDefault().TerminationDate,
            //                       ReleaseDate = a.FirstOrDefault().ReleaseDate,
            //                       statusOpen = a.Where(w => w.SapPSLStatus.Contains("Open")).Count(),
            //                       statusRelease = a.Where(w => w.SapPSLStatus.Contains("Release")).Count(),
            //                       statusOutstanding = a.Where(w => w.SapPSLStatus.Contains("Outstanding")).Count(),
            //                       statusInProgress = a.Where(w => w.SapPSLStatus.Contains("In Progress")).Count(),
            //                       PSLType = a.FirstOrDefault().PSLType,
            //                       AgeIndicator = a.FirstOrDefault().AgeIndicator,
            //                       Priority = a.FirstOrDefault().Priority
            //                   }).OrderBy(odb => odb.Area);

            var listItem = new List<DataChartOutstanding>();
            foreach (var item in getList.ToList())
            {
                if (splitAgeIndicator.Count() > 0)
                {
                    foreach (var data in splitAgeIndicator)
                    {
                        if (data == "Over 1 Year To Expired")
                        {
                            if (Convert.ToInt32(item.DaysToExpired) > 365)
                            {
                                var list = new DataChartOutstanding();
                                var listData = new List<int>();
                                //listData.Add(item.statusOpen);
                                //listData.Add(item.statusRelease);
                                //listData.Add(item.statusOutstanding);
                                //listData.Add(item.statusInProgress);
                                list.Area = item.Area;
                                list.SAPPslStatus = item.SapPSLStatus;
                                //list.Data = listData;
                                //list.TotalData = item.statusOpen + item.statusRelease + item.statusOutstanding + item.statusInProgress;
                                listItem.Add(list);
                            }

                        }

                        if (data == "4Q Year To Expired")
                        {
                            if (Convert.ToInt32(item.DaysToExpired) > 275 && Convert.ToInt32(item.DaysToExpired) <= 365)
                            {
                                var list = new DataChartOutstanding();
                                var listData = new List<int>();
                                //listData.Add(item.statusOpen);
                                //listData.Add(item.statusRelease);
                                //listData.Add(item.statusOutstanding);
                                //listData.Add(item.statusInProgress);
                                list.Area = item.Area;
                                list.SAPPslStatus = item.SapPSLStatus;
                                //list.Data = listData;
                                //list.TotalData = item.statusOpen + item.statusRelease + item.statusOutstanding + item.statusInProgress;
                                listItem.Add(list);
                            }
                        }

                        if (data == "3Q Year To Expired")
                        {
                            if (Convert.ToInt32(item.DaysToExpired) > 185 && Convert.ToInt32(item.DaysToExpired) <= 275)
                            {
                                var list = new DataChartOutstanding();
                                var listData = new List<int>();
                                //listData.Add(item.statusOpen);
                                //listData.Add(item.statusRelease);
                                //listData.Add(item.statusOutstanding);
                                //listData.Add(item.statusInProgress);
                                list.Area = item.Area;
                                list.SAPPslStatus = item.SapPSLStatus;
                                //list.Data = listData;
                                //list.TotalData = item.statusOpen + item.statusRelease + item.statusOutstanding + item.statusInProgress;
                                listItem.Add(list);
                            }
                        }

                        if (data == "2Q Year To Expired")
                        {
                            if (Convert.ToInt32(item.DaysToExpired) > 90 && Convert.ToInt32(item.DaysToExpired) <= 185)
                            {
                                var list = new DataChartOutstanding();
                                var listData = new List<int>();
                                //listData.Add(item.statusOpen);
                                //listData.Add(item.statusRelease);
                                //listData.Add(item.statusOutstanding);
                                //listData.Add(item.statusInProgress);
                                list.Area = item.Area;
                                list.SAPPslStatus = item.SapPSLStatus;
                                //list.Data = listData;
                                //list.TotalData = item.statusOpen + item.statusRelease + item.statusOutstanding + item.statusInProgress;
                                listItem.Add(list);
                            }

                        }

                        if (data == "1Q Year To Expired")
                        {
                            if (Convert.ToInt32(item.DaysToExpired) > 0 && Convert.ToInt32(item.DaysToExpired) <= 90)
                            {
                                var list = new DataChartOutstanding();
                                var listData = new List<int>();
                                //listData.Add(item.statusOpen);
                                //listData.Add(item.statusRelease);
                                //listData.Add(item.statusOutstanding);
                                //listData.Add(item.statusInProgress);
                                list.Area = item.Area;
                                list.SAPPslStatus = item.SapPSLStatus;
                                //list.Data = listData;
                                //list.TotalData = item.statusOpen + item.statusRelease + item.statusOutstanding + item.statusInProgress;
                                listItem.Add(list);
                            }
                        }

                        if (data == "Q1")
                        {
                            if (item.AgeIndicator > 0 && item.AgeIndicator <= 90)
                            {
                                var list = new DataChartOutstanding();
                                var listData = new List<int>();
                                //listData.Add(item.statusOpen);
                                //listData.Add(item.statusRelease);
                                //listData.Add(item.statusOutstanding);
                                //listData.Add(item.statusInProgress);
                                list.Area = item.Area;
                                list.SAPPslStatus = item.SapPSLStatus;
                                //list.Data = listData;
                                //list.TotalData = item.statusOpen + item.statusRelease + item.statusOutstanding + item.statusInProgress;
                                listItem.Add(list);
                            }

                        }

                        if (data == "Q2")
                        {
                            if (item.AgeIndicator > 91 && item.AgeIndicator <= 180)
                            {
                                var list = new DataChartOutstanding();
                                var listData = new List<int>();
                                //listData.Add(item.statusOpen);
                                //listData.Add(item.statusRelease);
                                //listData.Add(item.statusOutstanding);
                                //listData.Add(item.statusInProgress);
                                list.Area = item.Area;
                                list.SAPPslStatus = item.SapPSLStatus;
                                //list.Data = listData;
                                //list.TotalData = item.statusOpen + item.statusRelease + item.statusOutstanding + item.statusInProgress;
                                listItem.Add(list);
                            }
                        }

                        if (data == "Q3")
                        {
                            if (item.AgeIndicator > 181 && item.AgeIndicator <= 270)
                            {
                                var list = new DataChartOutstanding();
                                var listData = new List<int>();
                                //listData.Add(item.statusOpen);
                                //listData.Add(item.statusRelease);
                                //listData.Add(item.statusOutstanding);
                                //listData.Add(item.statusInProgress);
                                list.Area = item.Area;
                                list.SAPPslStatus = item.SapPSLStatus;
                                //list.Data = listData;
                                //list.TotalData = item.statusOpen + item.statusRelease + item.statusOutstanding + item.statusInProgress;
                                listItem.Add(list);
                            }

                        }

                        if (data == "Q4")
                        {
                            if (item.AgeIndicator > 271 && item.AgeIndicator <= 365)
                            {
                                var list = new DataChartOutstanding();
                                var listData = new List<int>();
                                //listData.Add(item.statusOpen);
                                //listData.Add(item.statusRelease);
                                //listData.Add(item.statusOutstanding);
                                //listData.Add(item.statusInProgress);
                                list.Area = item.Area;
                                list.SAPPslStatus = item.SapPSLStatus;
                                //list.Data = listData;
                                //list.TotalData = item.statusOpen + item.statusRelease + item.statusOutstanding + item.statusInProgress;
                                listItem.Add(list);
                            }

                        }

                        if (data == ">Q4")
                        {
                            if (item.AgeIndicator > 365)
                            {
                                var list = new DataChartOutstanding();
                                var listData = new List<int>();
                                //listData.Add(item.statusOpen);
                                //listData.Add(item.statusRelease);
                                //listData.Add(item.statusOutstanding);
                                //listData.Add(item.statusInProgress);
                                list.Area = item.Area;
                                list.SAPPslStatus = item.SapPSLStatus;
                                //list.Data = listData;
                                //list.TotalData = item.statusOpen + item.statusRelease + item.statusOutstanding + item.statusInProgress;
                                listItem.Add(list);
                            }
                        }
                    }
                }
                else
                {
                    var list = new DataChartOutstanding();
                    var listData = new List<int>();
                    //listData.Add(item.statusOpen);
                    //listData.Add(item.statusRelease);
                    //listData.Add(item.statusOutstanding);
                    //listData.Add(item.statusInProgress);
                    list.Area = item.Area;
                    list.SAPPslStatus = item.SapPSLStatus;
                    //list.Data = listData;
                    //list.TotalData = item.statusOpen + item.statusRelease + item.statusOutstanding + item.statusInProgress;
                    listItem.Add(list);
                }
            }
            var tempData = new List<DataChartOutstanding>();
            var getData = (from item in listItem
                           group item by item.Area into area
                           select new
                           {
                               Area = area.FirstOrDefault().Area,
                               StatusOpen = area.Where(w => w.SAPPslStatus == "Open").Count(),
                               statusRelease = area.Where(w => w.SAPPslStatus.Contains("Release")).Count(),
                               statusOutstanding = area.Where(w => w.SAPPslStatus.Contains("Outstanding")).Count(),
                               statusInProgress = area.Where(w => w.SAPPslStatus.Contains("In Progress")).Count()
                           }).ToList();
            foreach(var item in getData)
            {
                var list = new DataChartOutstanding();
                var listData = new List<int>();
                listData.Add(item.StatusOpen);
                listData.Add(item.statusRelease);
                listData.Add(item.statusOutstanding);
                listData.Add(item.statusInProgress);
                list.Area = item.Area;
                list.Data = listData;
                list.TotalData = item.StatusOpen + item.statusRelease + item.statusOutstanding + item.statusInProgress;
                tempData.Add(list);
            }
            return tempData;
        }

        public List<TablePSLCompletionPSP> getDataTableCompletionPSP(string dateFrom, string dateEnd, string[] splitArea, string[] storeName, int column, string order, bool searchArea, bool searchPSLNo, bool searchStoreName, bool searchModel, bool searchSerialNumber, bool searchSRNo, bool searchQuotNo, bool searchSoNo, bool searchSAPPSLStatus, string valueSearch, string hid, string rental, string inventory, string others, string month)
        {
            DateTime convertToDateTimeFrom = DateTime.Now;
            DateTime convertToDateTimeEnd = DateTime.Now;
            if (!string.IsNullOrWhiteSpace(dateFrom) && !string.IsNullOrWhiteSpace(dateEnd))
            {
                convertToDateTimeFrom = DateTime.ParseExact(dateFrom, "dd-MM-yyyy", null);
                convertToDateTimeEnd = DateTime.ParseExact(dateEnd, "dd-MM-yyyy", null);
            }
            if(!string.IsNullOrWhiteSpace(dateFrom) && !string.IsNullOrWhiteSpace(dateEnd))
            {
                convertToDateTimeFrom = DateTime.ParseExact(dateFrom, "dd-MM-yyyy", null);
            }
            int monthNumber = 0;
            if(month == "Jan")
            {
                monthNumber = 1;
            }
            if (month == "Feb")
            {
                monthNumber = 2;
            }
            if (month == "Mar")
            {
                monthNumber = 3;
            }
            if (month == "Apr")
            {
                monthNumber = 4;
            }
            if (month == "May")
            {
                monthNumber = 5;
            }
            if (month == "Jun")
            {
                monthNumber = 6;
            }
            if (month == "Jul")
            {
                monthNumber = 7;
            }
            if (month == "Aug")
            {
                monthNumber = 8;
            }
            if (month == "Sep")
            {
                monthNumber = 9;
            }
            if (month == "Oct")
            {
                monthNumber = 10;
            }
            if (month == "Nov")
            {
                monthNumber = 11;
            }
            if (month == "Dec")
            {
                monthNumber = 12;
            }
            var dateNow = DateTime.Now;
            var getListFromDate = (from item in _ctx.PSLMaster
                                   where item.Area != null && item.TerminationDate.Value.Year.Equals(convertToDateTimeFrom.Year) && item.TerminationDate.Value.Month == monthNumber && item.PSLType == "C" && item.PCR == "" && item.MaxOverlimit == "Overlimit" && item.RepairDate == null
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLId,
                                       StoreName = item.SalesOffice,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.ServiceOrderNo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ServiceOrderReleaseDate,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge
                                   });

            if (hid == "on" && rental == "" && inventory == "")
            {
                getListFromDate = (from item in getListFromDate
                                   where item.HIDStatus != ""
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge
                                   });
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                getListFromDate = (from item in getListFromDate
                                   where item.HIDStatus != "" || item.RentStatus != ""
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge
                                   });
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                getListFromDate = (from item in getListFromDate
                                   where item.HIDStatus != "" || item.Plant != ""
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge
                                   });
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                getListFromDate = (from item in getListFromDate
                                   where item.RentStatus != ""
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge
                                   });
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                getListFromDate = (from item in getListFromDate
                                   where item.RentStatus != "" || item.Plant != ""
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge
                                   });
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                getListFromDate = (from item in getListFromDate
                                   where item.Plant != ""
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge
                                   });
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                getListFromDate = (from item in getListFromDate
                                   where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge
                                   });
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                getListFromDate = (from item in getListFromDate
                                   where item.HIDStatus == "" || item.RentStatus == "" || item.Plant == ""
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge
                                   });
            }


            if (splitArea != null && splitArea.Count() > 0)
            {
                getListFromDate = (from item in getListFromDate
                                   where splitArea.Contains(item.Area)
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge
                                   });

            }

            if (storeName.Count() > 0 && storeName != null)
            {
                getListFromDate = (from item in getListFromDate
                                   where storeName.Contains(item.StoreName)
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       ReleaseDate = item.ReleaseDate,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge
                                   });
            }

            //if (dateFrom != "" && dateEnd != "")
            //{
            //    var convertToDateTimeFrom = DateTime.ParseExact(dateFrom, "dd-MM-yyyy", null);
            //    var convertToDateTimeEnd = DateTime.ParseExact(dateEnd, "dd-MM-yyyy", null);
            //    getListFromDate = (from item in getListFromDate
            //                       where item.TerminationDate.Value >= convertToDateTimeFrom && item.TerminationDate.Value <= convertToDateTimeEnd 
            //                       select new
            //                       {
            //                           Area = item.Area,
            //                           PSLNo = item.PSLNo,
            //                           StoreName = item.StoreName,
            //                           Model = item.Model,
            //                           SerialNumber = item.SerialNumber,
            //                           ServiceRequestNo = item.ServiceRequestNo,
            //                           QuotationNo = item.QuotationNo,
            //                           SONo = item.SONo,
            //                           SapPSLStatus = item.SapPSLStatus,
            //                           TerminationDate = item.TerminationDate,
            //                           ReleaseDate = item.ReleaseDate,
            //                           RentStatus = item.RentStatus,
            //                           HIDStatus = item.HIDStatus,
            //                           Plant = item.Plant,
            //                           DaysToExpired = item.DaysToExpired,
            //                           WipAge = (item.WipAge != 0) ? item.WipAge : 0,
            //                           Validation = item.Validation,
            //                           PslAge = item.PslAge
            //                       });
            //}
            //if (dateFrom != "" && dateEnd == "")
            //{
            //    var convertToDateTimeFrom = DateTime.ParseExact(dateFrom, "dd-MM-yyyy", null);
            //    getListFromDate = (from item in getListFromDate
            //                       where item.TerminationDate.Value == convertToDateTimeFrom 
            //                       select new
            //                       {
            //                           Area = item.Area,
            //                           PSLNo = item.PSLNo,
            //                           StoreName = item.StoreName,
            //                           Model = item.Model,
            //                           SerialNumber = item.SerialNumber,
            //                           ServiceRequestNo = item.ServiceRequestNo,
            //                           QuotationNo = item.QuotationNo,
            //                           SONo = item.SONo,
            //                           SapPSLStatus = item.SapPSLStatus,
            //                           TerminationDate = item.TerminationDate,
            //                           ReleaseDate = item.ReleaseDate,
            //                           RentStatus = item.RentStatus,
            //                           HIDStatus = item.HIDStatus,
            //                           Plant = item.Plant,
            //                           DaysToExpired = item.DaysToExpired,
            //                           WipAge = (item.WipAge != 0) ? item.WipAge : 0,
            //                           Validation = item.Validation,
            //                           PslAge = item.PslAge
            //                       });
            //}

            if (!string.IsNullOrWhiteSpace(valueSearch))
            {
                if (searchArea == true || searchPSLNo || true || searchStoreName == true || searchModel == true || searchSerialNumber == true || searchSRNo == true || searchQuotNo == true || searchSoNo == true || searchSAPPSLStatus == true)
                {
                    getListFromDate = getListFromDate.Where(w => w.Area.Contains(valueSearch) || w.PSLNo.Contains(valueSearch) || w.StoreName.Contains(valueSearch) || w.Model.Contains(valueSearch) || w.SerialNumber.Contains(valueSearch) || w.ServiceRequestNo.ToString().Contains(valueSearch) || w.QuotationNo.ToString().Contains(valueSearch) || w.SONo.ToString().Contains(valueSearch) || w.SapPSLStatus.Contains(valueSearch));
                }
            }
            
            #region OrderData
            if (column == 0)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.Area);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.Area);
                }
            }
            else if (column == 1)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.PSLNo);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.PSLNo);
                }
            }
            else if (column == 2)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.StoreName);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.StoreName);
                }
            }
            else if (column == 3)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.Model);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.Model);
                }
            }
            else if (column == 4)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.SerialNumber);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.SerialNumber);
                }
            }
            else if (column == 5)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.ServiceRequestNo);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.ServiceRequestNo);
                }
            }
            else if (column == 6)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.QuotationNo);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.QuotationNo);
                }
            }
            else if (column == 7)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.SONo);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.SONo);
                }
            }
            else if (column == 8)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.SapPSLStatus);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.SapPSLStatus);
                }
            }
            #endregion
            var listitem = new List<TablePSLCompletionPSP>();
            int ida = 0;
            foreach (var item in getListFromDate.ToList())
            {
                var list = new TablePSLCompletionPSP();
                list.Row = ida++;
                if (!string.IsNullOrWhiteSpace(item.Area))
                {
                    list.Area = item.Area;
                }
                else
                {
                    list.Area = "-";
                }

                if (!string.IsNullOrWhiteSpace(item.PSLNo))
                {
                    list.PSLNo = item.PSLNo;
                }
                else
                {
                    list.PSLNo = "-";
                }

                if (!string.IsNullOrWhiteSpace(item.StoreName))
                {
                    list.StoreName = item.StoreName;
                }
                else
                {
                    list.StoreName = "-";
                }

                if (!string.IsNullOrWhiteSpace(item.Model))
                {
                    list.Model = item.Model;
                }
                else
                {
                    list.Model = "-";
                }

                if (!string.IsNullOrWhiteSpace(item.SerialNumber))
                {
                    list.SerialNo = item.SerialNumber;
                }
                else
                {
                    list.SerialNo = "-";
                }
                
                if (item.ServiceRequestNo != "0" || item.ServiceRequestNo != null || item.ServiceRequestNo != "")
                {
                    list.SRNo = item.ServiceRequestNo;
                }
                else
                {
                    list.SRNo = "-";
                }
                if (item.QuotationNo != "0" || item.QuotationNo != null || item.QuotationNo != "")
                {
                    list.QuotNo = item.QuotationNo;
                }
                else
                {
                    list.QuotNo = "-";
                }
                if (item.SONo != "0" || item.SONo != null || item.SONo != "")
                {
                    list.SoNo = item.SONo;
                }
                else
                {
                    list.SoNo = "-";
                }
                if (!string.IsNullOrWhiteSpace(item.SapPSLStatus))
                {
                    list.PSLStatus = item.SapPSLStatus;
                }
                else
                {
                    list.PSLStatus = "-";
                }
                
                list.ReleaseDate = item.ReleaseDate;
                list.TerminationDate = item.TerminationDate;
                list.WipAge = item.WipAge;
                list.DaysToExpired = item.DaysToExpired;
                list.Validation = item.Validation;
                list.PslAge = item.PslAge;
                listitem.Add(list);
            }
            return listitem;

        }

        public List<DataChartPSLCompletionPSP> GetListByAreaForCompletionPSP(string[] splitArea, string[] splitStoreName, int monthFrom, int monthEnd, int yearFrom, int yearEnd, string dateFrom, string dateEnd, string hid, string rental, string inventory, string others)
        {

            var listItem = new List<DataChartPSLCompletionPSP>();
            var datenow = DateTime.Now;
            if (splitArea.Count() == 1)
            {
                DateTime convertToDateTimeFrom = DateTime.Now;
                DateTime convertToDateTimeEnd = DateTime.Now;
                if (!string.IsNullOrWhiteSpace(dateFrom) && !string.IsNullOrWhiteSpace(dateEnd))
                {
                    datenow = DateTime.Now;
                    string monthName;
                    DateTime dateFilter;
                    for (var i = monthFrom; i <= monthEnd; i++)
                    {
                        int monthParam;
                        if ((datenow.Month + i) > 12 || (datenow.Month + i) <= 0)
                        {
                            monthParam = i;
                        }
                        else
                        {
                            monthParam = i;
                        }
                        dateFilter = new DateTime(yearEnd, monthParam, 1);
                        monthName = new DateTime(datenow.Year, monthParam, 1).ToString("MMM");

                        var getListDataAll = (from item in _ctx.PSLMaster
                                              where item.Area != null && item.Area != "" && item.PSLType == "C"
                                              select new
                                              {
                                                  pslMasterId = item.PSLMasterId,
                                                  area = item.Area,
                                                  storeName = item.SalesOffice,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.RentStatus,
                                                  hidStatus = item.HIDStatus,
                                                  plant = item.Plant,
                                                  pslStatus = item.Validation,
                                                  PSLType = item.PSLType,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLId = item.PSLId
                                              });

                        if (hid == "on" && rental == "" && inventory == "")
                        {
                            getListDataAll = (from item in getListDataAll
                                              where item.hidStatus != ""
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PSLType = item.PSLType,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLId = item.PSLId
                                              });
                        }

                        if (hid == "on" && rental == "on" && inventory == "")
                        {
                            getListDataAll = (from item in getListDataAll
                                              where item.hidStatus != "" || item.rentStatus != ""
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PSLType = item.PSLType,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLId = item.PSLId
                                              });
                        }

                        if (hid == "on" && rental == "" && inventory == "on")
                        {
                            getListDataAll = (from item in getListDataAll
                                              where item.hidStatus != "" || item.plant != ""
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PSLType = item.PSLType,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLId = item.PSLId
                                              });
                        }

                        if (hid == "" && rental == "on" && inventory == "")
                        {
                            getListDataAll = (from item in getListDataAll
                                              where item.rentStatus != ""
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PSLType = item.PSLType,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLId = item.PSLId
                                              });
                        }

                        if (hid == "" && rental == "on" && inventory == "on")
                        {
                            getListDataAll = (from item in getListDataAll
                                              where item.rentStatus != "" || item.plant != ""
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PSLType = item.PSLType,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLId = item.PSLId
                                              });
                        }

                        if (hid == "" && rental == "" && inventory == "on")
                        {
                            getListDataAll = (from item in getListDataAll
                                              where item.plant != ""
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PSLType = item.PSLType,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLId = item.PSLId
                                              });
                        }

                        if (hid == "on" && rental == "on" && inventory == "on")
                        {
                            getListDataAll = (from item in getListDataAll
                                              where item.rentStatus != "" || item.plant != "" || item.hidStatus != ""
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PSLType = item.PSLType,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLId = item.PSLId
                                              });
                        }

                        if (others == "on" && hid == "" && rental == "" && inventory == "")
                        {
                            getListDataAll = (from item in getListDataAll
                                              where item.hidStatus == "" || item.rentStatus == "" || item.plant == ""
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PSLType = item.PSLType,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLId = item.PSLId
                                              });
                        }

                        if (splitStoreName.Count() > 0)
                        {
                            getListDataAll = (from item in getListDataAll
                                              where splitStoreName.Contains(item.storeName)
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PSLType = item.PSLType,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLId = item.PSLId
                                              });
                        }

                        var getList = (from psl in getListDataAll
                                       where splitArea.Contains(psl.area) && psl.TerminationDate.Value.Month.Equals(dateFilter.Month) && psl.TerminationDate.Value.Year.Equals(dateFilter.Year)
                                       group psl by psl.area into a
                                       select new
                                       {
                                           pslMasterId = a.FirstOrDefault().pslMasterId,
                                           area = a.FirstOrDefault().area,
                                           storeName = a.FirstOrDefault().storeName,
                                           statusCompleted = a.Count(w => w.pslStatus.Contains("Completed") && w.PCR == "" && w.RepairDate != null && w.PSLType == "C"),
                                           statusOutstanding = a.Count(w => w.pslStatus.Contains("Outstanding") && w.RepairDate != null && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0,2) == "PS" || w.pslStatus.Contains("Completed") && w.RepairDate == null && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) == "PS" || w.pslStatus.Contains("Outstanding") && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) != "PS" || w.pslStatus.Contains("Completed") && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) != "PS"),
                                           TerminationDate = a.FirstOrDefault().TerminationDate
                                       });

                        var countList = (from item in getList
                                         select new
                                         {
                                             pslMasterId = item.pslMasterId,
                                             area = item.area,
                                             storeName = item.storeName,
                                             statusCompleted = item.statusCompleted,
                                             statusOutstanding = item.statusOutstanding,
                                             countList = item.statusCompleted + item.statusOutstanding,
                                             TerminationDate = item.TerminationDate
                                         });
                        var start = 1;
                        if (countList.Count() == 0)
                        {
                            var list = new DataChartPSLCompletionPSP();
                            list.Area = splitArea[0] + ";" + monthName + ";new";
                            list.StatusCompleted = 0;
                            list.StatusOutstanding = 0;
                            list.RawDataStatusCompleted = 0;
                            list.RawDataStatusOutstanding = 0;
                            listItem.Add(list);
                        }
                        foreach (var item in countList.ToList())
                        {
                            var list = new DataChartPSLCompletionPSP();
                            if (start == 1)
                            {
                                list.Area = item.area + ";" + monthName + ";new";
                            }
                            else
                            {
                                list.Area = item.area + ";" + monthName;
                            }
                            list.StatusCompleted = item.statusCompleted;
                            list.StatusOutstanding = item.statusOutstanding;
                            var averageComplete = new decimal();
                            var averageOutstanding = new decimal();
                            if (item.statusCompleted != 0)
                            {
                                averageComplete = Convert.ToDecimal(item.statusCompleted) / Convert.ToDecimal(item.countList);
                            }
                            else
                            {
                                averageComplete = 0;
                            }
                            if (item.statusOutstanding != 0)
                            {
                                averageOutstanding = Convert.ToDecimal(item.statusOutstanding) / Convert.ToDecimal(item.countList);
                            }
                            else
                            {
                                averageOutstanding = 0;
                            }
                            var mathRoundAverageComplete = Math.Round(averageComplete, 2);
                            var mathRoundAverageOutstanding = Math.Round(averageOutstanding, 2);
                            list.RawDataStatusCompleted = (item.statusCompleted != 0) ? mathRoundAverageComplete * 100 : 0;
                            list.RawDataStatusOutstanding = (item.statusOutstanding != 0) ? mathRoundAverageOutstanding * 100 : 0;
                            listItem.Add(list);
                            start++;
                        }
                    }
                }
                else if(!string.IsNullOrWhiteSpace(dateFrom) && string.IsNullOrWhiteSpace(dateEnd))
                {
                    monthEnd = monthFrom;
                    datenow = DateTime.Now;
                    string monthName;
                    DateTime dateFilter;
                    for (var i = monthFrom; i <= monthEnd; i++)
                    {
                        int monthParam;
                        if ((datenow.Month + i) > 12 || (datenow.Month + i) <= 0)
                        {
                            monthParam = i;
                        }
                        else
                        {
                            if (string.IsNullOrWhiteSpace(dateFrom))
                            {
                                monthParam = i;
                            }
                            else
                            {
                                monthParam = i;
                            }
                        }
                        dateFilter = new DateTime(datenow.Year, monthParam, 1);
                        monthName = new DateTime(datenow.Year, monthParam, 1).ToString("MMM");

                        var getListDataAll = (from item in _ctx.PSLMaster
                                              where item.Area != null && item.Area != "" && item.PSLType == "C"
                                              select new
                                              {
                                                  pslMasterId = item.PSLMasterId,
                                                  area = item.Area,
                                                  storeName = item.SalesOffice,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.RentStatus,
                                                  hidStatus = item.HIDStatus,
                                                  plant = item.Plant,
                                                  pslStatus = item.Validation,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLType = item.PSLType,
                                                  PSLId = item.PSLId
                                              });

                        if (hid == "on" && rental == "" && inventory == "")
                        {
                            getListDataAll = (from item in getListDataAll
                                              where item.hidStatus != ""
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLType = item.PSLType,
                                                  PSLId = item.PSLId
                                              });
                        }

                        if (hid == "on" && rental == "on" && inventory == "")
                        {
                            getListDataAll = (from item in getListDataAll
                                              where item.hidStatus != "" || item.rentStatus != ""
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLType = item.PSLType,
                                                  PSLId = item.PSLId
                                              });
                        }

                        if (hid == "on" && rental == "" && inventory == "on")
                        {
                            getListDataAll = (from item in getListDataAll
                                              where item.hidStatus != "" || item.plant != ""
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLType = item.PSLType,
                                                  PSLId = item.PSLId
                                              });
                        }

                        if (hid == "" && rental == "on" && inventory == "")
                        {
                            getListDataAll = (from item in getListDataAll
                                              where item.rentStatus != ""
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLType = item.PSLType,
                                                  PSLId = item.PSLId
                                              });
                        }

                        if (hid == "" && rental == "on" && inventory == "on")
                        {
                            getListDataAll = (from item in getListDataAll
                                              where item.rentStatus != "" || item.plant != ""
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLType = item.PSLType,
                                                  PSLId = item.PSLId
                                              });
                        }

                        if (hid == "" && rental == "" && inventory == "on")
                        {
                            getListDataAll = (from item in getListDataAll
                                              where item.plant != ""
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLType = item.PSLType,
                                                  PSLId = item.PSLId
                                              });
                        }

                        if (hid == "on" && rental == "on" && inventory == "on")
                        {
                            getListDataAll = (from item in getListDataAll
                                              where item.rentStatus != "" || item.plant != "" || item.hidStatus != ""
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLType = item.PSLType,
                                                  PSLId = item.PSLId
                                              });
                        }

                        if (others == "on" && hid == "" && rental == "" && inventory == "")
                        {
                            getListDataAll = (from item in getListDataAll
                                              where item.hidStatus == "" || item.rentStatus == "" || item.plant == ""
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLType = item.PSLType,
                                                  PSLId = item.PSLId
                                              });
                        }

                        if (splitStoreName.Count() > 0)
                        {
                            getListDataAll = (from item in getListDataAll
                                              where splitStoreName.Contains(item.storeName)
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLType = item.PSLType,
                                                  PSLId = item.PSLId
                                              });
                        }

                        var getList = (from psl in getListDataAll
                                       where splitArea.Contains(psl.area) && psl.TerminationDate.Value.Month.Equals(dateFilter.Month) && psl.TerminationDate.Value.Year.Equals(dateFilter.Year)
                                       group psl by psl.area into a
                                       select new
                                       {
                                           pslMasterId = a.FirstOrDefault().pslMasterId,
                                           area = a.FirstOrDefault().area,
                                           storeName = a.FirstOrDefault().storeName,
                                           statusCompleted = a.Count(w => w.pslStatus.Contains("Completed") && w.PCR == "" && w.RepairDate != null && w.PSLType == "C" ),
                                           statusOutstanding = a.Count(w => w.pslStatus.Contains("Outstanding") && w.RepairDate != null && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) == "PS" || w.pslStatus.Contains("Completed") && w.RepairDate == null && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) == "PS" || w.pslStatus.Contains("Outstanding") && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) != "PS" || w.pslStatus.Contains("Completed") && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) != "PS"),
                                           TerminationDate = a.FirstOrDefault().TerminationDate
                                       });

                        var countList = (from item in getList
                                         select new
                                         {
                                             pslMasterId = item.pslMasterId,
                                             area = item.area,
                                             storeName = item.storeName,
                                             statusCompleted = item.statusCompleted,
                                             statusOutstanding = item.statusOutstanding,
                                             countList = item.statusCompleted + item.statusOutstanding,
                                             TerminationDate = item.TerminationDate
                                         });
                        var start = 1;
                        if (countList.Count() == 0)
                        {
                            var list = new DataChartPSLCompletionPSP();
                            list.Area = splitArea[0] + ";" + monthName + ";new";
                            list.StatusCompleted = 0;
                            list.StatusOutstanding = 0;
                            list.RawDataStatusCompleted = 0;
                            list.RawDataStatusOutstanding = 0;
                            listItem.Add(list);
                        }
                        foreach (var item in countList.ToList())
                        {
                            var list = new DataChartPSLCompletionPSP();
                            if (start == 1)
                            {
                                list.Area = item.area + ";" + monthName + ";new";
                            }
                            else
                            {
                                list.Area = item.area + ";" + monthName;
                            }
                            list.StatusCompleted = item.statusCompleted;
                            list.StatusOutstanding = item.statusOutstanding;
                            var averageComplete = new decimal();
                            var averageOutstanding = new decimal();
                            if (item.statusCompleted != 0)
                            {
                                averageComplete = Convert.ToDecimal(item.statusCompleted) / Convert.ToDecimal(item.countList);
                            }
                            else
                            {
                                averageComplete = 0;
                            }
                            if (item.statusOutstanding != 0)
                            {
                                averageOutstanding = Convert.ToDecimal(item.statusOutstanding) / Convert.ToDecimal(item.countList);
                            }
                            else
                            {
                                averageOutstanding = 0;
                            }
                            var mathRoundAverageComplete = Math.Round(averageComplete, 2);
                            var mathRoundAverageOutstanding = Math.Round(averageOutstanding, 2);
                            list.RawDataStatusCompleted = (item.statusCompleted != 0) ? mathRoundAverageComplete * 100 : 0;
                            list.RawDataStatusOutstanding = (item.statusOutstanding != 0) ? mathRoundAverageOutstanding * 100 : 0;
                            listItem.Add(list);
                            start++;
                        }
                    }
                }
                else
                {
                    monthFrom = 0;
                    monthEnd = 11;
                    yearFrom = DateTime.Now.Year;
                    yearEnd = DateTime.Now.Year;
                    convertToDateTimeFrom = DateTime.Now;
                    convertToDateTimeEnd = DateTime.Now;
                    datenow = DateTime.Now;
                    string monthName;
                    DateTime dateFilter;
                    for (var i = monthFrom; i <= monthEnd; i++)
                    {
                        int monthParam;
                        if ((datenow.Month + i) > 12 || (datenow.Month + i) <= 0)
                        {
                            monthParam = i + 1;
                        }
                        else
                        {
                            if (string.IsNullOrWhiteSpace(dateFrom))
                            {
                                monthParam = i + 1;
                            }
                            else
                            {
                                monthParam = datenow.Month + i;
                            }
                        }
                        dateFilter = new DateTime(datenow.Year, monthParam, 1);
                        monthName = new DateTime(datenow.Year, monthParam, 1).ToString("MMM");

                        var getListDataAll = (from item in _ctx.PSLMaster
                                              where item.Area != null && item.Area != "" && item.PSLType == "C"
                                              select new
                                              {
                                                  pslMasterId = item.PSLMasterId,
                                                  area = item.Area,
                                                  storeName = item.SalesOffice,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.RentStatus,
                                                  hidStatus = item.HIDStatus,
                                                  plant = item.Plant,
                                                  pslStatus = item.Validation,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLType = item.PSLType,
                                                  PSLId = item.PSLId
                                              });

                        if (hid == "on" && rental == "" && inventory == "")
                        {
                            getListDataAll = (from item in getListDataAll
                                              where item.hidStatus != ""
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLType = item.PSLType,
                                                  PSLId = item.PSLId
                                              });
                        }

                        if (hid == "on" && rental == "on" && inventory == "")
                        {
                            getListDataAll = (from item in getListDataAll
                                              where item.hidStatus != "" || item.rentStatus != ""
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLType = item.PSLType,
                                                  PSLId = item.PSLId
                                              });
                        }

                        if (hid == "on" && rental == "" && inventory == "on")
                        {
                            getListDataAll = (from item in getListDataAll
                                              where item.hidStatus != "" || item.plant != ""
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLType = item.PSLType,
                                                  PSLId = item.PSLId
                                              });
                        }

                        if (hid == "" && rental == "on" && inventory == "")
                        {
                            getListDataAll = (from item in getListDataAll
                                              where item.rentStatus != ""
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLType = item.PSLType,
                                                  PSLId = item.PSLId
                                              });
                        }

                        if (hid == "" && rental == "on" && inventory == "on")
                        {
                            getListDataAll = (from item in getListDataAll
                                              where item.rentStatus != "" || item.plant != ""
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLType = item.PSLType,
                                                  PSLId = item.PSLId
                                              });
                        }

                        if (hid == "" && rental == "" && inventory == "on")
                        {
                            getListDataAll = (from item in getListDataAll
                                              where item.plant != ""
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLType = item.PSLType,
                                                  PSLId = item.PSLId
                                              });
                        }

                        if (hid == "on" && rental == "on" && inventory == "on")
                        {
                            getListDataAll = (from item in getListDataAll
                                              where item.rentStatus != "" || item.plant != "" || item.hidStatus != ""
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLType = item.PSLType,
                                                  PSLId = item.PSLId
                                              });
                        }

                        if (others == "on" && hid == "" && rental == "" && inventory == "")
                        {
                            getListDataAll = (from item in getListDataAll
                                              where item.hidStatus == "" || item.rentStatus == "" || item.plant == ""
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLType = item.PSLType,
                                                  PSLId = item.PSLId
                                              });
                        }

                        if (splitStoreName.Count() > 0)
                        {
                            getListDataAll = (from item in getListDataAll
                                              where splitStoreName.Contains(item.storeName)
                                              select new
                                              {
                                                  pslMasterId = item.pslMasterId,
                                                  area = item.area,
                                                  storeName = item.storeName,
                                                  TerminationDate = item.TerminationDate,
                                                  rentStatus = item.rentStatus,
                                                  hidStatus = item.hidStatus,
                                                  plant = item.plant,
                                                  pslStatus = item.pslStatus,
                                                  PCR = item.PCR,
                                                  RepairDate = item.RepairDate,
                                                  PSLType = item.PSLType,
                                                  PSLId = item.PSLId
                                              });
                        }

                        var getList = (from psl in getListDataAll
                                       where splitArea.Contains(psl.area) && psl.TerminationDate.Value.Month.Equals(dateFilter.Month) && psl.TerminationDate.Value.Year.Equals(dateFilter.Year)
                                       group psl by psl.area into a
                                       select new
                                       {
                                           pslMasterId = a.FirstOrDefault().pslMasterId,
                                           area = a.FirstOrDefault().area,
                                           storeName = a.FirstOrDefault().storeName,
                                           statusCompleted = a.Count(w => w.pslStatus.Contains("Completed") && w.PCR == "" && w.RepairDate != null && w.PSLType == "C"),
                                           statusOutstanding = a.Count(w => w.pslStatus.Contains("Outstanding") && w.RepairDate != null && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) == "PS" || w.pslStatus.Contains("Completed") && w.RepairDate == null && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) == "PS" || w.pslStatus.Contains("Outstanding") && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) != "PS" || w.pslStatus.Contains("Completed") && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) != "PS"),
                                           TerminationDate = a.FirstOrDefault().TerminationDate
                                       });

                        var countList = (from item in getList
                                         select new
                                         {
                                             pslMasterId = item.pslMasterId,
                                             area = item.area,
                                             storeName = item.storeName,
                                             statusCompleted = item.statusCompleted,
                                             statusOutstanding = item.statusOutstanding,
                                             countList = item.statusCompleted + item.statusOutstanding,
                                             TerminationDate = item.TerminationDate
                                         });
                        var start = 1;
                        if (countList.Count() == 0)
                        {
                            var list = new DataChartPSLCompletionPSP();
                            list.Area = splitArea[0] + ";" + monthName + ";new";
                            list.StatusCompleted = 0;
                            list.StatusOutstanding = 0;
                            list.RawDataStatusCompleted = 0;
                            list.RawDataStatusOutstanding = 0;
                            listItem.Add(list);
                        }
                        foreach (var item in countList.ToList())
                        {
                            var list = new DataChartPSLCompletionPSP();
                            if (start == 1)
                            {
                                list.Area = item.area + ";" + monthName + ";new";
                            }
                            else
                            {
                                list.Area = item.area + ";" + monthName;
                            }
                            list.StatusCompleted = item.statusCompleted;
                            list.StatusOutstanding = item.statusOutstanding;
                            var averageComplete = new decimal();
                            var averageOutstanding = new decimal();
                            if (item.statusCompleted != 0)
                            {
                                averageComplete = Convert.ToDecimal(item.statusCompleted) / Convert.ToDecimal(item.countList);
                            }
                            else
                            {
                                averageComplete = 0;
                            }
                            if (item.statusOutstanding != 0)
                            {
                                averageOutstanding = Convert.ToDecimal(item.statusOutstanding) / Convert.ToDecimal(item.countList);
                            }
                            else
                            {
                                averageOutstanding = 0;
                            }
                            var mathRoundAverageComplete = Math.Round(averageComplete, 2);
                            var mathRoundAverageOutstanding = Math.Round(averageOutstanding, 2);
                            list.RawDataStatusCompleted = (item.statusCompleted != 0) ? mathRoundAverageComplete * 100 : 0;
                            list.RawDataStatusOutstanding = (item.statusOutstanding != 0) ? mathRoundAverageOutstanding * 100 : 0;
                            listItem.Add(list);
                            start++;
                        }
                    }
                }
                    
            }
            else
            {
                if (monthFrom == 0 && monthEnd == 0)
                {
                    monthFrom = 0;
                    monthEnd = 1;
                }
                DateTime convertToDateTimeFrom = DateTime.Now;
                DateTime convertToDateTimeEnd = DateTime.Now;
                if (!string.IsNullOrWhiteSpace(dateFrom) && !string.IsNullOrWhiteSpace(dateEnd))
                {
                    convertToDateTimeFrom = DateTime.ParseExact(dateFrom, "dd-MM-yyyy", null);
                    convertToDateTimeEnd = DateTime.ParseExact(dateEnd, "dd-MM-yyyy", null);
                }
                else if (!string.IsNullOrWhiteSpace(dateFrom) && string.IsNullOrWhiteSpace(dateEnd))
                {
                    convertToDateTimeFrom = DateTime.ParseExact(dateFrom, "dd-MM-yyyy", null);
                    convertToDateTimeEnd = DateTime.ParseExact(dateFrom, "dd-MM-yyyy", null);
                }
                else
                {
                    convertToDateTimeFrom = DateTime.Now;
                    convertToDateTimeEnd = DateTime.Now;
                }
                for (var i = monthFrom; i <= monthEnd; i++)
                {
                    int monthParam;
                    datenow = DateTime.Now;
                    if((datenow.Month - i) > 12 || (datenow.Month - i) <= 0)
                    {
                        monthParam = i;
                    }
                    else
                    {
                        if (string.IsNullOrWhiteSpace(dateFrom))
                        {
                            monthParam = datenow.Month - i;
                        }
                        else
                        {
                            monthParam = i;
                        }
                    }
                    var dateFilter = new DateTime(datenow.Year, monthParam, 1);
                    string monthName = new DateTime(datenow.Year, monthParam, 1).ToString("MMM");

                    var getListDataAll = (from item in _ctx.PSLMaster
                                          where item.Area != null && item.Area != "" && item.PSLType == "C"
                                          select new
                                          {
                                              pslMasterId = item.PSLMasterId,
                                              area = item.Area,
                                              storeName = item.SalesOffice,
                                              TerminationDate = item.TerminationDate,
                                              rentStatus = item.RentStatus,
                                              hidStatus = item.HIDStatus,
                                              plant = item.Plant,
                                              pslStatus = item.Validation,
                                              RepairDate = item.RepairDate,
                                              PCR = item.PCR,
                                              PSLType = item.PSLType,
                                              PSLId = item.PSLId
                                          });

                    if (hid == "on" && rental == "" && inventory == "")
                    {
                        getListDataAll = (from item in getListDataAll
                                          where item.hidStatus != ""
                                          select new
                                          {
                                              pslMasterId = item.pslMasterId,
                                              area = item.area,
                                              storeName = item.storeName,
                                              TerminationDate = item.TerminationDate,
                                              rentStatus = item.rentStatus,
                                              hidStatus = item.hidStatus,
                                              plant = item.plant,
                                              pslStatus = item.pslStatus,
                                              RepairDate = item.RepairDate,
                                              PCR = item.PCR,
                                              PSLType = item.PSLType,
                                              PSLId = item.PSLId
                                          });
                    }

                    if (hid == "on" && rental == "on" && inventory == "")
                    {
                        getListDataAll = (from item in getListDataAll
                                          where item.hidStatus != "" || item.rentStatus != ""
                                          select new
                                          {
                                              pslMasterId = item.pslMasterId,
                                              area = item.area,
                                              storeName = item.storeName,
                                              TerminationDate = item.TerminationDate,
                                              rentStatus = item.rentStatus,
                                              hidStatus = item.hidStatus,
                                              plant = item.plant,
                                              pslStatus = item.pslStatus,
                                              RepairDate = item.RepairDate,
                                              PCR = item.PCR,
                                              PSLType = item.PSLType,
                                              PSLId = item.PSLId
                                          });
                    }

                    if (hid == "on" && rental == "" && inventory == "on")
                    {
                        getListDataAll = (from item in getListDataAll
                                          where item.hidStatus != "" || item.plant != ""
                                          select new
                                          {
                                              pslMasterId = item.pslMasterId,
                                              area = item.area,
                                              storeName = item.storeName,
                                              TerminationDate = item.TerminationDate,
                                              rentStatus = item.rentStatus,
                                              hidStatus = item.hidStatus,
                                              plant = item.plant,
                                              pslStatus = item.pslStatus,
                                              RepairDate = item.RepairDate,
                                              PCR = item.PCR,
                                              PSLType = item.PSLType,
                                              PSLId = item.PSLId
                                          });
                    }

                    if (hid == "" && rental == "on" && inventory == "")
                    {
                        getListDataAll = (from item in getListDataAll
                                          where item.rentStatus != ""
                                          select new
                                          {
                                              pslMasterId = item.pslMasterId,
                                              area = item.area,
                                              storeName = item.storeName,
                                              TerminationDate = item.TerminationDate,
                                              rentStatus = item.rentStatus,
                                              hidStatus = item.hidStatus,
                                              plant = item.plant,
                                              pslStatus = item.pslStatus,
                                              RepairDate = item.RepairDate,
                                              PCR = item.PCR,
                                              PSLType = item.PSLType,
                                              PSLId = item.PSLId
                                          });
                    }

                    if (hid == "" && rental == "on" && inventory == "on")
                    {
                        getListDataAll = (from item in getListDataAll
                                          where item.rentStatus != "" || item.plant != ""
                                          select new
                                          {
                                              pslMasterId = item.pslMasterId,
                                              area = item.area,
                                              storeName = item.storeName,
                                              TerminationDate = item.TerminationDate,
                                              rentStatus = item.rentStatus,
                                              hidStatus = item.hidStatus,
                                              plant = item.plant,
                                              pslStatus = item.pslStatus,
                                              RepairDate = item.RepairDate,
                                              PCR = item.PCR,
                                              PSLType = item.PSLType,
                                              PSLId = item.PSLId
                                          });
                    }

                    if (hid == "" && rental == "" && inventory == "on")
                    {
                        getListDataAll = (from item in getListDataAll
                                          where item.plant != ""
                                          select new
                                          {
                                              pslMasterId = item.pslMasterId,
                                              area = item.area,
                                              storeName = item.storeName,
                                              TerminationDate = item.TerminationDate,
                                              rentStatus = item.rentStatus,
                                              hidStatus = item.hidStatus,
                                              plant = item.plant,
                                              pslStatus = item.pslStatus,
                                              RepairDate = item.RepairDate,
                                              PCR = item.PCR,
                                              PSLType = item.PSLType,
                                              PSLId = item.PSLId
                                          });
                    }

                    if (hid == "on" && rental == "on" && inventory == "on")
                    {
                        getListDataAll = (from item in getListDataAll
                                          where item.rentStatus != "" || item.plant != "" || item.hidStatus != ""
                                          select new
                                          {
                                              pslMasterId = item.pslMasterId,
                                              area = item.area,
                                              storeName = item.storeName,
                                              TerminationDate = item.TerminationDate,
                                              rentStatus = item.rentStatus,
                                              hidStatus = item.hidStatus,
                                              plant = item.plant,
                                              pslStatus = item.pslStatus,
                                              RepairDate = item.RepairDate,
                                              PCR = item.PCR,
                                              PSLType = item.PSLType,
                                              PSLId = item.PSLId
                                          });
                    }

                    if (others == "on" && hid == "" && rental == "" && inventory == "")
                    {
                        getListDataAll = (from item in getListDataAll
                                          where item.hidStatus == "" || item.rentStatus == "" || item.plant == ""
                                          select new
                                          {
                                              pslMasterId = item.pslMasterId,
                                              area = item.area,
                                              storeName = item.storeName,
                                              TerminationDate = item.TerminationDate,
                                              rentStatus = item.rentStatus,
                                              hidStatus = item.hidStatus,
                                              plant = item.plant,
                                              pslStatus = item.pslStatus,
                                              RepairDate = item.RepairDate,
                                              PCR = item.PCR,
                                              PSLType = item.PSLType,
                                              PSLId = item.PSLId
                                          });
                    }

                    var getList = (from psl in getListDataAll
                                       where psl.area != null && psl.area != "" && psl.TerminationDate.Value.Year.Equals(dateFilter.Year) && psl.TerminationDate.Value.Month.Equals(dateFilter.Month)
                                       group psl by psl.area into a
                                       select new
                                       {
                                           pslMasterId = a.FirstOrDefault().pslMasterId,
                                           area = a.FirstOrDefault().area,
                                           storeName = a.FirstOrDefault().storeName,
                                           statusCompleted = a.Count(w => w.pslStatus.Contains("Completed") && w.PCR == "" && w.RepairDate != null && w.PSLType == "C"),
                                           statusOutstanding = a.Count(w => w.pslStatus.Contains("Outstanding") && w.RepairDate != null && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) == "PS" || w.pslStatus.Contains("Completed") && w.RepairDate == null && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) == "PS" || w.pslStatus.Contains("Outstanding") && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) != "PS" || w.pslStatus.Contains("Completed") && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) != "PS"),
                                           TerminationDate = a.FirstOrDefault().TerminationDate
                                       });

                    var countList = (from item in getList
                                     select new
                                     {
                                         pslMasterId = item.pslMasterId,
                                         area = item.area,
                                         storeName = item.storeName,
                                         statusCompleted = item.statusCompleted,
                                         statusOutstanding = item.statusOutstanding,
                                         countList = item.statusCompleted + item.statusOutstanding,
                                         TerminationDate = item.TerminationDate
                                     }).OrderByDescending(odb => odb.area);


                    if (splitArea.Count() > 0)
                    {
                        getList = (from psl in getList
                                   where splitArea.Contains(psl.area) && psl.TerminationDate.Value.Year.Equals(dateFilter.Year) && psl.TerminationDate.Value.Month.Equals(dateFilter.Month)
                                   select new
                                   {
                                       pslMasterId = psl.pslMasterId,
                                       area = psl.area,
                                       storeName = psl.storeName,
                                       statusCompleted = psl.statusCompleted,
                                       statusOutstanding = psl.statusOutstanding,
                                       TerminationDate = psl.TerminationDate
                                   });

                        countList = (from item in getList
                                     select new
                                     {
                                         pslMasterId = item.pslMasterId,
                                         area = item.area,
                                         storeName = item.storeName,
                                         statusCompleted = item.statusCompleted,
                                         statusOutstanding = item.statusOutstanding,
                                         countList = item.statusCompleted + item.statusOutstanding,
                                         TerminationDate = item.TerminationDate
                                     }).OrderByDescending(odb => odb.area);
                    }

                    if (splitStoreName.Count() > 0 && splitStoreName != null)
                    {
                        getList = (from psl in getList
                                   where splitStoreName.Contains(psl.storeName) && psl.TerminationDate.Value.Year.Equals(dateFilter.Year) && psl.TerminationDate.Value.Month.Equals(dateFilter.Month)
                                   select new
                                   {
                                       pslMasterId = psl.pslMasterId,
                                       area = psl.area,
                                       storeName = psl.storeName,
                                       statusCompleted = psl.statusCompleted,
                                       statusOutstanding = psl.statusOutstanding,
                                       TerminationDate = psl.TerminationDate
                                   });

                        countList = (from item in getList
                                     select new
                                     {
                                         pslMasterId = item.pslMasterId,
                                         area = item.area,
                                         storeName = item.storeName,
                                         statusCompleted = item.statusCompleted,
                                         statusOutstanding = item.statusOutstanding,
                                         countList = item.statusCompleted + item.statusOutstanding,
                                         TerminationDate = item.TerminationDate
                                     }).OrderByDescending(odb => odb.area);
                    }

                    var start = 1;
                    int idataArea;
                    if (countList.Count() == 0)
                    {
                        idataArea = 0;
                        foreach(var dataArea in splitArea)
                        {
                            var list = new DataChartPSLCompletionPSP();
                            list.Area = splitArea[idataArea] + ";" + monthName + ";new";
                            list.StatusCompleted = 0;
                            list.StatusOutstanding = 0;
                            list.RawDataStatusCompleted = 0;
                            list.RawDataStatusOutstanding = 0;
                            listItem.Add(list);
                            idataArea++;
                        }
                        
                    }
                    int cek = 0;
                    string collectArea = "";
                    foreach (var item in countList.ToList())
                    {
                        collectArea += item.area + ",";
                        var list = new DataChartPSLCompletionPSP();
                        if (start == 1)
                        {
                            list.Area = item.area + ";" + monthName + ";new";
                        }
                        else
                        {
                            list.Area = item.area + ";" + monthName;
                        }
                        list.StatusCompleted = item.statusCompleted;
                        list.StatusOutstanding = item.statusOutstanding;
                        var averageComplete = new decimal();
                        var averageOutstanding = new decimal();
                        if (item.statusCompleted != 0)
                        {
                            averageComplete = Convert.ToDecimal(item.statusCompleted) / Convert.ToDecimal(item.countList);
                        }
                        else
                        {
                            averageComplete = 0;
                        }
                        if (item.statusOutstanding != 0)
                        {
                            averageOutstanding = Convert.ToDecimal(item.statusOutstanding) / Convert.ToDecimal(item.countList);
                        }
                        else
                        {
                            averageOutstanding = 0;
                        }
                        var mathRoundAverageComplete = Math.Round(averageComplete, 2);
                        var mathRoundAverageOutstanding = Math.Round(averageOutstanding, 2);
                        list.RawDataStatusCompleted = (item.statusCompleted != 0) ? mathRoundAverageComplete * 100 : 0;
                        list.RawDataStatusOutstanding = (item.statusOutstanding != 0) ? mathRoundAverageOutstanding * 100 : 0;
                        listItem.Add(list);
                        start++;
                    }

                    int idataAreas = 0;
                    string[] collectDataAreas = collectArea.Split(',');
                    foreach (var dataArea in splitArea)
                    {
                        int okcek = 0;
                        foreach (string cekarea in collectDataAreas)
                        {
                            if(cekarea == splitArea[idataAreas])
                            {
                                okcek = 1;
                            }
                        }
                        if(okcek == 0)
                        {
                            var list = new DataChartPSLCompletionPSP();
                            list.Area = splitArea[idataAreas] + ";" + monthName;
                            list.StatusCompleted = 0;
                            list.StatusOutstanding = 0;
                            list.RawDataStatusCompleted = 0;
                            list.RawDataStatusOutstanding = 0;
                            listItem.Add(list);
                        }
                        idataAreas++;
                    }
                    if(splitArea.Count() == 0)
                    {
                        var getArea = (from item in _ctx.PSLMaster
                                       where item.Area != "" && item.Area != null
                                       group item by item.Area into a
                                       select new
                                       {
                                           Area = a.FirstOrDefault().Area
                                       }).OrderBy(odb => odb.Area);
                        foreach (var item in getArea.ToList())
                        {
                            int okcek = 0;
                            foreach (string cekarea in collectDataAreas)
                            {
                                if (cekarea == item.Area)
                                {
                                    okcek = 1;
                                }
                            }
                            if (okcek == 0)
                            {
                                var list = new DataChartPSLCompletionPSP();
                                list.Area = item.Area + ";" + monthName;
                                list.StatusCompleted = 0;
                                list.StatusOutstanding = 0;
                                list.RawDataStatusCompleted = 0;
                                list.RawDataStatusOutstanding = 0;
                                listItem.Add(list);
                            }
                            idataAreas++;
                        }
                    }
                }
            }
            
            return listItem;
        }

        public List<DataChartPSLCompletionPip> GetDataForChartCompletionPip(string[] splitArea, string[] splitStoreName, string dateFrom, string dateEnd, string hid, string rental, string inventory, string others, string[] psltype)
        {
            var listDataComp = new List<int>();
            var listDataOutstanding = new List<int>();
            var listAverageCompleted = new List<decimal>();
            var listAveragaOutstanding = new List<decimal>();
            var listMonthName = new List<string>();
            var listItem = new List<DataChartPSLCompletionPip>();
            for (var i = 1; i <= 12; i++)
            {

                var datenow = DateTime.Now;
                var dateFilter = new DateTime(datenow.Year - 1, i, 1);
                string monthName = new DateTime(datenow.Year - 1, i, 1).ToString("MMM");

                var getListComp = (from item in _ctx.PSLMaster
                                   where item.Area != null && item.Validation.Contains("Completed") && item.LetterDate.Value.Month.Equals(dateFilter.Month) && item.LetterDate.Value.Year.Equals(dateFilter.Year) && item.PSLId.Substring(0, 2) == "PI" && item.PSLType == "S" || item.Area != null && item.Validation.Contains("Completed") && item.LetterDate.Value.Month.Equals(dateFilter.Month) && item.LetterDate.Value.Year.Equals(dateFilter.Year) && item.PSLId.Substring(0, 2) == "PI" && item.PSLType == "P"
                                   select new
                                   {
                                       area = item.Area,
                                       TerminationDate = item.LetterDate,
                                       SapPSLStatus = item.Validation,
                                       SalesOffice = item.SalesOffice,
                                       rentStatus = item.RentStatus,
                                       hidStatus = item.HIDStatus,
                                       plant = item.Plant
                                   }).ToList();

                var getListOuts = (from item in _ctx.PSLMaster
                                   where item.Area != null && item.Validation != "Completed" && item.LetterDate.Value.Month.Equals(dateFilter.Month) && item.LetterDate.Value.Year.Equals(dateFilter.Year) && item.PSLId.Substring(0, 2) == "PI" && item.PSLType == "S" || item.Area != null && item.Validation != "Completed" && item.LetterDate.Value.Month.Equals(dateFilter.Month) && item.LetterDate.Value.Year.Equals(dateFilter.Year) && item.PSLId.Substring(0, 2) == "PI" && item.PSLType == "P"
                                   select new
                                   {
                                       area = item.Area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.Validation,
                                       SalesOffice = item.SalesOffice,
                                       rentStatus = item.RentStatus,
                                       hidStatus = item.HIDStatus,
                                       plant = item.Plant
                                   }).ToList();

                if (psltype.Count() > 0)
                {
                    getListComp = (from item in _ctx.PSLMaster
                                   where psltype.Contains(item.PSLType) && item.Area != null && item.Validation.Contains("Completed") && item.LetterDate.Value.Month.Equals(dateFilter.Month) && item.LetterDate.Value.Year.Equals(dateFilter.Year) && item.PSLId.Substring(0, 2) == "PI"
                                   select new
                                   {
                                       area = item.Area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       SalesOffice = item.SalesOffice,
                                       rentStatus = item.RentStatus,
                                       hidStatus = item.HIDStatus,
                                       plant = item.Plant
                                   }).ToList();

                    getListOuts = (from item in _ctx.PSLMaster
                                   where psltype.Contains(item.PSLType) && item.Area != null && item.Validation != "Completed" && item.LetterDate.Value.Month.Equals(dateFilter.Month) && item.LetterDate.Value.Year.Equals(dateFilter.Year) && item.PSLId.Substring(0, 2) == "PI"
                                   select new
                                   {
                                       area = item.Area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       SalesOffice = item.SalesOffice,
                                       rentStatus = item.RentStatus,
                                       hidStatus = item.HIDStatus,
                                       plant = item.Plant
                                   }).ToList();
                }

                if (hid == "on" && rental == "" && inventory == "")
                {
                    getListComp = (from item in getListComp
                                   where item.hidStatus != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       SalesOffice = item.SalesOffice,
                                       rentStatus = item.rentStatus,
                                       hidStatus = item.hidStatus,
                                       plant = item.plant
                                   }).ToList();

                    getListOuts = (from item in getListOuts
                                   where item.hidStatus != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       SalesOffice = item.SalesOffice,
                                       rentStatus = item.rentStatus,
                                       hidStatus = item.hidStatus,
                                       plant = item.plant
                                   }).ToList();
                }

                if (hid == "on" && rental == "on" && inventory == "")
                {
                    getListComp = (from item in getListComp
                                   where item.hidStatus != "" || item.rentStatus != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       SalesOffice = item.SalesOffice,
                                       rentStatus = item.rentStatus,
                                       hidStatus = item.hidStatus,
                                       plant = item.plant
                                   }).ToList();

                    getListOuts = (from item in getListOuts
                                   where item.hidStatus != "" || item.rentStatus != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       SalesOffice = item.SalesOffice,
                                       rentStatus = item.rentStatus,
                                       hidStatus = item.hidStatus,
                                       plant = item.plant
                                   }).ToList();
                }

                if (hid == "on" && rental == "" && inventory == "on")
                {
                    getListComp = (from item in getListComp
                                   where item.hidStatus != "" || item.plant != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       SalesOffice = item.SalesOffice,
                                       rentStatus = item.rentStatus,
                                       hidStatus = item.hidStatus,
                                       plant = item.plant
                                   }).ToList();

                    getListOuts = (from item in getListOuts
                                   where item.hidStatus != "" || item.plant != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       SalesOffice = item.SalesOffice,
                                       rentStatus = item.rentStatus,
                                       hidStatus = item.hidStatus,
                                       plant = item.plant
                                   }).ToList();
                }

                if (hid == "" && rental == "on" && inventory == "")
                {
                    getListComp = (from item in getListComp
                                   where item.rentStatus != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       SalesOffice = item.SalesOffice,
                                       rentStatus = item.rentStatus,
                                       hidStatus = item.hidStatus,
                                       plant = item.plant
                                   }).ToList();

                    getListOuts = (from item in getListOuts
                                   where item.rentStatus != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       SalesOffice = item.SalesOffice,
                                       rentStatus = item.rentStatus,
                                       hidStatus = item.hidStatus,
                                       plant = item.plant
                                   }).ToList();
                }

                if (hid == "" && rental == "on" && inventory == "on")
                {
                    getListComp = (from item in getListComp
                                   where item.plant != "" || item.rentStatus != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       SalesOffice = item.SalesOffice,
                                       rentStatus = item.rentStatus,
                                       hidStatus = item.hidStatus,
                                       plant = item.plant
                                   }).ToList();

                    getListOuts = (from item in getListOuts
                                   where item.plant != "" || item.rentStatus != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       SalesOffice = item.SalesOffice,
                                       rentStatus = item.rentStatus,
                                       hidStatus = item.hidStatus,
                                       plant = item.plant
                                   }).ToList();
                }

                if (hid == "" && rental == "" && inventory == "on")
                {
                    getListComp = (from item in getListComp
                                   where item.plant != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       SalesOffice = item.SalesOffice,
                                       rentStatus = item.rentStatus,
                                       hidStatus = item.hidStatus,
                                       plant = item.plant
                                   }).ToList();

                    getListOuts = (from item in getListOuts
                                   where item.plant != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       SalesOffice = item.SalesOffice,
                                       rentStatus = item.rentStatus,
                                       hidStatus = item.hidStatus,
                                       plant = item.plant
                                   }).ToList();
                }

                if (hid == "on" && rental == "on" && inventory == "on")
                {
                    getListComp = (from item in getListComp
                                   where item.hidStatus != "" || item.rentStatus != "" || item.plant != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       SalesOffice = item.SalesOffice,
                                       rentStatus = item.rentStatus,
                                       hidStatus = item.hidStatus,
                                       plant = item.plant
                                   }).ToList();

                    getListOuts = (from item in getListOuts
                                   where item.hidStatus != "" || item.rentStatus != "" || item.plant != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       SalesOffice = item.SalesOffice,
                                       rentStatus = item.rentStatus,
                                       hidStatus = item.hidStatus,
                                       plant = item.plant
                                   }).ToList();
                }

                if (others == "on" && hid == "" && rental == "" && inventory == "")
                {
                    getListComp = (from item in getListComp
                                   where item.hidStatus == "" || item.rentStatus == "" || item.plant == ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       SalesOffice = item.SalesOffice,
                                       rentStatus = item.rentStatus,
                                       hidStatus = item.hidStatus,
                                       plant = item.plant
                                   }).ToList();

                    getListOuts = (from item in getListOuts
                                   where item.hidStatus == "" || item.rentStatus == "" || item.plant == ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       SalesOffice = item.SalesOffice,
                                       rentStatus = item.rentStatus,
                                       hidStatus = item.hidStatus,
                                       plant = item.plant
                                   }).ToList();
                }

                if(splitArea.Count() > 0 && splitArea != null)
                {
                    getListComp = (from item in getListComp
                                       where splitArea.Contains(item.area)
                                       select new
                                       {
                                           area = item.area,
                                           TerminationDate = item.TerminationDate,
                                           SapPSLStatus = item.SapPSLStatus,
                                           SalesOffice = item.SalesOffice,
                                           rentStatus = item.rentStatus,
                                           hidStatus = item.hidStatus,
                                           plant = item.plant
                                       }).ToList();

                    getListOuts = (from item in getListOuts
                                   where splitArea.Contains(item.area)
                                       select new
                                       {
                                           area = item.area,
                                           TerminationDate = item.TerminationDate,
                                           SapPSLStatus = item.SapPSLStatus,
                                           SalesOffice = item.SalesOffice,
                                           rentStatus = item.rentStatus,
                                           hidStatus = item.hidStatus,
                                           plant = item.plant
                                       }).ToList();
                }

                if(splitStoreName.Count() > 0)
                {
                    getListComp = (from item in getListComp
                                   where splitStoreName.Contains(item.SalesOffice)
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       SalesOffice = item.SalesOffice,
                                       rentStatus = item.rentStatus,
                                       hidStatus = item.hidStatus,
                                       plant = item.plant
                                   }).ToList();

                    getListOuts = (from item in getListOuts
                                   where splitStoreName.Contains(item.SalesOffice)
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       SalesOffice = item.SalesOffice,
                                       rentStatus = item.rentStatus,
                                       hidStatus = item.hidStatus,
                                       plant = item.plant
                                   }).ToList();
                }

                var totalData = getListComp.Count() + getListOuts.Count();
                var completeParse = Convert.ToDecimal(getListComp.Count());
                var outstandingParse = Convert.ToDecimal(getListOuts.Count());
                var totalDataParse = Convert.ToDecimal(totalData);
                var averageComplete = (completeParse != 0 && totalData != 0) ? (completeParse / totalData) * 100 : 0;
                var averageOutstanding = (outstandingParse != 0 && totalData != 0) ? (outstandingParse / totalData) * 100 : 0;
                var completeMathRound = Math.Round(averageComplete, 2);
                var outstandingMathRound = Math.Round(averageOutstanding, 2);
                listDataComp.Add(getListComp.Count());
                listDataOutstanding.Add(getListOuts.Count());
                listAverageCompleted.Add(completeMathRound);
                listAveragaOutstanding.Add(outstandingMathRound);
                listMonthName.Add(monthName);
                var dataChart = new DataChartPSLCompletionPip();
                dataChart.MonthName = listMonthName;
                dataChart.StatusCompleted = listDataComp;
                dataChart.StatusOutstanding = listDataOutstanding;
                dataChart.RawDataStatusCompleted = listAverageCompleted;
                dataChart.RawDataStatusOutstanding = listAveragaOutstanding;
                listItem.Add(dataChart);
            }
            return listItem;
        }

        public List<GetDataForChartHorizontalPSP> GetDataForChartVerticalCompletionPSP(string[] area, string[] storeName, string dateFrom, string dateEnd, string hid, string rental, string inventory, string others)
        {
            var listItem = new List<GetDataForChartHorizontalPSP>();
            if(!string.IsNullOrWhiteSpace(dateFrom) && !string.IsNullOrWhiteSpace(dateEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(dateFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(dateEnd, "dd-MM-yyyy", null);
                for(var i = convertToDateTimeFrom.Month; i <= convertToDateTimeEnd.Month; i++)
                {
                    string monthName = new DateTime(convertToDateTimeFrom.Year, i, 1).ToString("MMM");
                    var getData = (from item in _ctx.PSLMaster
                                   where item.Area != null && item.TerminationDate.Value.Month.Equals(i) && item.TerminationDate.Value.Year.Equals(convertToDateTimeEnd.Year) && item.MaxOverlimit == "Overlimit" && item.PSLType == "C" && item.RepairDate == null && item.PCR == ""
                                   select new
                                   {
                                       area = item.Area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });

                    if (hid == "on" && rental == "" && inventory == "")
                    {
                        getData = (from item in getData
                                   where item.HIDStatus != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }

                    if (hid == "on" && rental == "on" && inventory == "")
                    {
                        getData = (from item in getData
                                   where item.HIDStatus != "" || item.RentStatus != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }

                    if (hid == "on" && rental == "" && inventory == "on")
                    {
                        getData = (from item in getData
                                   where item.HIDStatus != "" || item.Plant != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }

                    if (hid == "" && rental == "on" && inventory == "")
                    {
                        getData = (from item in getData
                                   where item.RentStatus != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }

                    if (hid == "" && rental == "on" && inventory == "on")
                    {
                        getData = (from item in getData
                                   where item.RentStatus != "" || item.Plant != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }

                    if (hid == "" && rental == "" && inventory == "on")
                    {
                        getData = (from item in getData
                                   where item.Plant != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }

                    if (hid == "on" && rental == "on" && inventory == "on")
                    {
                        getData = (from item in getData
                                   where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }

                    if (others == "on" && hid == "" && rental == "" && inventory == "")
                    {
                        getData = (from item in getData
                                   where item.HIDStatus == "" || item.RentStatus == "" || item.Plant == ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }


                    if (area.Count() > 0 && area != null)
                    {
                        getData = (from item in getData
                                   where area.Contains(item.area)
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }
                    if (storeName.Count() > 0 && storeName != null)
                    {
                        getData = (from item in getData
                                   where storeName.Contains(item.StoreName)
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }
                    var data = new GetDataForChartHorizontalPSP();
                    data.CountData = getData.Count();
                    data.Month = monthName;
                    listItem.Add(data);
                }
            }
            else if (!string.IsNullOrWhiteSpace(dateFrom) && string.IsNullOrWhiteSpace(dateEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(dateFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = convertToDateTimeFrom;
                for (var i = convertToDateTimeFrom.Month; i <= convertToDateTimeEnd.Month; i++)
                {
                    string monthName = new DateTime(convertToDateTimeFrom.Year, i, 1).ToString("MMM");
                    var getData = (from item in _ctx.PSLMaster
                                   where item.Area != null && item.TerminationDate.Value.Month.Equals(i) && item.TerminationDate.Value.Year.Equals(convertToDateTimeEnd.Year) && item.MaxOverlimit == "Overlimit" && item.PSLType == "C" && item.RepairDate == null && item.PCR == ""
                                   select new
                                   {
                                       area = item.Area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });

                    if (hid == "on" && rental == "" && inventory == "")
                    {
                        getData = (from item in getData
                                   where item.HIDStatus != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }

                    if (hid == "on" && rental == "on" && inventory == "")
                    {
                        getData = (from item in getData
                                   where item.HIDStatus != "" || item.RentStatus != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }

                    if (hid == "on" && rental == "" && inventory == "on")
                    {
                        getData = (from item in getData
                                   where item.HIDStatus != "" || item.Plant != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }

                    if (hid == "" && rental == "on" && inventory == "")
                    {
                        getData = (from item in getData
                                   where item.RentStatus != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }

                    if (hid == "" && rental == "on" && inventory == "on")
                    {
                        getData = (from item in getData
                                   where item.RentStatus != "" || item.Plant != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }

                    if (hid == "" && rental == "" && inventory == "on")
                    {
                        getData = (from item in getData
                                   where item.Plant != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }

                    if (hid == "on" && rental == "on" && inventory == "on")
                    {
                        getData = (from item in getData
                                   where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }

                    if (others == "on" && hid == "" && rental == "" && inventory == "")
                    {
                        getData = (from item in getData
                                   where item.HIDStatus == "" || item.RentStatus == "" || item.Plant == ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }


                    if (area.Count() > 0 && area != null)
                    {
                        getData = (from item in getData
                                   where area.Contains(item.area)
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }
                    if (storeName.Count() > 0 && storeName != null)
                    {
                        getData = (from item in getData
                                   where storeName.Contains(item.StoreName)
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }
                    var data = new GetDataForChartHorizontalPSP();
                    data.CountData = getData.Count();
                    data.Month = monthName;
                    listItem.Add(data);
                }
            }
            else
            {
                for (var i = 1; i <= 12; i++)
                {
                    var datenow = DateTime.Now;
                    var dateFilter = new DateTime(datenow.Year, i, 1);
                    string monthName = new DateTime(datenow.Year, i, 1).ToString("MMM");
                    var getData = (from item in _ctx.PSLMaster
                                   where item.Area != null && item.TerminationDate.Value.Month.Equals(dateFilter.Month) && item.TerminationDate.Value.Year.Equals(dateFilter.Year) && item.MaxOverlimit == "Overlimit" && item.PSLType == "C" && item.RepairDate == null && item.PCR == ""
                                   select new
                                   {
                                       area = item.Area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });

                    if (hid == "on" && rental == "" && inventory == "")
                    {
                        getData = (from item in getData
                                   where item.HIDStatus != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }

                    if (hid == "on" && rental == "on" && inventory == "")
                    {
                        getData = (from item in getData
                                   where item.HIDStatus != "" || item.RentStatus != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }

                    if (hid == "on" && rental == "" && inventory == "on")
                    {
                        getData = (from item in getData
                                   where item.HIDStatus != "" || item.Plant != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }

                    if (hid == "" && rental == "on" && inventory == "")
                    {
                        getData = (from item in getData
                                   where item.RentStatus != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }

                    if (hid == "" && rental == "on" && inventory == "on")
                    {
                        getData = (from item in getData
                                   where item.RentStatus != "" || item.Plant != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }

                    if (hid == "" && rental == "" && inventory == "on")
                    {
                        getData = (from item in getData
                                   where item.Plant != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }

                    if (hid == "on" && rental == "on" && inventory == "on")
                    {
                        getData = (from item in getData
                                   where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }

                    if (others == "on" && hid == "" && rental == "" && inventory == "")
                    {
                        getData = (from item in getData
                                   where item.HIDStatus == "" || item.RentStatus == "" || item.Plant == ""
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }


                    if (area.Count() > 0 && area != null)
                    {
                        getData = (from item in getData
                                   where item.TerminationDate.Value.Month.Equals(dateFilter.Month) && item.TerminationDate.Value.Year.Equals(dateFilter.Year) && item.SapPSLStatus.Contains("Over Limit") && area.Contains(item.area)
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }
                    if (storeName.Count() > 0 && storeName != null)
                    {
                        getData = (from item in getData
                                   where item.TerminationDate.Value.Month.Equals(dateFilter.Month) && item.TerminationDate.Value.Year.Equals(dateFilter.Year) && item.SapPSLStatus.Contains("Over Limit") && storeName.Contains(item.StoreName) && item.area != "Product Support" && item.area != "Trakindo Utama"
                                   select new
                                   {
                                       area = item.area,
                                       TerminationDate = item.TerminationDate,
                                       SapPSLStatus = item.SapPSLStatus,
                                       StoreName = item.StoreName,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant
                                   });
                    }
                    var data = new GetDataForChartHorizontalPSP();
                    data.CountData = getData.Count();
                    data.Month = monthName;
                    listItem.Add(data);
                }
            }
            return listItem;

        }

        public List<TablePSLCompletionPSP> GetDataTableCompletionSummary(string dateFrom, string dateEnd, string dateFromIssue, string dateEndIssue, string[] splitArea, string[] splitPSLType, string[] splitSalesOffice, string[] splitModel, int column, string order, bool searchArea, bool searchPSLNo, bool searchStoreName, bool searchModel, bool searchSerialNumber, bool searchSRNo, bool searchQuotNo, bool searchSoNo, bool searchSAPPSLStatus, string valueSearch, string hid, string rental, string inventory, string others, int monthFrom, int monthEnd, int monthFromIssue, int monthEndIssue, int yearFromTerm, int yearEndTerm, int yearFromIssue, int yearEndIssue, string type, string month, string fcType)
        {
            var dateNow = DateTime.Now.Year - 1;
            var yearsNow = DateTime.Now.Year;
            var getListFromDate = _ctx.PSLMaster.Where(w => w.Area != null && w.Validation == "Completed" && w.RepairDate != null && w.PSLType == "S" && w.LetterDate.Value.Year == dateNow || 
            w.Area != null && w.Validation == "Completed" && w.RepairDate != null && w.PSLType == "P" && w.LetterDate.Value.Year == dateNow || 
            w.Area != null && w.Validation == "Outstanding" && w.RepairDate != null && w.PSLType == "S" && w.LetterDate.Value.Year == dateNow || 
            w.Area != null && w.Validation == "Outstanding" && w.RepairDate != null && w.PSLType == "P" && w.LetterDate.Value.Year == dateNow ||
            w.Area != null && w.PSLType == "A" && w.Validation.Contains("Completed") && w.RepairDate != null && w.PCR == "" && w.TerminationDate.Value.Year == yearsNow || 
            w.Area != null && w.PSLId.Substring(0,2) == "PS" && w.PSLType == "C" && w.Validation.Contains("Completed") && w.RepairDate != null && w.PCR == "" && w.TerminationDate.Value.Year == yearsNow || 
            w.Area != null && w.PSLType == "A" && w.Validation == "Outstanding" && w.RepairDate != null && w.PCR == "" && w.TerminationDate.Value.Year == yearsNow || 
            w.Area != null && w.PSLId.Substring(0, 2) == "PS" && w.PSLType == "C" && w.Validation == "Outstanding" && w.RepairDate != null && w.PCR == "" && w.TerminationDate.Value.Year == yearsNow || 
            w.Area != null && w.PSLId.Substring(0, 2) == "PS" && w.PSLType == "C" && w.Validation == "Completed" && w.RepairDate == null && w.PCR == "" && w.TerminationDate.Value.Year == yearsNow || 
            w.Area != null && w.PSLType == "A" && w.Validation == "Completed" && w.RepairDate == null && w.PCR == "" && w.TerminationDate.Value.Year == yearsNow ||
            w.Area != null && w.PSLId.Substring(0, 2) != "PS" && w.PSLType == "C" && w.Validation == "Outstanding" && w.PCR == "" && w.TerminationDate.Value.Year == yearsNow ||
            w.Area != null && w.PSLId.Substring(0, 2) != "PS" && w.PSLType == "C" && w.Validation == "Completed" && w.PCR == "" && w.TerminationDate.Value.Year == yearsNow);
            if (dateFrom != "" && dateEnd != "")
            {
                getListFromDate = _ctx.PSLMaster.Where(w => w.TerminationDate.Value.Year == yearFromTerm && w.TerminationDate.Value.Month >= monthFrom && w.TerminationDate.Value.Month <= monthEnd && w.Area != null && w.Validation == "Completed" && w.RepairDate != null && w.PCR == "" && w.PSLType == "A" || 
                w.TerminationDate.Value.Year == yearFromTerm && w.TerminationDate.Value.Month >= monthFrom && w.TerminationDate.Value.Month <= monthEnd && w.Area != null && w.Validation == "Completed" && w.RepairDate != null && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) == "PS" ||
                w.TerminationDate.Value.Year == yearFromTerm && w.TerminationDate.Value.Month >= monthFrom && w.TerminationDate.Value.Month <= monthEnd && w.Area != null && w.Validation == "Outstanding" && w.RepairDate != null && w.PCR == "" && w.PSLType == "A" || 
                w.TerminationDate.Value.Year == yearFromTerm && w.TerminationDate.Value.Month >= monthFrom && w.TerminationDate.Value.Month <= monthEnd && w.Area != null && w.Validation == "Outstanding" && w.RepairDate != null && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) == "PS" || 
                w.TerminationDate.Value.Year == yearFromTerm && w.TerminationDate.Value.Month >= monthFrom && w.TerminationDate.Value.Month <= monthEnd && w.Area != null && w.PSLType == "C" && w.Validation == "Completed" && w.RepairDate == null && w.PCR == "" && w.PSLId.Substring(0, 2) == "PS" || 
                w.TerminationDate.Value.Year == yearFromTerm && w.TerminationDate.Value.Month >= monthFrom && w.TerminationDate.Value.Month <= monthEnd && w.Area != null && w.PSLType == "A" && w.Validation == "Completed" && w.RepairDate == null && w.PCR == "" ||
                w.TerminationDate.Value.Year == yearFromTerm && w.TerminationDate.Value.Month >= monthFrom && w.TerminationDate.Value.Month <= monthEnd && w.Area != null && w.Validation == "Outstanding" && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) != "PS" ||
                w.TerminationDate.Value.Year == yearFromTerm && w.TerminationDate.Value.Month >= monthFrom && w.TerminationDate.Value.Month <= monthEnd && w.Area != null && w.Validation == "Completed" && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) != "PS");
            }
            if (dateFrom != "" && dateEnd == "")
            {
                getListFromDate = _ctx.PSLMaster.Where(w => w.TerminationDate.Value.Year == yearFromTerm && w.TerminationDate.Value.Month == monthFrom && w.Area != null && w.Validation == "Completed" && w.RepairDate != null && w.PCR == "" && w.PSLType == "A" || 
                w.TerminationDate.Value.Year == yearFromTerm && w.TerminationDate.Value.Month == monthFrom && w.Area != null && w.Validation == "Completed" && w.RepairDate != null && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) == "PS" ||
                w.TerminationDate.Value.Year == yearFromTerm && w.TerminationDate.Value.Month == monthFrom && w.Area != null && w.Validation == "Outstanding" && w.RepairDate != null && w.PCR == "" && w.PSLType == "A" || 
                w.TerminationDate.Value.Year == yearFromTerm && w.TerminationDate.Value.Month == monthFrom && w.Area != null && w.Validation == "Outstanding" && w.RepairDate != null && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) == "PS" || 
                w.TerminationDate.Value.Year == yearFromTerm && w.TerminationDate.Value.Month == monthFrom && w.Area != null && w.PSLType == "C" && w.Validation == "Completed" && w.RepairDate == null && w.PCR == "" && w.PSLId.Substring(0, 2) == "PS" || 
                w.TerminationDate.Value.Year == yearFromTerm && w.TerminationDate.Value.Month == monthFrom && w.Area != null && w.PSLType == "A" && w.Validation == "Completed" && w.RepairDate == null && w.PCR == "" ||
                w.TerminationDate.Value.Year == yearFromTerm && w.TerminationDate.Value.Month == monthFrom && w.Area != null && w.Validation == "Outstanding" && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) != "PS" ||
                w.TerminationDate.Value.Year == yearFromTerm && w.TerminationDate.Value.Month == monthFrom && w.Area != null && w.Validation == "Completed" && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) != "PS");
            }
            if (dateFromIssue != "" && dateEndIssue != "")
            {
                getListFromDate = _ctx.PSLMaster.Where(w => w.LetterDate.Value.Year == yearFromIssue && w.LetterDate.Value.Month >= monthFromIssue && w.LetterDate.Value.Month <= monthEndIssue && w.Area != null && w.Validation == "Completed" && w.RepairDate != null && w.PSLType == "S" || w.LetterDate.Value.Year == yearFromIssue && w.LetterDate.Value.Month >= monthFromIssue && w.LetterDate.Value.Month <= monthEndIssue && w.Area != null && w.Validation == "Completed" && w.RepairDate != null && w.PSLType == "P" || w.LetterDate.Value.Year == yearFromIssue && w.LetterDate.Value.Month >= monthFromIssue && w.LetterDate.Value.Month <= monthEndIssue && w.Area != null && w.Validation == "Outstanding" && w.RepairDate != null && w.PSLType == "S" || w.LetterDate.Value.Year == yearFromIssue && w.LetterDate.Value.Month >= monthFromIssue && w.LetterDate.Value.Month <= monthEndIssue && w.Area != null && w.Validation == "Outstanding" && w.RepairDate != null && w.PSLType == "P");
            }
            if (dateFromIssue != "" && dateEndIssue == "")
            {
                getListFromDate = _ctx.PSLMaster.Where(w => w.LetterDate.Value.Year == yearFromIssue && w.LetterDate.Value.Month == monthFromIssue && w.Area != null && w.Validation == "Completed" && w.RepairDate != null && w.PSLType == "S" || w.LetterDate.Value.Year == yearFromIssue && w.LetterDate.Value.Month == monthFromIssue && w.Area != null && w.Validation == "Completed" && w.RepairDate != null && w.PSLType == "P" || w.LetterDate.Value.Year == yearFromIssue && w.LetterDate.Value.Month == monthFromIssue && w.Area != null && w.Validation == "Outstanding" && w.RepairDate != null && w.PSLType == "S" || w.LetterDate.Value.Year == yearFromIssue && w.LetterDate.Value.Month == monthFromIssue&& w.Area != null && w.Validation == "Outstanding" && w.RepairDate != null && w.PSLType == "P");
            }
            if (splitPSLType.Count() > 0)
            {
                foreach(var item in splitPSLType)
                {
                    if(item == "S" || item == "P")
                    {
                        getListFromDate = getListFromDate.Where(w => w.Area != null && w.Validation == "Completed" && w.RepairDate != null && w.PSLType == "S" || w.Area != null && w.Validation == "Completed" && w.RepairDate != null && w.PSLType == "P" || w.Area != null && w.Validation == "Outstanding" && w.RepairDate != null && w.PSLType == "S" || w.Area != null && w.Validation == "Outstanding" && w.RepairDate != null && w.PSLType == "P");
                    }
                    if(item == "A" || item == "C")
                    {
                        getListFromDate = getListFromDate.Where(w => w.Area != null && w.Validation == "Completed" && w.RepairDate != null && w.PCR == "" && w.PSLType == "A" ||
                 w.Area != null && w.Validation == "Completed" && w.RepairDate != null && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) == "PS" ||
                 w.Area != null && w.Validation == "Outstanding" && w.RepairDate != null && w.PCR == "" && w.PSLType == "A" ||
                 w.Area != null && w.Validation == "Outstanding" && w.RepairDate != null && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) == "PS" ||
                 w.Area != null && w.PSLType == "C" && w.Validation == "Completed" && w.RepairDate == null && w.PCR == "" && w.PSLId.Substring(0, 2) == "PS" ||
                 w.Area != null && w.PSLType == "A" && w.Validation == "Completed" && w.RepairDate == null && w.PCR == "" ||
                 w.Area != null && w.Validation == "Completed" && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) != "PS" ||
                 w.Area != null && w.Validation == "Outstanding" && w.PCR == "" && w.PSLType == "C" && w.PSLId.Substring(0, 2) != "PS");
                    }
                }
            }
            if (hid == "on" && rental == "on" && inventory == "")
            {
                getListFromDate = getListFromDate.Where(item => item.HIDStatus != "");
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                getListFromDate = getListFromDate.Where(item => item.HIDStatus != "" || item.Plant != "");
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                getListFromDate = getListFromDate.Where(item => item.RentStatus != "");
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                getListFromDate = getListFromDate.Where(item => item.RentStatus != "" || item.Plant != "");
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                getListFromDate = getListFromDate.Where(item => item.Plant != "");
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                getListFromDate = getListFromDate.Where(item => item.HIDStatus != "" || item.RentStatus != "" || item.Plant != "");
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                getListFromDate = getListFromDate.Where(item => item.HIDStatus == "" || item.Plant == "" || item.RentStatus == "");
            }

            if (splitArea.Count() > 0 && splitArea != null)
            {
                getListFromDate = getListFromDate.Where(item => splitArea.Contains(item.Area));
            }

            if(splitSalesOffice.Count() > 0 && splitSalesOffice != null)
            {
                getListFromDate = getListFromDate.Where(item => splitSalesOffice.Contains(item.SalesOffice));
            }

            if (splitModel.Count() > 0 && splitModel != null)
            {
                getListFromDate = getListFromDate.Where(item => splitModel.Contains(item.Model));
            }

            if(type == "PIP Safety")
            {
                if(month == "Jan")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "S" && item.LetterDate.Value.Month == 1);
                }
                if (month == "Feb")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "S" && item.LetterDate.Value.Month == 2);
                }
                if (month == "Mar")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "S" && item.LetterDate.Value.Month == 3);
                }
                if (month == "Apr")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "S" && item.LetterDate.Value.Month == 4);
                }
                if (month == "May")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "S" && item.LetterDate.Value.Month == 5);
                }
                if (month == "Jun")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "S" && item.LetterDate.Value.Month == 6);
                }
                if (month == "Jul")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "S" && item.LetterDate.Value.Month == 7);
                }
                if (month == "Aug")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "S" && item.LetterDate.Value.Month == 8);
                }
                if (month == "Sep")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "S" && item.LetterDate.Value.Month == 9);
                }
                if (month == "Oct")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "S" && item.LetterDate.Value.Month == 10);
                }
                if (month == "Nov")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "S" && item.LetterDate.Value.Month == 11);
                }
                if (month == "Dec")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "S" && item.LetterDate.Value.Month == 12);
                }

            }

            if(type == "PIP Priority")
            {
                if (month == "Jan")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "P" && item.LetterDate.Value.Month == 1);
                }
                if (month == "Feb")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "P" && item.LetterDate.Value.Month == 2);
                }
                if (month == "Mar")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "P" && item.LetterDate.Value.Month == 3);
                }
                if (month == "Apr")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "P" && item.LetterDate.Value.Month == 4);
                }
                if (month == "May")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "P" && item.LetterDate.Value.Month == 5);
                }
                if (month == "Jun")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "P" && item.LetterDate.Value.Month == 6);
                }
                if (month == "Jul")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "P" && item.LetterDate.Value.Month == 7);
                }
                if (month == "Aug")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "P" && item.LetterDate.Value.Month == 8);
                }
                if (month == "Sep")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "P" && item.LetterDate.Value.Month == 9);
                }
                if (month == "Oct")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "P" && item.LetterDate.Value.Month == 10);
                }
                if (month == "Nov")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "p" && item.LetterDate.Value.Month == 11);
                }
                if (month == "Dec")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "p" && item.LetterDate.Value.Month == 12);
                }
            }
            if(type == "PSP Pro Active")
            {
                if (month == "Jan")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "C" && item.TerminationDate.Value.Month == 1);
                }
                if (month == "Feb")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "C" && item.TerminationDate.Value.Month == 2);
                }
                if (month == "Mar")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "C" && item.TerminationDate.Value.Month == 3);
                }
                if (month == "Apr")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "C" && item.TerminationDate.Value.Month == 4);
                }
                if (month == "May")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "C" && item.TerminationDate.Value.Month == 5);
                }
                if (month == "Jun")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "C" && item.TerminationDate.Value.Month == 6);
                }
                if (month == "Jul")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "C" && item.TerminationDate.Value.Month == 7);
                }
                if (month == "Aug")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "C" && item.TerminationDate.Value.Month == 8);
                }
                if (month == "Sep")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "C" && item.TerminationDate.Value.Month == 9);
                }
                if (month == "Oct")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "C" && item.TerminationDate.Value.Month == 10);
                }
                if (month == "Nov")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "C" && item.TerminationDate.Value.Month == 11);
                }
                if (month == "Dec")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "C" && item.TerminationDate.Value.Month == 12);
                }
            }
            if(type == "PSP After Failure")
            {
                if (month == "Jan")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "A" && item.TerminationDate.Value.Month == 1);
                }
                if (month == "Feb")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "A" && item.TerminationDate.Value.Month == 2);
                }
                if (month == "Mar")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "A" && item.TerminationDate.Value.Month == 3);
                }
                if (month == "Apr")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "A" && item.TerminationDate.Value.Month == 4);
                }
                if (month == "May")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "A" && item.TerminationDate.Value.Month == 5);
                }
                if (month == "Jun")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "A" && item.TerminationDate.Value.Month == 6);
                }
                if (month == "Jul")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "A" && item.TerminationDate.Value.Month == 7);
                }
                if (month == "Aug")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "A" && item.TerminationDate.Value.Month == 8);
                }
                if (month == "Sep")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "A" && item.TerminationDate.Value.Month == 9);
                }
                if (month == "Oct")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "A" && item.TerminationDate.Value.Month == 10);
                }
                if (month == "Nov")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "A" && item.TerminationDate.Value.Month == 11);
                }
                if (month == "Dec")
                {
                    getListFromDate = getListFromDate.Where(item => item.PSLType == "A" && item.TerminationDate.Value.Month == 12);
                }
            }

            var getData = (from item in getListFromDate
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLNo = item.PSLId,
                               StoreName = item.SalesOffice,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.ServiceOrderNo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ServiceOrderReleaseDate,
                               LetterDate = item.LetterDate,
                               PSLType = item.PSLType,
                               SalesOffice = item.SalesOffice,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               WipAge = item.WipAge,
                               Validation = item.Validation,
                               PslAge = item.PslAge,
                               CatPslStatus = item.CatPSLStatus,
                               IssueDate = item.LetterDate
                           });
            if (splitArea.Count() > 0 || splitModel.Count() > 0 || splitPSLType.Count() > 0 || splitSalesOffice.Count() > 0 || dateFrom != "" || dateEnd != "" || dateFromIssue != "" || dateEndIssue != "" || hid != "" || rental != "" || inventory != "" || others != "")
            {
                getData = (from item in getListFromDate
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLNo = item.PSLId,
                               StoreName = item.SalesOffice,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.ServiceOrderNo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ServiceOrderReleaseDate,
                               LetterDate = item.LetterDate,
                               PSLType = item.PSLType,
                               SalesOffice = item.SalesOffice,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               WipAge = item.WipAge,
                               Validation = item.Validation,
                               PslAge = item.PslAge,
                               CatPslStatus = item.CatPSLStatus,
                               IssueDate = item.LetterDate
                           });
            }
            else
            {
                getData = (from item in getListFromDate
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               Area = item.Area,
                               PSLNo = item.PSLId,
                               StoreName = item.SalesOffice,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               ServiceRequestNo = item.ServiceRequestNo,
                               QuotationNo = item.QuotationNo,
                               SONo = item.ServiceOrderNo,
                               SapPSLStatus = item.SapPSLStatus,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ServiceOrderReleaseDate,
                               LetterDate = item.LetterDate,
                               PSLType = item.PSLType,
                               SalesOffice = item.SalesOffice,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               WipAge = item.WipAge,
                               Validation = item.Validation,
                               PslAge = item.PslAge,
                               CatPslStatus = item.CatPSLStatus,
                               IssueDate = item.LetterDate
                           });
            }
            

            if (!string.IsNullOrWhiteSpace(valueSearch))
            {
                if (searchArea == true || searchPSLNo || true || searchStoreName == true || searchModel == true || searchSerialNumber == true || searchSRNo == true || searchQuotNo == true || searchSoNo == true || searchSAPPSLStatus == true)
                {
                    getData = getData.Where(w => w.Area.ToLower().Contains(valueSearch.ToLower()) || w.PSLNo.ToLower().Contains(valueSearch.ToLower()) || w.StoreName.ToLower().Contains(valueSearch.ToLower()) || w.Model.ToLower().Contains(valueSearch.ToLower()) || w.SerialNumber.ToLower().Contains(valueSearch.ToLower()) || w.ServiceRequestNo.ToString().ToLower().Contains(valueSearch.ToLower()) || w.QuotationNo.ToString().ToLower().Contains(valueSearch.ToLower()) || w.SONo.ToString().ToLower().Contains(valueSearch.ToLower()) || w.SapPSLStatus.ToLower().Contains(valueSearch.ToLower()) || w.CatPslStatus.ToLower().Contains(valueSearch.ToLower()) || w.LetterDate.ToString().ToLower().Contains(valueSearch.ToLower()) || w.TerminationDate.ToString().ToLower().Contains(valueSearch.ToLower()));
                }
            }
            
            #region OrderData
            if (column == 0)
            {
                if (order == "asc")
                {
                    getData = getData.OrderBy(ord => ord.Area);
                }
                else
                {
                    getData = getData.OrderByDescending(odb => odb.Area);
                }
            }
            else if (column == 1)
            {
                if (order == "asc")
                {
                    getData = getData.OrderBy(ord => ord.PSLNo);
                }
                else
                {
                    getData = getData.OrderByDescending(odb => odb.PSLNo);
                }
            }
            else if (column == 2)
            {
                if (order == "asc")
                {
                    getData = getData.OrderBy(ord => ord.StoreName);
                }
                else
                {
                    getData = getData.OrderByDescending(odb => odb.StoreName);
                }
            }
            else if (column == 3)
            {
                if (order == "asc")
                {
                    getData = getData.OrderBy(ord => ord.Model);
                }
                else
                {
                    getData = getData.OrderByDescending(odb => odb.Model);
                }
            }
            else if (column == 4)
            {
                if (order == "asc")
                {
                    getData = getData.OrderBy(ord => ord.SerialNumber);
                }
                else
                {
                    getData = getData.OrderByDescending(odb => odb.SerialNumber);
                }
            }
            else if (column == 5)
            {
                if (order == "asc")
                {
                    getData = getData.OrderBy(ord => ord.ServiceRequestNo);
                }
                else
                {
                    getData = getData.OrderByDescending(odb => odb.ServiceRequestNo);
                }
            }
            else if (column == 6)
            {
                if (order == "asc")
                {
                    getData = getData.OrderBy(ord => ord.QuotationNo);
                }
                else
                {
                    getData = getData.OrderByDescending(odb => odb.QuotationNo);
                }
            }
            else if (column == 7)
            {
                if (order == "asc")
                {
                    getData = getData.OrderBy(ord => ord.SONo);
                }
                else
                {
                    getData = getData.OrderByDescending(odb => odb.SONo);
                }
            }
            else if (column == 8)
            {
                if (order == "asc")
                {
                    getData = getData.OrderBy(ord => ord.SapPSLStatus);
                }
                else
                {
                    getData = getData.OrderByDescending(odb => odb.SapPSLStatus);
                }
            }
            #endregion

            if (fcType.ToLower() == "completed")
            {
                getData = getData.Where(wt => wt.Validation.ToLower() == "completed");
            }else if (fcType.ToLower() == "outstanding")
            {
                getData = getData.Where(wt => wt.Validation.ToLower() == "outstanding");
            }



            var listitem = new List<TablePSLCompletionPSP>();
            int ida = 0;
            foreach (var item in getData)
            {
                if(splitPSLType.Count() > 0)
                {
                    foreach(var data in splitPSLType)
                    {
                        if(data == "S")
                        {
                            if(item.PSLType == "S")
                            {
                                var list = new TablePSLCompletionPSP();
                                list.Row = ida++;
                                if (!string.IsNullOrWhiteSpace(item.Area))
                                {
                                    list.Area = item.Area;
                                }
                                else
                                {
                                    list.Area = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.PSLNo))
                                {
                                    list.PSLNo = item.PSLNo;
                                }
                                else
                                {
                                    list.PSLNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.StoreName))
                                {
                                    list.StoreName = item.StoreName;
                                }
                                else
                                {
                                    list.StoreName = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.Model))
                                {
                                    list.Model = item.Model;
                                }
                                else
                                {
                                    list.Model = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.SerialNumber))
                                {
                                    list.SerialNo = item.SerialNumber;
                                }
                                else
                                {
                                    list.SerialNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.ServiceRequestNo))
                                {
                                    list.SRNo = item.ServiceRequestNo;
                                }
                                else
                                {
                                    list.SRNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.QuotationNo))
                                {
                                    list.QuotNo = item.QuotationNo;
                                }
                                else
                                {
                                    list.QuotNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.SONo))
                                {
                                    list.SoNo = item.SONo;
                                }
                                else
                                {
                                    list.SoNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.SapPSLStatus))
                                {
                                    list.PSLStatus = item.SapPSLStatus;
                                }
                                else
                                {
                                    list.PSLStatus = "-";
                                }
                                if(item.CatPslStatus != null)
                                {
                                    list.CatPSLStatus = item.CatPslStatus;
                                }
                                else
                                {
                                    list.CatPSLStatus = "-";
                                }
                                var releaseDate = item.LetterDate.Value.Date.ToString();
                                if (item.LetterDate == null)
                                {
                                    list.ReleaseDateText = "-";
                                }
                                else
                                {
                                    var splitReleaseDate = releaseDate.Split(' ');
                                    list.ReleaseDateText = splitReleaseDate[0].ToString();
                                }
                                var terminationDate = item.TerminationDate.Value.Date.ToString();
                                if (item.TerminationDate == null)
                                {
                                    list.TerminationDateText = "-";
                                }
                                else
                                {
                                    var splitTerminationDate = terminationDate.Split(' ');
                                    list.TerminationDateText = splitTerminationDate[0].ToString();
                                }
                                list.ReleaseDate = item.LetterDate;
                                list.TerminationDate = item.TerminationDate;
                                list.WipAge = item.WipAge;
                                list.DaysToExpired = item.DaysToExpired;
                                list.Validation = item.Validation;
                                list.PslAge = item.PslAge;
                                listitem.Add(list);
                            }
                        }
                        else if (data == "P")
                        {
                            if(item.PSLType == "P")
                            {
                                var list = new TablePSLCompletionPSP();
                                list.Row = ida++;
                                if (!string.IsNullOrWhiteSpace(item.Area))
                                {
                                    list.Area = item.Area;
                                }
                                else
                                {
                                    list.Area = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.PSLNo))
                                {
                                    list.PSLNo = item.PSLNo;
                                }
                                else
                                {
                                    list.PSLNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.StoreName))
                                {
                                    list.StoreName = item.StoreName;
                                }
                                else
                                {
                                    list.StoreName = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.Model))
                                {
                                    list.Model = item.Model;
                                }
                                else
                                {
                                    list.Model = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.SerialNumber))
                                {
                                    list.SerialNo = item.SerialNumber;
                                }
                                else
                                {
                                    list.SerialNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.ServiceRequestNo))
                                {
                                    list.SRNo = item.ServiceRequestNo;
                                }
                                else
                                {
                                    list.SRNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.QuotationNo))
                                {
                                    list.QuotNo = item.QuotationNo;
                                }
                                else
                                {
                                    list.QuotNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.SONo))
                                {
                                    list.SoNo = item.SONo;
                                }
                                else
                                {
                                    list.SoNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.SapPSLStatus))
                                {
                                    list.PSLStatus = item.SapPSLStatus;
                                }
                                else
                                {
                                    list.PSLStatus = "-";
                                }
                                if (item.CatPslStatus != null)
                                {
                                    list.CatPSLStatus = item.CatPslStatus;
                                }
                                else
                                {
                                    list.CatPSLStatus = "-";
                                }
                                var releaseDate = item.LetterDate.Value.Date.ToString();
                                if (item.LetterDate == null)
                                {
                                    list.ReleaseDateText = "-";
                                }
                                else
                                {
                                    var splitReleaseDate = releaseDate.Split(' ');
                                    list.ReleaseDateText = splitReleaseDate[0].ToString();
                                }
                                var terminationDate = item.TerminationDate.Value.Date.ToString();
                                if (item.TerminationDate == null)
                                {
                                    list.TerminationDateText = "-";
                                }
                                else
                                {
                                    var splitTerminationDate = terminationDate.Split(' ');
                                    list.TerminationDateText = splitTerminationDate[0].ToString();
                                }
                                list.ReleaseDate = item.ReleaseDate;
                                list.TerminationDate = item.TerminationDate;
                                list.WipAge = item.WipAge;
                                list.DaysToExpired = item.DaysToExpired;
                                list.Validation = item.Validation;
                                list.PslAge = item.PslAge;
                                listitem.Add(list);
                            }
                        }
                        else if (data == "A")
                        {
                            if(item.PSLType == "A")
                            {
                                var list = new TablePSLCompletionPSP();
                                list.Row = ida++;
                                if (!string.IsNullOrWhiteSpace(item.Area))
                                {
                                    list.Area = item.Area;
                                }
                                else
                                {
                                    list.Area = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.PSLNo))
                                {
                                    list.PSLNo = item.PSLNo;
                                }
                                else
                                {
                                    list.PSLNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.StoreName))
                                {
                                    list.StoreName = item.StoreName;
                                }
                                else
                                {
                                    list.StoreName = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.Model))
                                {
                                    list.Model = item.Model;
                                }
                                else
                                {
                                    list.Model = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.SerialNumber))
                                {
                                    list.SerialNo = item.SerialNumber;
                                }
                                else
                                {
                                    list.SerialNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.ServiceRequestNo))
                                {
                                    list.SRNo = item.ServiceRequestNo;
                                }
                                else
                                {
                                    list.SRNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.QuotationNo))
                                {
                                    list.QuotNo = item.QuotationNo;
                                }
                                else
                                {
                                    list.QuotNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.SONo))
                                {
                                    list.SoNo = item.SONo;
                                }
                                else
                                {
                                    list.SoNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.SapPSLStatus))
                                {
                                    list.PSLStatus = item.SapPSLStatus;
                                }
                                else
                                {
                                    list.PSLStatus = "-";
                                }
                                if (item.CatPslStatus != null)
                                {
                                    list.CatPSLStatus = item.CatPslStatus;
                                }
                                else
                                {
                                    list.CatPSLStatus = "-";
                                }
                                var releaseDate = item.LetterDate.Value.Date.ToString();
                                if (item.LetterDate == null)
                                {
                                    list.ReleaseDateText = "-";
                                }
                                else
                                {
                                    var splitReleaseDate = releaseDate.Split(' ');
                                    list.ReleaseDateText = splitReleaseDate[0].ToString();
                                }
                                var terminationDate = item.TerminationDate.Value.Date.ToString();
                                if (item.TerminationDate == null)
                                {
                                    list.TerminationDateText = "-";
                                }
                                else
                                {
                                    var splitTerminationDate = terminationDate.Split(' ');
                                    list.TerminationDateText = splitTerminationDate[0].ToString();
                                }
                                list.ReleaseDate = item.ReleaseDate;
                                list.TerminationDate = item.TerminationDate;
                                list.WipAge = item.WipAge;
                                list.DaysToExpired = item.DaysToExpired;
                                list.Validation = item.Validation;
                                list.PslAge = item.PslAge;
                                listitem.Add(list);
                            }
                        }
                        else if(data == "C")
                        {
                            if(item.PSLType == "C")
                            {
                                var list = new TablePSLCompletionPSP();
                                list.Row = ida++;
                                if (!string.IsNullOrWhiteSpace(item.Area))
                                {
                                    list.Area = item.Area;
                                }
                                else
                                {
                                    list.Area = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.PSLNo))
                                {
                                    list.PSLNo = item.PSLNo;
                                }
                                else
                                {
                                    list.PSLNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.StoreName))
                                {
                                    list.StoreName = item.StoreName;
                                }
                                else
                                {
                                    list.StoreName = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.Model))
                                {
                                    list.Model = item.Model;
                                }
                                else
                                {
                                    list.Model = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.SerialNumber))
                                {
                                    list.SerialNo = item.SerialNumber;
                                }
                                else
                                {
                                    list.SerialNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.ServiceRequestNo))
                                {
                                    list.SRNo = item.ServiceRequestNo;
                                }
                                else
                                {
                                    list.SRNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.QuotationNo))
                                {
                                    list.QuotNo = item.QuotationNo;
                                }
                                else
                                {
                                    list.QuotNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.SONo))
                                {
                                    list.SoNo = item.SONo;
                                }
                                else
                                {
                                    list.SoNo = "-";
                                }

                                if (!string.IsNullOrWhiteSpace(item.SapPSLStatus))
                                {
                                    list.PSLStatus = item.SapPSLStatus;
                                }
                                else
                                {
                                    list.PSLStatus = "-";
                                }
                                if (item.CatPslStatus != null)
                                {
                                    list.CatPSLStatus = item.CatPslStatus;
                                }
                                else
                                {
                                    list.CatPSLStatus = "-";
                                }
                                var releaseDate = item.LetterDate.Value.Date.ToString();
                                if (item.LetterDate == null)
                                {
                                    list.ReleaseDateText = "-";
                                }
                                else
                                {
                                    var splitReleaseDate = releaseDate.Split(' ');
                                    list.ReleaseDateText = splitReleaseDate[0].ToString();
                                }
                                var terminationDate = item.TerminationDate.Value.Date.ToString();
                                if (item.TerminationDate == null)
                                {
                                    list.TerminationDateText = "-";
                                }
                                else
                                {
                                    var splitTerminationDate = terminationDate.Split(' ');
                                    list.TerminationDateText = splitTerminationDate[0].ToString();
                                }
                                list.ReleaseDate = item.ReleaseDate;
                                list.TerminationDate = item.TerminationDate;
                                list.WipAge = item.WipAge;
                                list.DaysToExpired = item.DaysToExpired;
                                list.Validation = item.Validation;
                                list.PslAge = item.PslAge;
                                listitem.Add(list);
                            }
                        }
                    }
                }
                else
                {
                    var list = new TablePSLCompletionPSP();
                    list.Row = ida++;
                    if (!string.IsNullOrWhiteSpace(item.Area))
                    {
                        list.Area = item.Area;
                    }
                    else
                    {
                        list.Area = "-";
                    }

                    if (!string.IsNullOrWhiteSpace(item.PSLNo))
                    {
                        list.PSLNo = item.PSLNo;
                    }
                    else
                    {
                        list.PSLNo = "-";
                    }
                    if (!string.IsNullOrWhiteSpace(item.StoreName))
                    {
                        list.StoreName = item.StoreName;
                    }
                    else
                    {
                        list.StoreName = "-";
                    }

                    if (!string.IsNullOrWhiteSpace(item.Model))
                    {
                        list.Model = item.Model;
                    }
                    else
                    {
                        list.Model = "-";
                    }

                    if (!string.IsNullOrWhiteSpace(item.SerialNumber))
                    {
                        list.SerialNo = item.SerialNumber;
                    }
                    else
                    {
                        list.SerialNo = "-";
                    }

                    if (!string.IsNullOrWhiteSpace(item.ServiceRequestNo))
                    {
                        list.SRNo = item.ServiceRequestNo;
                    }
                    else
                    {
                        list.SRNo = "-";
                    }

                    if (!string.IsNullOrWhiteSpace(item.QuotationNo))
                    {
                        list.QuotNo = item.QuotationNo;
                    }
                    else
                    {
                        list.QuotNo = "-";
                    }

                    if (!string.IsNullOrWhiteSpace(item.SONo))
                    {
                        list.SoNo = item.SONo;
                    }
                    else
                    {
                        list.SoNo = "-";
                    }

                    if (!string.IsNullOrWhiteSpace(item.SapPSLStatus))
                    {
                        list.PSLStatus = item.SapPSLStatus;
                    }
                    else
                    {
                        list.PSLStatus = "-";
                    }
                    if (item.CatPslStatus != null)
                    {
                        list.CatPSLStatus = item.CatPslStatus;
                    }
                    else
                    {
                        list.CatPSLStatus = "-";
                    }
                    var releaseDate = item.LetterDate.Value.Date.ToString();
                    if (item.LetterDate == null)
                    {
                        list.ReleaseDateText = "-";
                    }
                    else
                    {
                        var splitReleaseDate = releaseDate.Split(' ');
                        list.ReleaseDateText = splitReleaseDate[0].ToString();
                    }
                    var terminationDate = item.TerminationDate.Value.Date.ToString();
                    if (item.TerminationDate == null)
                    {
                        list.TerminationDateText = "-";
                    }
                    else
                    {
                        var splitTerminationDate = terminationDate.Split(' ');
                        list.TerminationDateText = splitTerminationDate[0].ToString();
                    }
                    list.ReleaseDate = item.ReleaseDate;
                    list.TerminationDate = item.TerminationDate;
                    list.WipAge = item.WipAge;
                    list.DaysToExpired = item.DaysToExpired;
                    list.Validation = item.Validation;
                    list.PslAge = item.PslAge;
                    listitem.Add(list);
                }
                
            }
            return listitem;

        }

        public List<DataChartPSLCompletionSummary> GetDataForChartPSLSummary(string[] area, string[] salesOffice, string[] model, string[] psltype, string dateFrom, string dateEnd, string dateFromIssue, string dateEndIssue, string hid, string rental, string inventory, string others, int monthFromTerm, int monthEndTerm, int yearFromTerm, int yearEndTerm, int monthFromIssue, int monthEndIssue, int yearFromIssue, int yearEndIssue)
        {
            var listItem = new List<DataChartPSLCompletionSummary>();
            var listCountAveragePipSafety = new List<decimal>();
            var listCountAveragePipPriority = new List<decimal>();
            var listCountAveragePspProActive = new List<decimal>();
            var listCountAveragePspAfterFailure = new List<decimal>();
            var listMonth = new List<string>();

            if (string.IsNullOrWhiteSpace(dateFrom) && string.IsNullOrWhiteSpace(dateEnd) && string.IsNullOrWhiteSpace(dateFromIssue) && string.IsNullOrWhiteSpace(dateEndIssue))
            {
                decimal pipSafetyParse = 0;
                decimal pipPriorityParse = 0;
                decimal pspProActiveParse = 0;
                decimal pspAfterFailureParse = 0;

                decimal pipSafetyParseOuts = 0;
                decimal pipPriorityParseOuts = 0;
                decimal pspProActiveParseOuts = 0;
                decimal pspAfterFailureParseOuts = 0;
                for (var i = 1; i <= 12; i++)
                {
                    var dateNow = DateTime.Now;
                    var dateFilter = new DateTime(dateNow.Year, i, 1);
                    var monthName = new DateTime(dateNow.Year, i, 1).ToString("MMM");
                    var beforeThisYear = DateTime.Now.Year - 1;

                    #region Completed
                    var dataPipSafety = (from item in _ctx.PSLMaster
                                         where item.Area != null && item.LetterDate.Value.Year == beforeThisYear && item.LetterDate.Value.Month == i && item.PSLType == "S" && item.Validation.Contains("Completed") && item.RepairDate != null
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.SapPSLStatus,
                                             TerminationDate = item.LetterDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.Validation,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                    var dataPipPriority = (from item in _ctx.PSLMaster
                                           where item.Area != null && item.LetterDate.Value.Year == beforeThisYear && item.LetterDate.Value.Month == i && item.PSLType == "P" && item.Validation.Contains("Completed") && item.RepairDate != null
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.LetterDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.Validation,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                    var dataPspProActive = (from item in _ctx.PSLMaster
                                            where item.Area != null && item.TerminationDate.Value.Year == DateTime.Now.Year && item.TerminationDate.Value.Month == i && item.PSLType == "C" && item.Validation.Contains("Completed") && item.RepairDate != null && item.PCR == ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.Validation,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                    var dataPspAfterFailure = (from item in _ctx.PSLMaster
                                               where item.Area != null && item.TerminationDate.Value.Year == DateTime.Now.Year && item.TerminationDate.Value.Month == i && item.PSLType == "A" && item.Validation.Contains("Completed") && item.RepairDate != null && item.PCR == ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.Validation,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                    #endregion

                    #region Outstanding
                    var dataPipSafetyOuts = (from item in _ctx.PSLMaster
                                             where item.Area != null && item.LetterDate.Value.Year == beforeThisYear && item.LetterDate.Value.Month == i && item.PSLType == "S" && item.Validation == "Outstanding" && item.RepairDate != null
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.LetterDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.Validation,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                    var dataPipPriorityOuts = (from item in _ctx.PSLMaster
                                               where item.Area != null && item.LetterDate.Value.Year == beforeThisYear && item.LetterDate.Value.Month == i && item.PSLType == "P" && item.Validation == "Outstanding" && item.RepairDate != null
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.LetterDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.Validation,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                    var dataPspProActiveOuts = (from item in _ctx.PSLMaster
                                                where item.Area != null && item.TerminationDate.Value.Year == DateTime.Now.Year && item.TerminationDate.Value.Month == i && item.PSLType == "C" && item.Validation == "Outstanding" && item.RepairDate != null && item.PCR == "" || item.Area != null && item.TerminationDate.Value.Year == DateTime.Now.Year && item.TerminationDate.Value.Month == i && item.PSLType == "C" && item.Validation == "Completed" && item.RepairDate == null && item.PCR == ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.Validation,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                    var dataPspAfterFailureOuts = (from item in _ctx.PSLMaster
                                                   where item.Area != null && item.TerminationDate.Value.Year == DateTime.Now.Year && item.TerminationDate.Value.Month == i && item.PSLType == "A" && item.Validation == "Outstanding" && item.RepairDate != null && item.PCR == "" || item.Area != null && item.TerminationDate.Value.Year == DateTime.Now.Year && item.TerminationDate.Value.Month == i && item.PSLType == "A" && item.Validation == "Completed" && item.RepairDate == null && item.PCR == ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.Validation,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                    #endregion

                    if (hid == "on" && rental == "" && inventory == "")
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where item.HIDStatus != ""
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where item.HIDStatus != ""
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        dataPspProActive = (from item in dataPspProActive
                                            where item.HIDStatus != ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where item.HIDStatus != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where item.HIDStatus != ""
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where item.HIDStatus != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where item.HIDStatus != ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where item.HIDStatus != ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (hid == "on" && rental == "on" && inventory == "")
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where item.HIDStatus != "" || item.RentStatus != ""
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where item.HIDStatus != "" || item.RentStatus != ""
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        dataPspProActive = (from item in dataPspProActive
                                            where item.HIDStatus != "" || item.RentStatus != ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where item.HIDStatus != "" || item.RentStatus != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where item.HIDStatus != "" || item.RentStatus != ""
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where item.HIDStatus != "" || item.RentStatus != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where item.HIDStatus != "" || item.RentStatus != ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where item.HIDStatus != "" || item.RentStatus != ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (hid == "on" && rental == "" && inventory == "on")
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where item.HIDStatus != "" || item.Plant != ""
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where item.HIDStatus != "" || item.Plant != ""
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        dataPspProActive = (from item in dataPspProActive
                                            where item.HIDStatus != "" || item.Plant != ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where item.HIDStatus != "" || item.Plant != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where item.HIDStatus != "" || item.Plant != ""
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where item.HIDStatus != "" || item.Plant != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where item.HIDStatus != "" || item.Plant != ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where item.HIDStatus != "" || item.Plant != ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (hid == "" && rental == "on" && inventory == "")
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where item.RentStatus != ""
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where item.RentStatus != ""
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        dataPspProActive = (from item in dataPspProActive
                                            where item.RentStatus != ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where item.RentStatus != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where item.RentStatus != ""
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where item.RentStatus != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where item.RentStatus != ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where item.RentStatus != ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (hid == "" && rental == "on" && inventory == "on")
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where item.RentStatus != "" || item.Plant != ""
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where item.RentStatus != "" || item.Plant != ""
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        dataPspProActive = (from item in dataPspProActive
                                            where item.RentStatus != "" || item.Plant != ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where item.RentStatus != "" || item.Plant != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where item.RentStatus != "" || item.Plant != ""
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where item.RentStatus != "" || item.Plant != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where item.RentStatus != "" || item.Plant != ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where item.RentStatus != "" || item.Plant != ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (hid == "" && rental == "" && inventory == "on")
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where item.Plant != ""
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where item.Plant != ""
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        dataPspProActive = (from item in dataPspProActive
                                            where item.Plant != ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where item.Plant != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where item.Plant != ""
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where item.Plant != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where item.Plant != ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where item.Plant != ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (hid == "on" && rental == "on" && inventory == "on")
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        dataPspProActive = (from item in dataPspProActive
                                            where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (others == "on" && hid == "" && rental == "" && inventory == "")
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        dataPspProActive = (from item in dataPspProActive
                                            where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (area.Count() > 0 && area != null)
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where area.Contains(item.Area)
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where area.Contains(item.Area)
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        dataPspProActive = (from item in dataPspProActive
                                            where area.Contains(item.Area)
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where area.Contains(item.Area)
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where area.Contains(item.Area)
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where area.Contains(item.Area)
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where area.Contains(item.Area)
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where area.Contains(item.Area)
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (salesOffice.Count() > 0 && salesOffice != null)
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where salesOffice.Contains(item.SalesOffice)
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where salesOffice.Contains(item.SalesOffice)
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        dataPspProActive = (from item in dataPspProActive
                                            where salesOffice.Contains(item.SalesOffice)
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where salesOffice.Contains(item.SalesOffice)
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where salesOffice.Contains(item.SalesOffice)
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where salesOffice.Contains(item.SalesOffice)
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where salesOffice.Contains(item.SalesOffice)
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where salesOffice.Contains(item.SalesOffice)
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (model.Count() > 0 && model != null)
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where model.Contains(item.Model)
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where model.Contains(item.Model)
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        dataPspProActive = (from item in dataPspProActive
                                            where model.Contains(item.Model)
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where model.Contains(item.Model)
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where model.Contains(item.Model)
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where model.Contains(item.Model)
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where model.Contains(item.Model)
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where model.Contains(item.Model)
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (psltype.Count() > 0)
                    {
                        foreach (var item in psltype)
                        {
                            if (item == "S")
                            {
                                pipSafetyParse = Convert.ToDecimal(dataPipSafety.Count());
                                pipSafetyParseOuts = Convert.ToDecimal(dataPipSafetyOuts.Count());
                            }
                            if (item == "P")
                            {
                                pipPriorityParse = Convert.ToDecimal(dataPipPriority.Count());
                                pipPriorityParseOuts = Convert.ToDecimal(dataPipPriorityOuts.Count());
                            }
                            if (item == "A")
                            {
                                pspAfterFailureParse = Convert.ToDecimal(dataPspAfterFailure.Count());
                                pspAfterFailureParseOuts = Convert.ToDecimal(dataPspAfterFailureOuts.Count());
                            }
                            if (item == "C")
                            {
                                pspProActiveParse = Convert.ToDecimal(dataPspProActive.Count());
                                pspProActiveParseOuts = Convert.ToDecimal(dataPspProActiveOuts.Count());
                            }
                        }
                    }
                    else
                    {
                        pipSafetyParse = Convert.ToDecimal(dataPipSafety.Count());
                        pipPriorityParse = Convert.ToDecimal(dataPipPriority.Count());
                        pspProActiveParse = Convert.ToDecimal(dataPspProActive.Count());
                        pspAfterFailureParse = Convert.ToDecimal(dataPspAfterFailure.Count());

                        pipSafetyParseOuts = Convert.ToDecimal(dataPipSafetyOuts.Count());
                        pipPriorityParseOuts = Convert.ToDecimal(dataPipPriorityOuts.Count());
                        pspProActiveParseOuts = Convert.ToDecimal(dataPspProActiveOuts.Count());
                        pspAfterFailureParseOuts = Convert.ToDecimal(dataPspAfterFailureOuts.Count());
                    }



                    var countDataPipSafety = pipSafetyParse + pipSafetyParseOuts;
                    var countDataPipPriority = pipPriorityParse + pipPriorityParseOuts;
                    var countDataPspProActive = pspProActiveParse + pspProActiveParseOuts;
                    var countDataPspAfterFailure = pspAfterFailureParse + pspAfterFailureParseOuts;

                    var percentPipSafety = (pipSafetyParse != 0) ? (pipSafetyParse / countDataPipSafety) * 100 : 0;
                    var percentPipPriority = (pipPriorityParse != 0) ? (pipPriorityParse / countDataPipPriority) * 100 : 0;
                    var percentPspProActive = (pspProActiveParse != 0) ? (pspProActiveParse / countDataPspProActive) * 100 : 0;
                    var percentPspAfterFailure = (pspAfterFailureParse != 0) ? (pspAfterFailureParse / countDataPspAfterFailure) * 100 : 0;

                    var percentPipSafetyMathRound = Math.Round(percentPipSafety, 2);
                    var percentPipPriorityMathRound = Math.Round(percentPipPriority, 2);
                    var percentPspProActiveMathRound = Math.Round(percentPspProActive, 2);
                    var percentPspAfterFailureMathRound = Math.Round(percentPspAfterFailure, 2);


                    var listAveragePipSafetyCompAndOuts = new List<decimal>();
                    var listAveragePipPriorityCompAndOuts = new List<decimal>();
                    var listAveragePspProActiveCompAndOuts = new List<decimal>();
                    var listAveragePspAfterFailureCompAndOuts = new List<decimal>();

                    listAveragePipSafetyCompAndOuts.Add(pipSafetyParse);
                    listAveragePipSafetyCompAndOuts.Add(pipSafetyParseOuts);

                    listAveragePipPriorityCompAndOuts.Add(pipPriorityParse);
                    listAveragePipPriorityCompAndOuts.Add(pipPriorityParseOuts);

                    listAveragePspProActiveCompAndOuts.Add(pspProActiveParse);
                    listAveragePspProActiveCompAndOuts.Add(pspProActiveParseOuts);

                    listAveragePspAfterFailureCompAndOuts.Add(pspAfterFailureParse);
                    listAveragePspAfterFailureCompAndOuts.Add(pspAfterFailureParseOuts);

                    listCountAveragePipSafety.Add(percentPipSafetyMathRound);
                    listCountAveragePipPriority.Add(percentPipPriorityMathRound);

                    listCountAveragePspProActive.Add(percentPspProActiveMathRound);
                    listCountAveragePspAfterFailure.Add(percentPspAfterFailureMathRound);

                    listMonth.Add(monthName);

                    var list = new DataChartPSLCompletionSummary();
                    list.MonthName = listMonth;
                    list.RawDataPipSafetyCompAndOuts = listAveragePipSafetyCompAndOuts;
                    list.RawDataPipPriorityCompAndOuts = listAveragePipPriorityCompAndOuts;
                    list.RawDataPspProActiveCompAndOuts = listAveragePspProActiveCompAndOuts;
                    list.RawDataPspAfterFailureCompAndOuts = listAveragePspAfterFailureCompAndOuts;
                    list.DataPercentPipSafety = listCountAveragePipSafety;
                    list.DataPercentPipPriority = listCountAveragePipPriority;
                    list.DataPercentPspProActive = listCountAveragePspProActive;
                    list.DataPercentPspAfterFailure = listCountAveragePspAfterFailure;
                    listItem.Add(list);

                }
            }

            if (!string.IsNullOrWhiteSpace(dateFrom) && !string.IsNullOrWhiteSpace(dateEnd))
            {
                decimal pipSafetyParse = 0;
                decimal pipPriorityParse = 0;
                decimal pspProActiveParse = 0;
                decimal pspAfterFailureParse = 0;

                decimal pipSafetyParseOuts = 0;
                decimal pipPriorityParseOuts = 0;
                decimal pspProActiveParseOuts = 0;
                decimal pspAfterFailureParseOuts = 0;
                for (var i = monthFromTerm; i <= monthEndTerm; i++)
                {
                    var convertToDateTimeFrom = DateTime.ParseExact(dateFrom, "dd-MM-yyyy", null);
                    var convertToDateTimeEnd = DateTime.ParseExact(dateEnd, "dd-MM-yyyy", null);
                    var monthName = new DateTime(convertToDateTimeEnd.Year, i, 1).ToString("MMM");

                    #region Completed
                    //var dataPipSafety = (from item in _ctx.PSLMaster
                    //                     where item.Area != null && item.LetterDate.Value.Year == yearFromIssue && item.LetterDate.Value.Month == i && item.PSLType == "S" && item.Validation.Contains("Completed") && item.RepairDate == null
                    //                     select new
                    //                     {
                    //                         Area = item.Area,
                    //                         pipSafety = item.SapPSLStatus,
                    //                         TerminationDate = item.LetterDate,
                    //                         PSLType = item.PSLType,
                    //                         SapPSLStatus = item.Validation,
                    //                         RentStatus = item.RentStatus,
                    //                         HIDStatus = item.HIDStatus,
                    //                         Plant = item.Plant,
                    //                         SalesOffice = item.SalesOffice,
                    //                         Model = item.Model
                    //                     });

                    //var dataPipPriority = (from item in _ctx.PSLMaster
                    //                       where item.Area != null && item.LetterDate.Value.Year == yearFromIssue && item.LetterDate.Value.Month == i && item.PSLType == "P" && item.Validation.Contains("Completed") && item.RepairDate == null
                    //                       select new
                    //                       {
                    //                           Area = item.Area,
                    //                           pipPriority = item.SapPSLStatus,
                    //                           TerminationDate = item.LetterDate,
                    //                           PSLType = item.PSLType,
                    //                           SapPSLStatus = item.Validation,
                    //                           RentStatus = item.RentStatus,
                    //                           HIDStatus = item.HIDStatus,
                    //                           Plant = item.Plant,
                    //                           SalesOffice = item.SalesOffice,
                    //                           Model = item.Model
                    //                       });

                    var dataPspProActive = (from item in _ctx.PSLMaster
                                            where item.Area != null && item.TerminationDate.Value.Year == yearFromTerm && item.TerminationDate.Value.Month == i && item.PSLType == "C" && item.Validation.Contains("Completed") && item.RepairDate != null && item.PCR == ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.Validation,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                    var dataPspAfterFailure = (from item in _ctx.PSLMaster
                                               where item.Area != null && item.TerminationDate.Value.Year == yearFromTerm && item.TerminationDate.Value.Month == i && item.PSLType == "A" && item.Validation.Contains("Completed") && item.RepairDate != null && item.PCR == ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.Validation,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                    #endregion

                    #region Outstanding
                    //var dataPipSafetyOuts = (from item in _ctx.PSLMaster
                    //                         where item.Area != null && item.LetterDate.Value.Year == yearFromIssue && item.LetterDate.Value.Month == i && item.PSLType == "S" && item.Validation.Contains("Outstanding") && item.RepairDate == null
                    //                         select new
                    //                         {
                    //                             Area = item.Area,
                    //                             pipSafetyOuts = item.SapPSLStatus,
                    //                             TerminationDate = item.LetterDate,
                    //                             PSLType = item.PSLType,
                    //                             SapPSLStatus = item.Validation,
                    //                             RentStatus = item.RentStatus,
                    //                             HIDStatus = item.HIDStatus,
                    //                             Plant = item.Plant,
                    //                             SalesOffice = item.SalesOffice,
                    //                             Model = item.Model
                    //                         });

                    //var dataPipPriorityOuts = (from item in _ctx.PSLMaster
                    //                           where item.Area != null && item.LetterDate.Value.Year == yearFromIssue && item.LetterDate.Value.Month == i && item.PSLType == "P" && item.Validation.Contains("Outstanding") && item.RepairDate == null
                    //                           select new
                    //                           {
                    //                               Area = item.Area,
                    //                               pipPriorityOuts = item.SapPSLStatus,
                    //                               TerminationDate = item.LetterDate,
                    //                               PSLType = item.PSLType,
                    //                               SapPSLStatus = item.Validation,
                    //                               RentStatus = item.RentStatus,
                    //                               HIDStatus = item.HIDStatus,
                    //                               Plant = item.Plant,
                    //                               SalesOffice = item.SalesOffice,
                    //                               Model = item.Model
                    //                           });

                    var dataPspProActiveOuts = (from item in _ctx.PSLMaster
                                                where item.Area != null && item.TerminationDate.Value.Year == yearFromTerm && item.TerminationDate.Value.Month == i && item.PSLType == "C" && item.Validation == "Outstanding" && item.RepairDate != null && item.PCR == "" || item.Area != null && item.TerminationDate.Value.Year == yearFromTerm && item.TerminationDate.Value.Month == i && item.PSLType == "C" && item.Validation == "Completed" && item.RepairDate == null && item.PCR == ""
                                                select new
                                                {
                                                    
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.Validation,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                    var dataPspAfterFailureOuts = (from item in _ctx.PSLMaster
                                                   where item.Area != null && item.TerminationDate.Value.Year == yearFromTerm && item.TerminationDate.Value.Month == i && item.PSLType == "A" && item.Validation == "Outstanding" && item.RepairDate != null && item.PCR == "" || item.Area != null && item.TerminationDate.Value.Year == yearFromTerm && item.TerminationDate.Value.Month == i &&  item.PSLType == "A" && item.Validation == "Completed" && item.RepairDate == null && item.PCR == ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.Validation,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                    #endregion

                    if (hid == "on" && rental == "" && inventory == "")
                    {
                        #region Completed  
                        //dataPipSafety = (from item in dataPipSafety
                        //                 where item.HIDStatus != ""
                        //                 select new
                        //                 {
                        //                     Area = item.Area,
                        //                     pipSafety = item.pipSafety,
                        //                     TerminationDate = item.TerminationDate,
                        //                     PSLType = item.PSLType,
                        //                     SapPSLStatus = item.SapPSLStatus,
                        //                     RentStatus = item.RentStatus,
                        //                     HIDStatus = item.HIDStatus,
                        //                     Plant = item.Plant,
                        //                     SalesOffice = item.SalesOffice,
                        //                     Model = item.Model
                        //                 });

                        //dataPipPriority = (from item in dataPipPriority
                        //                   where item.HIDStatus != ""
                        //                   select new
                        //                   {
                        //                       Area = item.Area,
                        //                       pipPriority = item.SapPSLStatus,
                        //                       TerminationDate = item.TerminationDate,
                        //                       PSLType = item.PSLType,
                        //                       SapPSLStatus = item.SapPSLStatus,
                        //                       RentStatus = item.RentStatus,
                        //                       HIDStatus = item.HIDStatus,
                        //                       Plant = item.Plant,
                        //                       SalesOffice = item.SalesOffice,
                        //                       Model = item.Model
                        //                   });

                        dataPspProActive = (from item in dataPspProActive
                                            where item.HIDStatus != ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where item.HIDStatus != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        //dataPipSafetyOuts = (from item in dataPipSafetyOuts
                        //                     where item.HIDStatus != ""
                        //                     select new
                        //                     {
                        //                         Area = item.Area,
                        //                         pipSafetyOuts = item.SapPSLStatus,
                        //                         TerminationDate = item.TerminationDate,
                        //                         PSLType = item.PSLType,
                        //                         SapPSLStatus = item.SapPSLStatus,
                        //                         RentStatus = item.RentStatus,
                        //                         HIDStatus = item.HIDStatus,
                        //                         Plant = item.Plant,
                        //                         SalesOffice = item.SalesOffice,
                        //                         Model = item.Model
                        //                     });

                        //dataPipPriorityOuts = (from item in dataPipPriorityOuts
                        //                       where item.HIDStatus != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pipPriorityOuts = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where item.HIDStatus != ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where item.HIDStatus != ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (hid == "on" && rental == "on" && inventory == "")
                    {
                        #region Completed  
                        //dataPipSafety = (from item in dataPipSafety
                        //                 where item.HIDStatus != "" || item.RentStatus != ""
                        //                 select new
                        //                 {
                        //                     Area = item.Area,
                        //                     pipSafety = item.pipSafety,
                        //                     TerminationDate = item.TerminationDate,
                        //                     PSLType = item.PSLType,
                        //                     SapPSLStatus = item.SapPSLStatus,
                        //                     RentStatus = item.RentStatus,
                        //                     HIDStatus = item.HIDStatus,
                        //                     Plant = item.Plant,
                        //                     SalesOffice = item.SalesOffice,
                        //                     Model = item.Model
                        //                 });

                        //dataPipPriority = (from item in dataPipPriority
                        //                   where item.HIDStatus != "" || item.RentStatus != ""
                        //                   select new
                        //                   {
                        //                       Area = item.Area,
                        //                       pipPriority = item.SapPSLStatus,
                        //                       TerminationDate = item.TerminationDate,
                        //                       PSLType = item.PSLType,
                        //                       SapPSLStatus = item.SapPSLStatus,
                        //                       RentStatus = item.RentStatus,
                        //                       HIDStatus = item.HIDStatus,
                        //                       Plant = item.Plant,
                        //                       SalesOffice = item.SalesOffice,
                        //                       Model = item.Model
                        //                   });

                        dataPspProActive = (from item in dataPspProActive
                                            where item.HIDStatus != "" || item.RentStatus != ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where item.HIDStatus != "" || item.RentStatus != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        //dataPipSafetyOuts = (from item in dataPipSafetyOuts
                        //                     where item.HIDStatus != "" || item.RentStatus != ""
                        //                     select new
                        //                     {
                        //                         Area = item.Area,
                        //                         pipSafetyOuts = item.SapPSLStatus,
                        //                         TerminationDate = item.TerminationDate,
                        //                         PSLType = item.PSLType,
                        //                         SapPSLStatus = item.SapPSLStatus,
                        //                         RentStatus = item.RentStatus,
                        //                         HIDStatus = item.HIDStatus,
                        //                         Plant = item.Plant,
                        //                         SalesOffice = item.SalesOffice,
                        //                         Model = item.Model
                        //                     });

                        //dataPipPriorityOuts = (from item in dataPipPriorityOuts
                        //                       where item.HIDStatus != "" || item.RentStatus != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pipPriorityOuts = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where item.HIDStatus != "" || item.RentStatus != ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where item.HIDStatus != "" || item.RentStatus != ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (hid == "on" && rental == "" && inventory == "on")
                    {
                        #region Completed  
                        //dataPipSafety = (from item in dataPipSafety
                        //                 where item.HIDStatus != "" || item.Plant != ""
                        //                 select new
                        //                 {
                        //                     Area = item.Area,
                        //                     pipSafety = item.pipSafety,
                        //                     TerminationDate = item.TerminationDate,
                        //                     PSLType = item.PSLType,
                        //                     SapPSLStatus = item.SapPSLStatus,
                        //                     RentStatus = item.RentStatus,
                        //                     HIDStatus = item.HIDStatus,
                        //                     Plant = item.Plant,
                        //                     SalesOffice = item.SalesOffice,
                        //                     Model = item.Model
                        //                 });

                        //dataPipPriority = (from item in dataPipPriority
                        //                   where item.HIDStatus != "" || item.Plant != ""
                        //                   select new
                        //                   {
                        //                       Area = item.Area,
                        //                       pipPriority = item.SapPSLStatus,
                        //                       TerminationDate = item.TerminationDate,
                        //                       PSLType = item.PSLType,
                        //                       SapPSLStatus = item.SapPSLStatus,
                        //                       RentStatus = item.RentStatus,
                        //                       HIDStatus = item.HIDStatus,
                        //                       Plant = item.Plant,
                        //                       SalesOffice = item.SalesOffice,
                        //                       Model = item.Model
                        //                   });

                        dataPspProActive = (from item in dataPspProActive
                                            where item.HIDStatus != "" || item.Plant != ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where item.HIDStatus != "" || item.Plant != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        //dataPipSafetyOuts = (from item in dataPipSafetyOuts
                        //                     where item.HIDStatus != "" || item.Plant != ""
                        //                     select new
                        //                     {
                        //                         Area = item.Area,
                        //                         pipSafetyOuts = item.SapPSLStatus,
                        //                         TerminationDate = item.TerminationDate,
                        //                         PSLType = item.PSLType,
                        //                         SapPSLStatus = item.SapPSLStatus,
                        //                         RentStatus = item.RentStatus,
                        //                         HIDStatus = item.HIDStatus,
                        //                         Plant = item.Plant,
                        //                         SalesOffice = item.SalesOffice,
                        //                         Model = item.Model
                        //                     });

                        //dataPipPriorityOuts = (from item in dataPipPriorityOuts
                        //                       where item.HIDStatus != "" || item.Plant != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pipPriorityOuts = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where item.HIDStatus != "" || item.Plant != ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where item.HIDStatus != "" || item.Plant != ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (hid == "" && rental == "on" && inventory == "")
                    {
                        #region Completed  
                        //dataPipSafety = (from item in dataPipSafety
                        //                 where item.RentStatus != ""
                        //                 select new
                        //                 {
                        //                     Area = item.Area,
                        //                     pipSafety = item.pipSafety,
                        //                     TerminationDate = item.TerminationDate,
                        //                     PSLType = item.PSLType,
                        //                     SapPSLStatus = item.SapPSLStatus,
                        //                     RentStatus = item.RentStatus,
                        //                     HIDStatus = item.HIDStatus,
                        //                     Plant = item.Plant,
                        //                     SalesOffice = item.SalesOffice,
                        //                     Model = item.Model
                        //                 });

                        //dataPipPriority = (from item in dataPipPriority
                        //                   where item.RentStatus != ""
                        //                   select new
                        //                   {
                        //                       Area = item.Area,
                        //                       pipPriority = item.SapPSLStatus,
                        //                       TerminationDate = item.TerminationDate,
                        //                       PSLType = item.PSLType,
                        //                       SapPSLStatus = item.SapPSLStatus,
                        //                       RentStatus = item.RentStatus,
                        //                       HIDStatus = item.HIDStatus,
                        //                       Plant = item.Plant,
                        //                       SalesOffice = item.SalesOffice,
                        //                       Model = item.Model
                        //                   });

                        dataPspProActive = (from item in dataPspProActive
                                            where item.RentStatus != ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where item.RentStatus != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        //dataPipSafetyOuts = (from item in dataPipSafetyOuts
                        //                     where item.RentStatus != ""
                        //                     select new
                        //                     {
                        //                         Area = item.Area,
                        //                         pipSafetyOuts = item.SapPSLStatus,
                        //                         TerminationDate = item.TerminationDate,
                        //                         PSLType = item.PSLType,
                        //                         SapPSLStatus = item.SapPSLStatus,
                        //                         RentStatus = item.RentStatus,
                        //                         HIDStatus = item.HIDStatus,
                        //                         Plant = item.Plant,
                        //                         SalesOffice = item.SalesOffice,
                        //                         Model = item.Model
                        //                     });

                        //dataPipPriorityOuts = (from item in dataPipPriorityOuts
                        //                       where item.RentStatus != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pipPriorityOuts = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where item.RentStatus != ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where item.RentStatus != ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (hid == "" && rental == "on" && inventory == "on")
                    {
                        #region Completed  
                        //dataPipSafety = (from item in dataPipSafety
                        //                 where item.RentStatus != "" || item.Plant != ""
                        //                 select new
                        //                 {
                        //                     Area = item.Area,
                        //                     pipSafety = item.pipSafety,
                        //                     TerminationDate = item.TerminationDate,
                        //                     PSLType = item.PSLType,
                        //                     SapPSLStatus = item.SapPSLStatus,
                        //                     RentStatus = item.RentStatus,
                        //                     HIDStatus = item.HIDStatus,
                        //                     Plant = item.Plant,
                        //                     SalesOffice = item.SalesOffice,
                        //                     Model = item.Model
                        //                 });

                        //dataPipPriority = (from item in dataPipPriority
                        //                   where item.RentStatus != "" || item.Plant != ""
                        //                   select new
                        //                   {
                        //                       Area = item.Area,
                        //                       pipPriority = item.SapPSLStatus,
                        //                       TerminationDate = item.TerminationDate,
                        //                       PSLType = item.PSLType,
                        //                       SapPSLStatus = item.SapPSLStatus,
                        //                       RentStatus = item.RentStatus,
                        //                       HIDStatus = item.HIDStatus,
                        //                       Plant = item.Plant,
                        //                       SalesOffice = item.SalesOffice,
                        //                       Model = item.Model
                        //                   });

                        dataPspProActive = (from item in dataPspProActive
                                            where item.RentStatus != "" || item.Plant != ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where item.RentStatus != "" || item.Plant != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        //dataPipSafetyOuts = (from item in dataPipSafetyOuts
                        //                     where item.RentStatus != "" || item.Plant != ""
                        //                     select new
                        //                     {
                        //                         Area = item.Area,
                        //                         pipSafetyOuts = item.SapPSLStatus,
                        //                         TerminationDate = item.TerminationDate,
                        //                         PSLType = item.PSLType,
                        //                         SapPSLStatus = item.SapPSLStatus,
                        //                         RentStatus = item.RentStatus,
                        //                         HIDStatus = item.HIDStatus,
                        //                         Plant = item.Plant,
                        //                         SalesOffice = item.SalesOffice,
                        //                         Model = item.Model
                        //                     });

                        //dataPipPriorityOuts = (from item in dataPipPriorityOuts
                        //                       where item.RentStatus != "" || item.Plant != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pipPriorityOuts = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where item.RentStatus != "" || item.Plant != ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where item.RentStatus != "" || item.Plant != ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (hid == "" && rental == "" && inventory == "on")
                    {
                        #region Completed  
                        //dataPipSafety = (from item in dataPipSafety
                        //                 where item.Plant != ""
                        //                 select new
                        //                 {
                        //                     Area = item.Area,
                        //                     pipSafety = item.pipSafety,
                        //                     TerminationDate = item.TerminationDate,
                        //                     PSLType = item.PSLType,
                        //                     SapPSLStatus = item.SapPSLStatus,
                        //                     RentStatus = item.RentStatus,
                        //                     HIDStatus = item.HIDStatus,
                        //                     Plant = item.Plant,
                        //                     SalesOffice = item.SalesOffice,
                        //                     Model = item.Model
                        //                 });

                        //dataPipPriority = (from item in dataPipPriority
                        //                   where item.Plant != ""
                        //                   select new
                        //                   {
                        //                       Area = item.Area,
                        //                       pipPriority = item.SapPSLStatus,
                        //                       TerminationDate = item.TerminationDate,
                        //                       PSLType = item.PSLType,
                        //                       SapPSLStatus = item.SapPSLStatus,
                        //                       RentStatus = item.RentStatus,
                        //                       HIDStatus = item.HIDStatus,
                        //                       Plant = item.Plant,
                        //                       SalesOffice = item.SalesOffice,
                        //                       Model = item.Model
                        //                   });

                        dataPspProActive = (from item in dataPspProActive
                                            where item.Plant != ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where item.Plant != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        //dataPipSafetyOuts = (from item in dataPipSafetyOuts
                        //                     where item.Plant != ""
                        //                     select new
                        //                     {
                        //                         Area = item.Area,
                        //                         pipSafetyOuts = item.SapPSLStatus,
                        //                         TerminationDate = item.TerminationDate,
                        //                         PSLType = item.PSLType,
                        //                         SapPSLStatus = item.SapPSLStatus,
                        //                         RentStatus = item.RentStatus,
                        //                         HIDStatus = item.HIDStatus,
                        //                         Plant = item.Plant,
                        //                         SalesOffice = item.SalesOffice,
                        //                         Model = item.Model
                        //                     });

                        //dataPipPriorityOuts = (from item in dataPipPriorityOuts
                        //                       where item.Plant != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pipPriorityOuts = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where item.Plant != ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where item.Plant != ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (hid == "on" && rental == "on" && inventory == "on")
                    {
                        #region Completed  
                        //dataPipSafety = (from item in dataPipSafety
                        //                 where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                        //                 select new
                        //                 {
                        //                     Area = item.Area,
                        //                     pipSafety = item.pipSafety,
                        //                     TerminationDate = item.TerminationDate,
                        //                     PSLType = item.PSLType,
                        //                     SapPSLStatus = item.SapPSLStatus,
                        //                     RentStatus = item.RentStatus,
                        //                     HIDStatus = item.HIDStatus,
                        //                     Plant = item.Plant,
                        //                     SalesOffice = item.SalesOffice,
                        //                     Model = item.Model
                        //                 });

                        //dataPipPriority = (from item in dataPipPriority
                        //                   where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                        //                   select new
                        //                   {
                        //                       Area = item.Area,
                        //                       pipPriority = item.SapPSLStatus,
                        //                       TerminationDate = item.TerminationDate,
                        //                       PSLType = item.PSLType,
                        //                       SapPSLStatus = item.SapPSLStatus,
                        //                       RentStatus = item.RentStatus,
                        //                       HIDStatus = item.HIDStatus,
                        //                       Plant = item.Plant,
                        //                       SalesOffice = item.SalesOffice,
                        //                       Model = item.Model
                        //                   });

                        dataPspProActive = (from item in dataPspProActive
                                            where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        //dataPipSafetyOuts = (from item in dataPipSafetyOuts
                        //                     where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                        //                     select new
                        //                     {
                        //                         Area = item.Area,
                        //                         pipSafetyOuts = item.SapPSLStatus,
                        //                         TerminationDate = item.TerminationDate,
                        //                         PSLType = item.PSLType,
                        //                         SapPSLStatus = item.SapPSLStatus,
                        //                         RentStatus = item.RentStatus,
                        //                         HIDStatus = item.HIDStatus,
                        //                         Plant = item.Plant,
                        //                         SalesOffice = item.SalesOffice,
                        //                         Model = item.Model
                        //                     });

                        //dataPipPriorityOuts = (from item in dataPipPriorityOuts
                        //                       where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pipPriorityOuts = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (others == "on" && hid == "" && rental == "" && inventory == "")
                    {
                        #region Completed  
                        //dataPipSafety = (from item in dataPipSafety
                        //                 where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                        //                 select new
                        //                 {
                        //                     Area = item.Area,
                        //                     pipSafety = item.pipSafety,
                        //                     TerminationDate = item.TerminationDate,
                        //                     PSLType = item.PSLType,
                        //                     SapPSLStatus = item.SapPSLStatus,
                        //                     RentStatus = item.RentStatus,
                        //                     HIDStatus = item.HIDStatus,
                        //                     Plant = item.Plant,
                        //                     SalesOffice = item.SalesOffice,
                        //                     Model = item.Model
                        //                 });

                        //dataPipPriority = (from item in dataPipPriority
                        //                   where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                        //                   select new
                        //                   {
                        //                       Area = item.Area,
                        //                       pipPriority = item.SapPSLStatus,
                        //                       TerminationDate = item.TerminationDate,
                        //                       PSLType = item.PSLType,
                        //                       SapPSLStatus = item.SapPSLStatus,
                        //                       RentStatus = item.RentStatus,
                        //                       HIDStatus = item.HIDStatus,
                        //                       Plant = item.Plant,
                        //                       SalesOffice = item.SalesOffice,
                        //                       Model = item.Model
                        //                   });

                        dataPspProActive = (from item in dataPspProActive
                                            where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        //dataPipSafetyOuts = (from item in dataPipSafetyOuts
                        //                     where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                        //                     select new
                        //                     {
                        //                         Area = item.Area,
                        //                         pipSafetyOuts = item.SapPSLStatus,
                        //                         TerminationDate = item.TerminationDate,
                        //                         PSLType = item.PSLType,
                        //                         SapPSLStatus = item.SapPSLStatus,
                        //                         RentStatus = item.RentStatus,
                        //                         HIDStatus = item.HIDStatus,
                        //                         Plant = item.Plant,
                        //                         SalesOffice = item.SalesOffice,
                        //                         Model = item.Model
                        //                     });

                        //dataPipPriorityOuts = (from item in dataPipPriorityOuts
                        //                       where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pipPriorityOuts = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (area.Count() > 0 && area != null)
                    {
                        #region Completed  
                        //dataPipSafety = (from item in dataPipSafety
                        //                 where area.Contains(item.Area)
                        //                 select new
                        //                 {
                        //                     Area = item.Area,
                        //                     pipSafety = item.pipSafety,
                        //                     TerminationDate = item.TerminationDate,
                        //                     PSLType = item.PSLType,
                        //                     SapPSLStatus = item.SapPSLStatus,
                        //                     RentStatus = item.RentStatus,
                        //                     HIDStatus = item.HIDStatus,
                        //                     Plant = item.Plant,
                        //                     SalesOffice = item.SalesOffice,
                        //                     Model = item.Model
                        //                 });

                        //dataPipPriority = (from item in dataPipPriority
                        //                   where area.Contains(item.Area)
                        //                   select new
                        //                   {
                        //                       Area = item.Area,
                        //                       pipPriority = item.SapPSLStatus,
                        //                       TerminationDate = item.TerminationDate,
                        //                       PSLType = item.PSLType,
                        //                       SapPSLStatus = item.SapPSLStatus,
                        //                       RentStatus = item.RentStatus,
                        //                       HIDStatus = item.HIDStatus,
                        //                       Plant = item.Plant,
                        //                       SalesOffice = item.SalesOffice,
                        //                       Model = item.Model
                        //                   });

                        dataPspProActive = (from item in dataPspProActive
                                            where area.Contains(item.Area)
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where area.Contains(item.Area)
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        //dataPipSafetyOuts = (from item in dataPipSafetyOuts
                        //                     where area.Contains(item.Area)
                        //                     select new
                        //                     {
                        //                         Area = item.Area,
                        //                         pipSafetyOuts = item.SapPSLStatus,
                        //                         TerminationDate = item.TerminationDate,
                        //                         PSLType = item.PSLType,
                        //                         SapPSLStatus = item.SapPSLStatus,
                        //                         RentStatus = item.RentStatus,
                        //                         HIDStatus = item.HIDStatus,
                        //                         Plant = item.Plant,
                        //                         SalesOffice = item.SalesOffice,
                        //                         Model = item.Model
                        //                     });

                        //dataPipPriorityOuts = (from item in dataPipPriorityOuts
                        //                       where area.Contains(item.Area)
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pipPriorityOuts = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where area.Contains(item.Area)
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where area.Contains(item.Area)
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (salesOffice.Count() > 0 && salesOffice != null)
                    {
                        #region Completed  
                        //dataPipSafety = (from item in dataPipSafety
                        //                 where salesOffice.Contains(item.SalesOffice)
                        //                 select new
                        //                 {
                        //                     Area = item.Area,
                        //                     pipSafety = item.pipSafety,
                        //                     TerminationDate = item.TerminationDate,
                        //                     PSLType = item.PSLType,
                        //                     SapPSLStatus = item.SapPSLStatus,
                        //                     RentStatus = item.RentStatus,
                        //                     HIDStatus = item.HIDStatus,
                        //                     Plant = item.Plant,
                        //                     SalesOffice = item.SalesOffice,
                        //                     Model = item.Model
                        //                 });

                        //dataPipPriority = (from item in dataPipPriority
                        //                   where salesOffice.Contains(item.SalesOffice)
                        //                   select new
                        //                   {
                        //                       Area = item.Area,
                        //                       pipPriority = item.SapPSLStatus,
                        //                       TerminationDate = item.TerminationDate,
                        //                       PSLType = item.PSLType,
                        //                       SapPSLStatus = item.SapPSLStatus,
                        //                       RentStatus = item.RentStatus,
                        //                       HIDStatus = item.HIDStatus,
                        //                       Plant = item.Plant,
                        //                       SalesOffice = item.SalesOffice,
                        //                       Model = item.Model
                        //                   });

                        dataPspProActive = (from item in dataPspProActive
                                            where salesOffice.Contains(item.SalesOffice)
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where salesOffice.Contains(item.SalesOffice)
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        //dataPipSafetyOuts = (from item in dataPipSafetyOuts
                        //                     where salesOffice.Contains(item.SalesOffice)
                        //                     select new
                        //                     {
                        //                         Area = item.Area,
                        //                         pipSafetyOuts = item.SapPSLStatus,
                        //                         TerminationDate = item.TerminationDate,
                        //                         PSLType = item.PSLType,
                        //                         SapPSLStatus = item.SapPSLStatus,
                        //                         RentStatus = item.RentStatus,
                        //                         HIDStatus = item.HIDStatus,
                        //                         Plant = item.Plant,
                        //                         SalesOffice = item.SalesOffice,
                        //                         Model = item.Model
                        //                     });

                        //dataPipPriorityOuts = (from item in dataPipPriorityOuts
                        //                       where salesOffice.Contains(item.SalesOffice)
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pipPriorityOuts = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where salesOffice.Contains(item.SalesOffice)
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where salesOffice.Contains(item.SalesOffice)
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (model.Count() > 0 && model != null)
                    {
                        #region Completed  
                        //dataPipSafety = (from item in dataPipSafety
                        //                 where model.Contains(item.Model)
                        //                 select new
                        //                 {
                        //                     Area = item.Area,
                        //                     pipSafety = item.pipSafety,
                        //                     TerminationDate = item.TerminationDate,
                        //                     PSLType = item.PSLType,
                        //                     SapPSLStatus = item.SapPSLStatus,
                        //                     RentStatus = item.RentStatus,
                        //                     HIDStatus = item.HIDStatus,
                        //                     Plant = item.Plant,
                        //                     SalesOffice = item.SalesOffice,
                        //                     Model = item.Model
                        //                 });

                        //dataPipPriority = (from item in dataPipPriority
                        //                   where model.Contains(item.Model)
                        //                   select new
                        //                   {
                        //                       Area = item.Area,
                        //                       pipPriority = item.SapPSLStatus,
                        //                       TerminationDate = item.TerminationDate,
                        //                       PSLType = item.PSLType,
                        //                       SapPSLStatus = item.SapPSLStatus,
                        //                       RentStatus = item.RentStatus,
                        //                       HIDStatus = item.HIDStatus,
                        //                       Plant = item.Plant,
                        //                       SalesOffice = item.SalesOffice,
                        //                       Model = item.Model
                        //                   });

                        dataPspProActive = (from item in dataPspProActive
                                            where model.Contains(item.Model)
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where model.Contains(item.Model)
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        //dataPipSafetyOuts = (from item in dataPipSafetyOuts
                        //                     where model.Contains(item.Model)
                        //                     select new
                        //                     {
                        //                         Area = item.Area,
                        //                         pipSafetyOuts = item.SapPSLStatus,
                        //                         TerminationDate = item.TerminationDate,
                        //                         PSLType = item.PSLType,
                        //                         SapPSLStatus = item.SapPSLStatus,
                        //                         RentStatus = item.RentStatus,
                        //                         HIDStatus = item.HIDStatus,
                        //                         Plant = item.Plant,
                        //                         SalesOffice = item.SalesOffice,
                        //                         Model = item.Model
                        //                     });

                        //dataPipPriorityOuts = (from item in dataPipPriorityOuts
                        //                       where model.Contains(item.Model)
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pipPriorityOuts = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where model.Contains(item.Model)
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where model.Contains(item.Model)
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (psltype.Count() > 0)
                    {
                        foreach (var item in psltype)
                        {
                            //if (item == "S")
                            //{
                            //    pipSafetyParse = Convert.ToDecimal(dataPipSafety.Count());
                            //    pipSafetyParseOuts = Convert.ToDecimal(dataPipSafetyOuts.Count());
                            //}
                            //if (item == "P")
                            //{
                            //    pipPriorityParse = Convert.ToDecimal(dataPipPriority.Count());
                            //    pipPriorityParseOuts = Convert.ToDecimal(dataPipPriorityOuts.Count());
                            //}
                            if (item == "A")
                            {
                                pspAfterFailureParse = Convert.ToDecimal(dataPspAfterFailure.Count());
                                pspAfterFailureParseOuts = Convert.ToDecimal(dataPspAfterFailureOuts.Count());
                            }
                            if (item == "C")
                            {
                                pspProActiveParse = Convert.ToDecimal(dataPspProActive.Count());
                                pspProActiveParseOuts = Convert.ToDecimal(dataPspProActiveOuts.Count());
                            }
                        }
                    }
                    else
                    {
                        pipSafetyParse = Convert.ToDecimal(0);
                        pipPriorityParse = Convert.ToDecimal(0);
                        pspProActiveParse = Convert.ToDecimal(dataPspProActive.Count());
                        pspAfterFailureParse = Convert.ToDecimal(dataPspAfterFailure.Count());

                        pipSafetyParseOuts = Convert.ToDecimal(0);
                        pipPriorityParseOuts = Convert.ToDecimal(0);
                        pspProActiveParseOuts = Convert.ToDecimal(dataPspProActiveOuts.Count());
                        pspAfterFailureParseOuts = Convert.ToDecimal(dataPspAfterFailureOuts.Count());
                    }



                    var countDataPipSafety = pipSafetyParse + pipSafetyParseOuts;
                    var countDataPipPriority = pipPriorityParse + pipPriorityParseOuts;
                    var countDataPspProActive = pspProActiveParse + pspProActiveParseOuts;
                    var countDataPspAfterFailure = pspAfterFailureParse + pspAfterFailureParseOuts;

                    var percentPipSafety = (pipSafetyParse != 0) ? (pipSafetyParse / countDataPipSafety) * 100 : 0;
                    var percentPipPriority = (pipPriorityParse != 0) ? (pipPriorityParse / countDataPipPriority) * 100 : 0;
                    var percentPspProActive = (pspProActiveParse != 0) ? (pspProActiveParse / countDataPspProActive) * 100 : 0;
                    var percentPspAfterFailure = (pspAfterFailureParse != 0) ? (pspAfterFailureParse / countDataPspAfterFailure) * 100 : 0;

                    var percentPipSafetyMathRound = Math.Round(percentPipSafety, 2);
                    var percentPipPriorityMathRound = Math.Round(percentPipPriority, 2);
                    var percentPspProActiveMathRound = Math.Round(percentPspProActive, 2);
                    var percentPspAfterFailureMathRound = Math.Round(percentPspAfterFailure, 2);


                    var listAveragePipSafetyCompAndOuts = new List<decimal>();
                    var listAveragePipPriorityCompAndOuts = new List<decimal>();
                    var listAveragePspProActiveCompAndOuts = new List<decimal>();
                    var listAveragePspAfterFailureCompAndOuts = new List<decimal>();

                    listAveragePipSafetyCompAndOuts.Add(pipSafetyParse);
                    listAveragePipSafetyCompAndOuts.Add(pipSafetyParseOuts);

                    listAveragePipPriorityCompAndOuts.Add(pipPriorityParse);
                    listAveragePipPriorityCompAndOuts.Add(pipPriorityParseOuts);

                    listAveragePspProActiveCompAndOuts.Add(pspProActiveParse);
                    listAveragePspProActiveCompAndOuts.Add(pspProActiveParseOuts);

                    listAveragePspAfterFailureCompAndOuts.Add(pspAfterFailureParse);
                    listAveragePspAfterFailureCompAndOuts.Add(pspAfterFailureParseOuts);

                    listCountAveragePipSafety.Add(percentPipSafetyMathRound);
                    listCountAveragePipPriority.Add(percentPipPriorityMathRound);

                    listCountAveragePspProActive.Add(percentPspProActiveMathRound);
                    listCountAveragePspAfterFailure.Add(percentPspAfterFailureMathRound);

                    listMonth.Add(monthName);

                    var list = new DataChartPSLCompletionSummary();
                    list.MonthName = listMonth;
                    list.RawDataPipSafetyCompAndOuts = listAveragePipSafetyCompAndOuts;
                    list.RawDataPipPriorityCompAndOuts = listAveragePipPriorityCompAndOuts;
                    list.RawDataPspProActiveCompAndOuts = listAveragePspProActiveCompAndOuts;
                    list.RawDataPspAfterFailureCompAndOuts = listAveragePspAfterFailureCompAndOuts;
                    list.DataPercentPipSafety = listCountAveragePipSafety;
                    list.DataPercentPipPriority = listCountAveragePipPriority;
                    list.DataPercentPspProActive = listCountAveragePspProActive;
                    list.DataPercentPspAfterFailure = listCountAveragePspAfterFailure;
                    listItem.Add(list);

                }
            }

            if (!string.IsNullOrWhiteSpace(dateFrom) && string.IsNullOrWhiteSpace(dateEnd))
            {
                decimal pipSafetyParse = 0;
                decimal pipPriorityParse = 0;
                decimal pspProActiveParse = 0;
                decimal pspAfterFailureParse = 0;

                decimal pipSafetyParseOuts = 0;
                decimal pipPriorityParseOuts = 0;
                decimal pspProActiveParseOuts = 0;
                decimal pspAfterFailureParseOuts = 0;
                monthEndTerm = monthFromTerm;
                for (var i = monthFromTerm; i <= monthEndTerm; i++)
                {
                    var convertToDateTimeFrom = DateTime.ParseExact(dateFrom, "dd-MM-yyyy", null);
                    var monthName = new DateTime(convertToDateTimeFrom.Year, i, 1).ToString("MMM");

                    #region Completed
                    //var dataPipSafety = (from item in _ctx.PSLMaster
                    //                     where item.Area != null && item.LetterDate.Value.Year == yearFromIssue && item.LetterDate.Value.Month == i && item.PSLType == "S" && item.Validation.Contains("Completed") && item.RepairDate == null
                    //                     select new
                    //                     {
                    //                         Area = item.Area,
                    //                         pipSafety = item.SapPSLStatus,
                    //                         TerminationDate = item.LetterDate,
                    //                         PSLType = item.PSLType,
                    //                         SapPSLStatus = item.Validation,
                    //                         RentStatus = item.RentStatus,
                    //                         HIDStatus = item.HIDStatus,
                    //                         Plant = item.Plant,
                    //                         SalesOffice = item.SalesOffice,
                    //                         Model = item.Model
                    //                     });

                    //var dataPipPriority = (from item in _ctx.PSLMaster
                    //                       where item.Area != null && item.LetterDate.Value.Year == yearFromIssue && item.LetterDate.Value.Month == i && item.PSLType == "P" && item.Validation.Contains("Completed") && item.RepairDate == null
                    //                       select new
                    //                       {
                    //                           Area = item.Area,
                    //                           pipPriority = item.SapPSLStatus,
                    //                           TerminationDate = item.LetterDate,
                    //                           PSLType = item.PSLType,
                    //                           SapPSLStatus = item.Validation,
                    //                           RentStatus = item.RentStatus,
                    //                           HIDStatus = item.HIDStatus,
                    //                           Plant = item.Plant,
                    //                           SalesOffice = item.SalesOffice,
                    //                           Model = item.Model
                    //                       });

                    var dataPspProActive = (from item in _ctx.PSLMaster
                                            where item.Area != null && item.TerminationDate.Value.Year == yearFromTerm && item.TerminationDate.Value.Month == i && item.PSLType == "C" && item.Validation.Contains("Completed") && item.RepairDate != null && item.PCR == ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.Validation,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                    var dataPspAfterFailure = (from item in _ctx.PSLMaster
                                               where item.Area != null && item.TerminationDate.Value.Year == yearFromTerm && item.TerminationDate.Value.Month == i && item.PSLType == "A" && item.Validation.Contains("Completed") && item.RepairDate != null && item.PCR == ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.Validation,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                    #endregion

                    #region Outstanding
                    //var dataPipSafetyOuts = (from item in _ctx.PSLMaster
                    //                         where item.Area != null && item.LetterDate.Value.Year == yearFromIssue && item.LetterDate.Value.Month == i && item.PSLType == "S" && item.Validation.Contains("Outstanding") && item.RepairDate == null
                    //                         select new
                    //                         {
                    //                             Area = item.Area,
                    //                             pipSafetyOuts = item.SapPSLStatus,
                    //                             TerminationDate = item.LetterDate,
                    //                             PSLType = item.PSLType,
                    //                             SapPSLStatus = item.Validation,
                    //                             RentStatus = item.RentStatus,
                    //                             HIDStatus = item.HIDStatus,
                    //                             Plant = item.Plant,
                    //                             SalesOffice = item.SalesOffice,
                    //                             Model = item.Model
                    //                         });

                    //var dataPipPriorityOuts = (from item in _ctx.PSLMaster
                    //                           where item.Area != null && item.LetterDate.Value.Year == yearFromIssue && item.LetterDate.Value.Month == i && item.PSLType == "P" && item.Validation.Contains("Outstanding") && item.RepairDate == null
                    //                           select new
                    //                           {
                    //                               Area = item.Area,
                    //                               pipPriorityOuts = item.SapPSLStatus,
                    //                               TerminationDate = item.LetterDate,
                    //                               PSLType = item.PSLType,
                    //                               SapPSLStatus = item.Validation,
                    //                               RentStatus = item.RentStatus,
                    //                               HIDStatus = item.HIDStatus,
                    //                               Plant = item.Plant,
                    //                               SalesOffice = item.SalesOffice,
                    //                               Model = item.Model
                    //                           });

                    var dataPspProActiveOuts = (from item in _ctx.PSLMaster
                                                where item.Area != null && item.TerminationDate.Value.Year == yearFromTerm && item.TerminationDate.Value.Month == i && item.PSLType == "C" && item.Validation == "Outstanding" && item.RepairDate != null && item.PCR == "" || item.Area != null && item.TerminationDate.Value.Year == yearFromTerm && item.TerminationDate.Value.Month == i && item.PSLType == "C" && item.Validation == "Completed" && item.RepairDate == null && item.PCR == ""
                                                select new
                                                {
                                                    
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.Validation,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                    var dataPspAfterFailureOuts = (from item in _ctx.PSLMaster
                                                   where item.Area != null && item.TerminationDate.Value.Year == yearFromTerm && item.TerminationDate.Value.Month == i && item.PSLType == "A" && item.Validation == "Outstanding" && item.RepairDate != null && item.PCR == "" || item.Area != null && item.TerminationDate.Value.Year == yearFromTerm && item.TerminationDate.Value.Month == i && item.PSLType == "A" && item.Validation == "Completed" && item.RepairDate == null && item.PCR == ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.Validation,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                    #endregion

                    if (hid == "on" && rental == "" && inventory == "")
                    {
                        #region Completed  
                        //dataPipSafety = (from item in dataPipSafety
                        //                 where item.HIDStatus != ""
                        //                 select new
                        //                 {
                        //                     Area = item.Area,
                        //                     pipSafety = item.pipSafety,
                        //                     TerminationDate = item.TerminationDate,
                        //                     PSLType = item.PSLType,
                        //                     SapPSLStatus = item.SapPSLStatus,
                        //                     RentStatus = item.RentStatus,
                        //                     HIDStatus = item.HIDStatus,
                        //                     Plant = item.Plant,
                        //                     SalesOffice = item.SalesOffice,
                        //                     Model = item.Model
                        //                 });

                        //dataPipPriority = (from item in dataPipPriority
                        //                   where item.HIDStatus != ""
                        //                   select new
                        //                   {
                        //                       Area = item.Area,
                        //                       pipPriority = item.SapPSLStatus,
                        //                       TerminationDate = item.TerminationDate,
                        //                       PSLType = item.PSLType,
                        //                       SapPSLStatus = item.SapPSLStatus,
                        //                       RentStatus = item.RentStatus,
                        //                       HIDStatus = item.HIDStatus,
                        //                       Plant = item.Plant,
                        //                       SalesOffice = item.SalesOffice,
                        //                       Model = item.Model
                        //                   });

                        dataPspProActive = (from item in dataPspProActive
                                            where item.HIDStatus != ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where item.HIDStatus != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        //dataPipSafetyOuts = (from item in dataPipSafetyOuts
                        //                     where item.HIDStatus != ""
                        //                     select new
                        //                     {
                        //                         Area = item.Area,
                        //                         pipSafetyOuts = item.SapPSLStatus,
                        //                         TerminationDate = item.TerminationDate,
                        //                         PSLType = item.PSLType,
                        //                         SapPSLStatus = item.SapPSLStatus,
                        //                         RentStatus = item.RentStatus,
                        //                         HIDStatus = item.HIDStatus,
                        //                         Plant = item.Plant,
                        //                         SalesOffice = item.SalesOffice,
                        //                         Model = item.Model
                        //                     });

                        //dataPipPriorityOuts = (from item in dataPipPriorityOuts
                        //                       where item.HIDStatus != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pipPriorityOuts = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where item.HIDStatus != ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where item.HIDStatus != ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (hid == "on" && rental == "on" && inventory == "")
                    {
                        #region Completed  
                        //dataPipSafety = (from item in dataPipSafety
                        //                 where item.HIDStatus != "" || item.RentStatus != ""
                        //                 select new
                        //                 {
                        //                     Area = item.Area,
                        //                     pipSafety = item.pipSafety,
                        //                     TerminationDate = item.TerminationDate,
                        //                     PSLType = item.PSLType,
                        //                     SapPSLStatus = item.SapPSLStatus,
                        //                     RentStatus = item.RentStatus,
                        //                     HIDStatus = item.HIDStatus,
                        //                     Plant = item.Plant,
                        //                     SalesOffice = item.SalesOffice,
                        //                     Model = item.Model
                        //                 });

                        //dataPipPriority = (from item in dataPipPriority
                        //                   where item.HIDStatus != "" || item.RentStatus != ""
                        //                   select new
                        //                   {
                        //                       Area = item.Area,
                        //                       pipPriority = item.SapPSLStatus,
                        //                       TerminationDate = item.TerminationDate,
                        //                       PSLType = item.PSLType,
                        //                       SapPSLStatus = item.SapPSLStatus,
                        //                       RentStatus = item.RentStatus,
                        //                       HIDStatus = item.HIDStatus,
                        //                       Plant = item.Plant,
                        //                       SalesOffice = item.SalesOffice,
                        //                       Model = item.Model
                        //                   });

                        dataPspProActive = (from item in dataPspProActive
                                            where item.HIDStatus != "" || item.RentStatus != ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where item.HIDStatus != "" || item.RentStatus != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        //dataPipSafetyOuts = (from item in dataPipSafetyOuts
                        //                     where item.HIDStatus != "" || item.RentStatus != ""
                        //                     select new
                        //                     {
                        //                         Area = item.Area,
                        //                         pipSafetyOuts = item.SapPSLStatus,
                        //                         TerminationDate = item.TerminationDate,
                        //                         PSLType = item.PSLType,
                        //                         SapPSLStatus = item.SapPSLStatus,
                        //                         RentStatus = item.RentStatus,
                        //                         HIDStatus = item.HIDStatus,
                        //                         Plant = item.Plant,
                        //                         SalesOffice = item.SalesOffice,
                        //                         Model = item.Model
                        //                     });

                        //dataPipPriorityOuts = (from item in dataPipPriorityOuts
                        //                       where item.HIDStatus != "" || item.RentStatus != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pipPriorityOuts = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where item.HIDStatus != "" || item.RentStatus != ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where item.HIDStatus != "" || item.RentStatus != ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (hid == "on" && rental == "" && inventory == "on")
                    {
                        #region Completed  
                        //dataPipSafety = (from item in dataPipSafety
                        //                 where item.HIDStatus != "" || item.Plant != ""
                        //                 select new
                        //                 {
                        //                     Area = item.Area,
                        //                     pipSafety = item.pipSafety,
                        //                     TerminationDate = item.TerminationDate,
                        //                     PSLType = item.PSLType,
                        //                     SapPSLStatus = item.SapPSLStatus,
                        //                     RentStatus = item.RentStatus,
                        //                     HIDStatus = item.HIDStatus,
                        //                     Plant = item.Plant,
                        //                     SalesOffice = item.SalesOffice,
                        //                     Model = item.Model
                        //                 });

                        //dataPipPriority = (from item in dataPipPriority
                        //                   where item.HIDStatus != "" || item.Plant != ""
                        //                   select new
                        //                   {
                        //                       Area = item.Area,
                        //                       pipPriority = item.SapPSLStatus,
                        //                       TerminationDate = item.TerminationDate,
                        //                       PSLType = item.PSLType,
                        //                       SapPSLStatus = item.SapPSLStatus,
                        //                       RentStatus = item.RentStatus,
                        //                       HIDStatus = item.HIDStatus,
                        //                       Plant = item.Plant,
                        //                       SalesOffice = item.SalesOffice,
                        //                       Model = item.Model
                        //                   });

                        dataPspProActive = (from item in dataPspProActive
                                            where item.HIDStatus != "" || item.Plant != ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where item.HIDStatus != "" || item.Plant != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        //dataPipSafetyOuts = (from item in dataPipSafetyOuts
                        //                     where item.HIDStatus != "" || item.Plant != ""
                        //                     select new
                        //                     {
                        //                         Area = item.Area,
                        //                         pipSafetyOuts = item.SapPSLStatus,
                        //                         TerminationDate = item.TerminationDate,
                        //                         PSLType = item.PSLType,
                        //                         SapPSLStatus = item.SapPSLStatus,
                        //                         RentStatus = item.RentStatus,
                        //                         HIDStatus = item.HIDStatus,
                        //                         Plant = item.Plant,
                        //                         SalesOffice = item.SalesOffice,
                        //                         Model = item.Model
                        //                     });

                        //dataPipPriorityOuts = (from item in dataPipPriorityOuts
                        //                       where item.HIDStatus != "" || item.Plant != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pipPriorityOuts = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where item.HIDStatus != "" || item.Plant != ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where item.HIDStatus != "" || item.Plant != ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (hid == "" && rental == "on" && inventory == "")
                    {
                        #region Completed  
                        //dataPipSafety = (from item in dataPipSafety
                        //                 where item.RentStatus != ""
                        //                 select new
                        //                 {
                        //                     Area = item.Area,
                        //                     pipSafety = item.pipSafety,
                        //                     TerminationDate = item.TerminationDate,
                        //                     PSLType = item.PSLType,
                        //                     SapPSLStatus = item.SapPSLStatus,
                        //                     RentStatus = item.RentStatus,
                        //                     HIDStatus = item.HIDStatus,
                        //                     Plant = item.Plant,
                        //                     SalesOffice = item.SalesOffice,
                        //                     Model = item.Model
                        //                 });

                        //dataPipPriority = (from item in dataPipPriority
                        //                   where item.RentStatus != ""
                        //                   select new
                        //                   {
                        //                       Area = item.Area,
                        //                       pipPriority = item.SapPSLStatus,
                        //                       TerminationDate = item.TerminationDate,
                        //                       PSLType = item.PSLType,
                        //                       SapPSLStatus = item.SapPSLStatus,
                        //                       RentStatus = item.RentStatus,
                        //                       HIDStatus = item.HIDStatus,
                        //                       Plant = item.Plant,
                        //                       SalesOffice = item.SalesOffice,
                        //                       Model = item.Model
                        //                   });

                        dataPspProActive = (from item in dataPspProActive
                                            where item.RentStatus != ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where item.RentStatus != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        //dataPipSafetyOuts = (from item in dataPipSafetyOuts
                        //                     where item.RentStatus != ""
                        //                     select new
                        //                     {
                        //                         Area = item.Area,
                        //                         pipSafetyOuts = item.SapPSLStatus,
                        //                         TerminationDate = item.TerminationDate,
                        //                         PSLType = item.PSLType,
                        //                         SapPSLStatus = item.SapPSLStatus,
                        //                         RentStatus = item.RentStatus,
                        //                         HIDStatus = item.HIDStatus,
                        //                         Plant = item.Plant,
                        //                         SalesOffice = item.SalesOffice,
                        //                         Model = item.Model
                        //                     });

                        //dataPipPriorityOuts = (from item in dataPipPriorityOuts
                        //                       where item.RentStatus != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pipPriorityOuts = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where item.RentStatus != ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where item.RentStatus != ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (hid == "" && rental == "on" && inventory == "on")
                    {
                        #region Completed  
                        //dataPipSafety = (from item in dataPipSafety
                        //                 where item.RentStatus != "" || item.Plant != ""
                        //                 select new
                        //                 {
                        //                     Area = item.Area,
                        //                     pipSafety = item.pipSafety,
                        //                     TerminationDate = item.TerminationDate,
                        //                     PSLType = item.PSLType,
                        //                     SapPSLStatus = item.SapPSLStatus,
                        //                     RentStatus = item.RentStatus,
                        //                     HIDStatus = item.HIDStatus,
                        //                     Plant = item.Plant,
                        //                     SalesOffice = item.SalesOffice,
                        //                     Model = item.Model
                        //                 });

                        //dataPipPriority = (from item in dataPipPriority
                        //                   where item.RentStatus != "" || item.Plant != ""
                        //                   select new
                        //                   {
                        //                       Area = item.Area,
                        //                       pipPriority = item.SapPSLStatus,
                        //                       TerminationDate = item.TerminationDate,
                        //                       PSLType = item.PSLType,
                        //                       SapPSLStatus = item.SapPSLStatus,
                        //                       RentStatus = item.RentStatus,
                        //                       HIDStatus = item.HIDStatus,
                        //                       Plant = item.Plant,
                        //                       SalesOffice = item.SalesOffice,
                        //                       Model = item.Model
                        //                   });

                        dataPspProActive = (from item in dataPspProActive
                                            where item.RentStatus != "" || item.Plant != ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where item.RentStatus != "" || item.Plant != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        //dataPipSafetyOuts = (from item in dataPipSafetyOuts
                        //                     where item.RentStatus != "" || item.Plant != ""
                        //                     select new
                        //                     {
                        //                         Area = item.Area,
                        //                         pipSafetyOuts = item.SapPSLStatus,
                        //                         TerminationDate = item.TerminationDate,
                        //                         PSLType = item.PSLType,
                        //                         SapPSLStatus = item.SapPSLStatus,
                        //                         RentStatus = item.RentStatus,
                        //                         HIDStatus = item.HIDStatus,
                        //                         Plant = item.Plant,
                        //                         SalesOffice = item.SalesOffice,
                        //                         Model = item.Model
                        //                     });

                        //dataPipPriorityOuts = (from item in dataPipPriorityOuts
                        //                       where item.RentStatus != "" || item.Plant != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pipPriorityOuts = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where item.RentStatus != "" || item.Plant != ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where item.RentStatus != "" || item.Plant != ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (hid == "" && rental == "" && inventory == "on")
                    {
                        #region Completed  
                        //dataPipSafety = (from item in dataPipSafety
                        //                 where item.Plant != ""
                        //                 select new
                        //                 {
                        //                     Area = item.Area,
                        //                     pipSafety = item.pipSafety,
                        //                     TerminationDate = item.TerminationDate,
                        //                     PSLType = item.PSLType,
                        //                     SapPSLStatus = item.SapPSLStatus,
                        //                     RentStatus = item.RentStatus,
                        //                     HIDStatus = item.HIDStatus,
                        //                     Plant = item.Plant,
                        //                     SalesOffice = item.SalesOffice,
                        //                     Model = item.Model
                        //                 });

                        //dataPipPriority = (from item in dataPipPriority
                        //                   where item.Plant != ""
                        //                   select new
                        //                   {
                        //                       Area = item.Area,
                        //                       pipPriority = item.SapPSLStatus,
                        //                       TerminationDate = item.TerminationDate,
                        //                       PSLType = item.PSLType,
                        //                       SapPSLStatus = item.SapPSLStatus,
                        //                       RentStatus = item.RentStatus,
                        //                       HIDStatus = item.HIDStatus,
                        //                       Plant = item.Plant,
                        //                       SalesOffice = item.SalesOffice,
                        //                       Model = item.Model
                        //                   });

                        dataPspProActive = (from item in dataPspProActive
                                            where item.Plant != ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where item.Plant != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        //dataPipSafetyOuts = (from item in dataPipSafetyOuts
                        //                     where item.Plant != ""
                        //                     select new
                        //                     {
                        //                         Area = item.Area,
                        //                         pipSafetyOuts = item.SapPSLStatus,
                        //                         TerminationDate = item.TerminationDate,
                        //                         PSLType = item.PSLType,
                        //                         SapPSLStatus = item.SapPSLStatus,
                        //                         RentStatus = item.RentStatus,
                        //                         HIDStatus = item.HIDStatus,
                        //                         Plant = item.Plant,
                        //                         SalesOffice = item.SalesOffice,
                        //                         Model = item.Model
                        //                     });

                        //dataPipPriorityOuts = (from item in dataPipPriorityOuts
                        //                       where item.Plant != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pipPriorityOuts = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where item.Plant != ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where item.Plant != ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (hid == "on" && rental == "on" && inventory == "on")
                    {
                        #region Completed  
                        //dataPipSafety = (from item in dataPipSafety
                        //                 where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                        //                 select new
                        //                 {
                        //                     Area = item.Area,
                        //                     pipSafety = item.pipSafety,
                        //                     TerminationDate = item.TerminationDate,
                        //                     PSLType = item.PSLType,
                        //                     SapPSLStatus = item.SapPSLStatus,
                        //                     RentStatus = item.RentStatus,
                        //                     HIDStatus = item.HIDStatus,
                        //                     Plant = item.Plant,
                        //                     SalesOffice = item.SalesOffice,
                        //                     Model = item.Model
                        //                 });

                        //dataPipPriority = (from item in dataPipPriority
                        //                   where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                        //                   select new
                        //                   {
                        //                       Area = item.Area,
                        //                       pipPriority = item.SapPSLStatus,
                        //                       TerminationDate = item.TerminationDate,
                        //                       PSLType = item.PSLType,
                        //                       SapPSLStatus = item.SapPSLStatus,
                        //                       RentStatus = item.RentStatus,
                        //                       HIDStatus = item.HIDStatus,
                        //                       Plant = item.Plant,
                        //                       SalesOffice = item.SalesOffice,
                        //                       Model = item.Model
                        //                   });

                        dataPspProActive = (from item in dataPspProActive
                                            where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        //dataPipSafetyOuts = (from item in dataPipSafetyOuts
                        //                     where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                        //                     select new
                        //                     {
                        //                         Area = item.Area,
                        //                         pipSafetyOuts = item.SapPSLStatus,
                        //                         TerminationDate = item.TerminationDate,
                        //                         PSLType = item.PSLType,
                        //                         SapPSLStatus = item.SapPSLStatus,
                        //                         RentStatus = item.RentStatus,
                        //                         HIDStatus = item.HIDStatus,
                        //                         Plant = item.Plant,
                        //                         SalesOffice = item.SalesOffice,
                        //                         Model = item.Model
                        //                     });

                        //dataPipPriorityOuts = (from item in dataPipPriorityOuts
                        //                       where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pipPriorityOuts = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (others == "on" && hid == "" && rental == "" && inventory == "")
                    {
                        #region Completed  
                        //dataPipSafety = (from item in dataPipSafety
                        //                 where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                        //                 select new
                        //                 {
                        //                     Area = item.Area,
                        //                     pipSafety = item.pipSafety,
                        //                     TerminationDate = item.TerminationDate,
                        //                     PSLType = item.PSLType,
                        //                     SapPSLStatus = item.SapPSLStatus,
                        //                     RentStatus = item.RentStatus,
                        //                     HIDStatus = item.HIDStatus,
                        //                     Plant = item.Plant,
                        //                     SalesOffice = item.SalesOffice,
                        //                     Model = item.Model
                        //                 });

                        //dataPipPriority = (from item in dataPipPriority
                        //                   where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                        //                   select new
                        //                   {
                        //                       Area = item.Area,
                        //                       pipPriority = item.SapPSLStatus,
                        //                       TerminationDate = item.TerminationDate,
                        //                       PSLType = item.PSLType,
                        //                       SapPSLStatus = item.SapPSLStatus,
                        //                       RentStatus = item.RentStatus,
                        //                       HIDStatus = item.HIDStatus,
                        //                       Plant = item.Plant,
                        //                       SalesOffice = item.SalesOffice,
                        //                       Model = item.Model
                        //                   });

                        dataPspProActive = (from item in dataPspProActive
                                            where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        //dataPipSafetyOuts = (from item in dataPipSafetyOuts
                        //                     where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                        //                     select new
                        //                     {
                        //                         Area = item.Area,
                        //                         pipSafetyOuts = item.SapPSLStatus,
                        //                         TerminationDate = item.TerminationDate,
                        //                         PSLType = item.PSLType,
                        //                         SapPSLStatus = item.SapPSLStatus,
                        //                         RentStatus = item.RentStatus,
                        //                         HIDStatus = item.HIDStatus,
                        //                         Plant = item.Plant,
                        //                         SalesOffice = item.SalesOffice,
                        //                         Model = item.Model
                        //                     });

                        //dataPipPriorityOuts = (from item in dataPipPriorityOuts
                        //                       where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pipPriorityOuts = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (area.Count() > 0 && area != null)
                    {
                        #region Completed  
                        //dataPipSafety = (from item in dataPipSafety
                        //                 where area.Contains(item.Area)
                        //                 select new
                        //                 {
                        //                     Area = item.Area,
                        //                     pipSafety = item.pipSafety,
                        //                     TerminationDate = item.TerminationDate,
                        //                     PSLType = item.PSLType,
                        //                     SapPSLStatus = item.SapPSLStatus,
                        //                     RentStatus = item.RentStatus,
                        //                     HIDStatus = item.HIDStatus,
                        //                     Plant = item.Plant,
                        //                     SalesOffice = item.SalesOffice,
                        //                     Model = item.Model
                        //                 });

                        //dataPipPriority = (from item in dataPipPriority
                        //                   where area.Contains(item.Area)
                        //                   select new
                        //                   {
                        //                       Area = item.Area,
                        //                       pipPriority = item.SapPSLStatus,
                        //                       TerminationDate = item.TerminationDate,
                        //                       PSLType = item.PSLType,
                        //                       SapPSLStatus = item.SapPSLStatus,
                        //                       RentStatus = item.RentStatus,
                        //                       HIDStatus = item.HIDStatus,
                        //                       Plant = item.Plant,
                        //                       SalesOffice = item.SalesOffice,
                        //                       Model = item.Model
                        //                   });

                        dataPspProActive = (from item in dataPspProActive
                                            where area.Contains(item.Area)
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where area.Contains(item.Area)
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        //dataPipSafetyOuts = (from item in dataPipSafetyOuts
                        //                     where area.Contains(item.Area)
                        //                     select new
                        //                     {
                        //                         Area = item.Area,
                        //                         pipSafetyOuts = item.SapPSLStatus,
                        //                         TerminationDate = item.TerminationDate,
                        //                         PSLType = item.PSLType,
                        //                         SapPSLStatus = item.SapPSLStatus,
                        //                         RentStatus = item.RentStatus,
                        //                         HIDStatus = item.HIDStatus,
                        //                         Plant = item.Plant,
                        //                         SalesOffice = item.SalesOffice,
                        //                         Model = item.Model
                        //                     });

                        //dataPipPriorityOuts = (from item in dataPipPriorityOuts
                        //                       where area.Contains(item.Area)
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pipPriorityOuts = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where area.Contains(item.Area)
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where area.Contains(item.Area)
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (salesOffice.Count() > 0 && salesOffice != null)
                    {
                        #region Completed  
                        //dataPipSafety = (from item in dataPipSafety
                        //                 where salesOffice.Contains(item.SalesOffice)
                        //                 select new
                        //                 {
                        //                     Area = item.Area,
                        //                     pipSafety = item.pipSafety,
                        //                     TerminationDate = item.TerminationDate,
                        //                     PSLType = item.PSLType,
                        //                     SapPSLStatus = item.SapPSLStatus,
                        //                     RentStatus = item.RentStatus,
                        //                     HIDStatus = item.HIDStatus,
                        //                     Plant = item.Plant,
                        //                     SalesOffice = item.SalesOffice,
                        //                     Model = item.Model
                        //                 });

                        //dataPipPriority = (from item in dataPipPriority
                        //                   where salesOffice.Contains(item.SalesOffice)
                        //                   select new
                        //                   {
                        //                       Area = item.Area,
                        //                       pipPriority = item.SapPSLStatus,
                        //                       TerminationDate = item.TerminationDate,
                        //                       PSLType = item.PSLType,
                        //                       SapPSLStatus = item.SapPSLStatus,
                        //                       RentStatus = item.RentStatus,
                        //                       HIDStatus = item.HIDStatus,
                        //                       Plant = item.Plant,
                        //                       SalesOffice = item.SalesOffice,
                        //                       Model = item.Model
                        //                   });

                        dataPspProActive = (from item in dataPspProActive
                                            where salesOffice.Contains(item.SalesOffice)
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where salesOffice.Contains(item.SalesOffice)
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        //dataPipSafetyOuts = (from item in dataPipSafetyOuts
                        //                     where salesOffice.Contains(item.SalesOffice)
                        //                     select new
                        //                     {
                        //                         Area = item.Area,
                        //                         pipSafetyOuts = item.SapPSLStatus,
                        //                         TerminationDate = item.TerminationDate,
                        //                         PSLType = item.PSLType,
                        //                         SapPSLStatus = item.SapPSLStatus,
                        //                         RentStatus = item.RentStatus,
                        //                         HIDStatus = item.HIDStatus,
                        //                         Plant = item.Plant,
                        //                         SalesOffice = item.SalesOffice,
                        //                         Model = item.Model
                        //                     });

                        //dataPipPriorityOuts = (from item in dataPipPriorityOuts
                        //                       where salesOffice.Contains(item.SalesOffice)
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pipPriorityOuts = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where salesOffice.Contains(item.SalesOffice)
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where salesOffice.Contains(item.SalesOffice)
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (model.Count() > 0 && model != null)
                    {
                        #region Completed  
                        //dataPipSafety = (from item in dataPipSafety
                        //                 where model.Contains(item.Model)
                        //                 select new
                        //                 {
                        //                     Area = item.Area,
                        //                     pipSafety = item.pipSafety,
                        //                     TerminationDate = item.TerminationDate,
                        //                     PSLType = item.PSLType,
                        //                     SapPSLStatus = item.SapPSLStatus,
                        //                     RentStatus = item.RentStatus,
                        //                     HIDStatus = item.HIDStatus,
                        //                     Plant = item.Plant,
                        //                     SalesOffice = item.SalesOffice,
                        //                     Model = item.Model
                        //                 });

                        //dataPipPriority = (from item in dataPipPriority
                        //                   where model.Contains(item.Model)
                        //                   select new
                        //                   {
                        //                       Area = item.Area,
                        //                       pipPriority = item.SapPSLStatus,
                        //                       TerminationDate = item.TerminationDate,
                        //                       PSLType = item.PSLType,
                        //                       SapPSLStatus = item.SapPSLStatus,
                        //                       RentStatus = item.RentStatus,
                        //                       HIDStatus = item.HIDStatus,
                        //                       Plant = item.Plant,
                        //                       SalesOffice = item.SalesOffice,
                        //                       Model = item.Model
                        //                   });

                        dataPspProActive = (from item in dataPspProActive
                                            where model.Contains(item.Model)
                                            select new
                                            {
                                                Area = item.Area,
                                                pspProActive = item.SapPSLStatus,
                                                TerminationDate = item.TerminationDate,
                                                PSLType = item.PSLType,
                                                SapPSLStatus = item.SapPSLStatus,
                                                RentStatus = item.RentStatus,
                                                HIDStatus = item.HIDStatus,
                                                Plant = item.Plant,
                                                SalesOffice = item.SalesOffice,
                                                Model = item.Model
                                            });

                        dataPspAfterFailure = (from item in dataPspAfterFailure
                                               where model.Contains(item.Model)
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pspAfterFailure = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });
                        #endregion

                        #region Outstanding
                        //dataPipSafetyOuts = (from item in dataPipSafetyOuts
                        //                     where model.Contains(item.Model)
                        //                     select new
                        //                     {
                        //                         Area = item.Area,
                        //                         pipSafetyOuts = item.SapPSLStatus,
                        //                         TerminationDate = item.TerminationDate,
                        //                         PSLType = item.PSLType,
                        //                         SapPSLStatus = item.SapPSLStatus,
                        //                         RentStatus = item.RentStatus,
                        //                         HIDStatus = item.HIDStatus,
                        //                         Plant = item.Plant,
                        //                         SalesOffice = item.SalesOffice,
                        //                         Model = item.Model
                        //                     });

                        //dataPipPriorityOuts = (from item in dataPipPriorityOuts
                        //                       where model.Contains(item.Model)
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pipPriorityOuts = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });

                        dataPspProActiveOuts = (from item in dataPspProActiveOuts
                                                where model.Contains(item.Model)
                                                select new
                                                {
                                                    Area = item.Area,
                                                    pspProActiveOuts = item.SapPSLStatus,
                                                    TerminationDate = item.TerminationDate,
                                                    PSLType = item.PSLType,
                                                    SapPSLStatus = item.SapPSLStatus,
                                                    RentStatus = item.RentStatus,
                                                    HIDStatus = item.HIDStatus,
                                                    Plant = item.Plant,
                                                    SalesOffice = item.SalesOffice,
                                                    Model = item.Model
                                                });

                        dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                                                   where model.Contains(item.Model)
                                                   select new
                                                   {
                                                       Area = item.Area,
                                                       pspAfterFailureOuts = item.SapPSLStatus,
                                                       TerminationDate = item.TerminationDate,
                                                       PSLType = item.PSLType,
                                                       SapPSLStatus = item.SapPSLStatus,
                                                       RentStatus = item.RentStatus,
                                                       HIDStatus = item.HIDStatus,
                                                       Plant = item.Plant,
                                                       SalesOffice = item.SalesOffice,
                                                       Model = item.Model
                                                   });
                        #endregion
                    }

                    if (psltype.Count() > 0)
                    {
                        foreach (var item in psltype)
                        {
                            //if (item == "S")
                            //{
                            //    pipSafetyParse = Convert.ToDecimal(dataPipSafety.Count());
                            //    pipSafetyParseOuts = Convert.ToDecimal(dataPipSafetyOuts.Count());
                            //}
                            //if (item == "P")
                            //{
                            //    pipPriorityParse = Convert.ToDecimal(dataPipPriority.Count());
                            //    pipPriorityParseOuts = Convert.ToDecimal(dataPipPriorityOuts.Count());
                            //}
                            if (item == "A")
                            {
                                pspAfterFailureParse = Convert.ToDecimal(dataPspAfterFailure.Count());
                                pspAfterFailureParseOuts = Convert.ToDecimal(dataPspAfterFailureOuts.Count());
                            }
                            if (item == "C")
                            {
                                pspProActiveParse = Convert.ToDecimal(dataPspProActive.Count());
                                pspProActiveParseOuts = Convert.ToDecimal(dataPspProActiveOuts.Count());
                            }
                        }
                    }
                    else
                    {
                        pipSafetyParse = Convert.ToDecimal(0);
                        pipPriorityParse = Convert.ToDecimal(0);
                        pspProActiveParse = Convert.ToDecimal(dataPspProActive.Count());
                        pspAfterFailureParse = Convert.ToDecimal(dataPspAfterFailure.Count());

                        pipSafetyParseOuts = Convert.ToDecimal(0);
                        pipPriorityParseOuts = Convert.ToDecimal(0);
                        pspProActiveParseOuts = Convert.ToDecimal(dataPspProActiveOuts.Count());
                        pspAfterFailureParseOuts = Convert.ToDecimal(dataPspAfterFailureOuts.Count());
                    }



                    var countDataPipSafety = pipSafetyParse + pipSafetyParseOuts;
                    var countDataPipPriority = pipPriorityParse + pipPriorityParseOuts;
                    var countDataPspProActive = pspProActiveParse + pspProActiveParseOuts;
                    var countDataPspAfterFailure = pspAfterFailureParse + pspAfterFailureParseOuts;

                    var percentPipSafety = (pipSafetyParse != 0) ? (pipSafetyParse / countDataPipSafety) * 100 : 0;
                    var percentPipPriority = (pipPriorityParse != 0) ? (pipPriorityParse / countDataPipPriority) * 100 : 0;
                    var percentPspProActive = (pspProActiveParse != 0) ? (pspProActiveParse / countDataPspProActive) * 100 : 0;
                    var percentPspAfterFailure = (pspAfterFailureParse != 0) ? (pspAfterFailureParse / countDataPspAfterFailure) * 100 : 0;

                    var percentPipSafetyMathRound = Math.Round(percentPipSafety, 2);
                    var percentPipPriorityMathRound = Math.Round(percentPipPriority, 2);
                    var percentPspProActiveMathRound = Math.Round(percentPspProActive, 2);
                    var percentPspAfterFailureMathRound = Math.Round(percentPspAfterFailure, 2);


                    var listAveragePipSafetyCompAndOuts = new List<decimal>();
                    var listAveragePipPriorityCompAndOuts = new List<decimal>();
                    var listAveragePspProActiveCompAndOuts = new List<decimal>();
                    var listAveragePspAfterFailureCompAndOuts = new List<decimal>();

                    listAveragePipSafetyCompAndOuts.Add(pipSafetyParse);
                    listAveragePipSafetyCompAndOuts.Add(pipSafetyParseOuts);

                    listAveragePipPriorityCompAndOuts.Add(pipPriorityParse);
                    listAveragePipPriorityCompAndOuts.Add(pipPriorityParseOuts);

                    listAveragePspProActiveCompAndOuts.Add(pspProActiveParse);
                    listAveragePspProActiveCompAndOuts.Add(pspProActiveParseOuts);

                    listAveragePspAfterFailureCompAndOuts.Add(pspAfterFailureParse);
                    listAveragePspAfterFailureCompAndOuts.Add(pspAfterFailureParseOuts);

                    listCountAveragePipSafety.Add(percentPipSafetyMathRound);
                    listCountAveragePipPriority.Add(percentPipPriorityMathRound);

                    listCountAveragePspProActive.Add(percentPspProActiveMathRound);
                    listCountAveragePspAfterFailure.Add(percentPspAfterFailureMathRound);

                    listMonth.Add(monthName);

                    var list = new DataChartPSLCompletionSummary();
                    list.MonthName = listMonth;
                    list.RawDataPipSafetyCompAndOuts = listAveragePipSafetyCompAndOuts;
                    list.RawDataPipPriorityCompAndOuts = listAveragePipPriorityCompAndOuts;
                    list.RawDataPspProActiveCompAndOuts = listAveragePspProActiveCompAndOuts;
                    list.RawDataPspAfterFailureCompAndOuts = listAveragePspAfterFailureCompAndOuts;
                    list.DataPercentPipSafety = listCountAveragePipSafety;
                    list.DataPercentPipPriority = listCountAveragePipPriority;
                    list.DataPercentPspProActive = listCountAveragePspProActive;
                    list.DataPercentPspAfterFailure = listCountAveragePspAfterFailure;
                    listItem.Add(list);

                }
            }

            if (!string.IsNullOrWhiteSpace(dateFromIssue) && !string.IsNullOrWhiteSpace(dateEndIssue))
            {
                decimal pipSafetyParse = 0;
                decimal pipPriorityParse = 0;
                decimal pspProActiveParse = 0;
                decimal pspAfterFailureParse = 0;

                decimal pipSafetyParseOuts = 0;
                decimal pipPriorityParseOuts = 0;
                decimal pspProActiveParseOuts = 0;
                decimal pspAfterFailureParseOuts = 0;
                for (var i = monthFromIssue; i <= monthEndIssue; i++)
                {
                    var convertToDateTimeFrom = DateTime.ParseExact(dateFromIssue, "dd-MM-yyyy", null);
                    var convertToDateTimeEnd = DateTime.ParseExact(dateEndIssue, "dd-MM-yyyy", null);
                    var monthName = new DateTime(convertToDateTimeEnd.Year, i, 1).ToString("MMM");

                    #region Completed
                    var dataPipSafety = (from item in _ctx.PSLMaster
                                         where item.Area != null && item.LetterDate.Value.Year == yearFromIssue && item.LetterDate.Value.Month == i && item.PSLType == "S" && item.Validation.Contains("Completed") && item.RepairDate != null
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.SapPSLStatus,
                                             TerminationDate = item.LetterDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.Validation,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                    var dataPipPriority = (from item in _ctx.PSLMaster
                                           where item.Area != null && item.LetterDate.Value.Year == yearFromIssue && item.LetterDate.Value.Month == i && item.PSLType == "P" && item.Validation.Contains("Completed") && item.RepairDate != null
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.LetterDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.Validation,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                    //var dataPspProActive = (from item in _ctx.PSLMaster
                    //                        where item.Area != null && item.TerminationDate.Value.Year == yearFromTerm && item.TerminationDate.Value.Month == i && item.PSLType == "C" && item.Validation.Contains("Completed") && item.RepairDate == null && item.PCR == ""
                    //                        select new
                    //                        {
                    //                            Area = item.Area,
                    //                            pspProActive = item.SapPSLStatus,
                    //                            TerminationDate = item.TerminationDate,
                    //                            PSLType = item.PSLType,
                    //                            SapPSLStatus = item.Validation,
                    //                            RentStatus = item.RentStatus,
                    //                            HIDStatus = item.HIDStatus,
                    //                            Plant = item.Plant,
                    //                            SalesOffice = item.SalesOffice,
                    //                            Model = item.Model
                    //                        });

                    //var dataPspAfterFailure = (from item in _ctx.PSLMaster
                    //                           where item.Area != null && item.TerminationDate.Value.Year == yearFromTerm && item.TerminationDate.Value.Month == i && item.PSLType == "A" && item.Validation.Contains("Completed") && item.RepairDate == null && item.PCR == ""
                    //                           select new
                    //                           {
                    //                               Area = item.Area,
                    //                               pspAfterFailure = item.SapPSLStatus,
                    //                               TerminationDate = item.TerminationDate,
                    //                               PSLType = item.PSLType,
                    //                               SapPSLStatus = item.Validation,
                    //                               RentStatus = item.RentStatus,
                    //                               HIDStatus = item.HIDStatus,
                    //                               Plant = item.Plant,
                    //                               SalesOffice = item.SalesOffice,
                    //                               Model = item.Model
                    //                           });
                    #endregion

                    #region Outstanding
                    var dataPipSafetyOuts = (from item in _ctx.PSLMaster
                                             where item.Area != null && item.LetterDate.Value.Year == yearFromIssue && item.LetterDate.Value.Month == i && item.PSLType == "S" && item.Validation == "Outstanding" && item.RepairDate != null
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.LetterDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.Validation,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                    var dataPipPriorityOuts = (from item in _ctx.PSLMaster
                                               where item.Area != null && item.LetterDate.Value.Year == yearFromIssue && item.LetterDate.Value.Month == i && item.PSLType == "P" && item.Validation != "Outstanding" && item.RepairDate != null
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.LetterDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.Validation,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                    //var dataPspProActiveOuts = (from item in _ctx.PSLMaster
                    //                            where item.Area != null && item.TerminationDate.Value.Year == yearFromTerm && item.TerminationDate.Value.Month == i && item.PSLType == "C" && item.Validation.Contains("Outstanding") && item.RepairDate != null && item.PCR == ""
                    //                            select new
                    //                            {
                    //                                Area = item.Area,
                    //                                pspProActiveOuts = item.SapPSLStatus,
                    //                                TerminationDate = item.TerminationDate,
                    //                                PSLType = item.PSLType,
                    //                                SapPSLStatus = item.Validation,
                    //                                RentStatus = item.RentStatus,
                    //                                HIDStatus = item.HIDStatus,
                    //                                Plant = item.Plant,
                    //                                SalesOffice = item.SalesOffice,
                    //                                Model = item.Model
                    //                            });

                    //var dataPspAfterFailureOuts = (from item in _ctx.PSLMaster
                    //                               where item.Area != null && item.TerminationDate.Value.Year == yearFromTerm && item.TerminationDate.Value.Month == i && item.PSLType == "A" && item.Validation.Contains("Outstanding") && item.RepairDate != null && item.PCR == ""
                    //                               select new
                    //                               {
                    //                                   Area = item.Area,
                    //                                   pspAfterFailureOuts = item.SapPSLStatus,
                    //                                   TerminationDate = item.TerminationDate,
                    //                                   PSLType = item.PSLType,
                    //                                   SapPSLStatus = item.Validation,
                    //                                   RentStatus = item.RentStatus,
                    //                                   HIDStatus = item.HIDStatus,
                    //                                   Plant = item.Plant,
                    //                                   SalesOffice = item.SalesOffice,
                    //                                   Model = item.Model
                    //                               });
                    #endregion

                    if (hid == "on" && rental == "" && inventory == "")
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where item.HIDStatus != ""
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where item.HIDStatus != ""
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        //dataPspProActive = (from item in dataPspProActive
                        //                    where item.HIDStatus != ""
                        //                    select new
                        //                    {
                        //                        Area = item.Area,
                        //                        pspProActive = item.SapPSLStatus,
                        //                        TerminationDate = item.TerminationDate,
                        //                        PSLType = item.PSLType,
                        //                        SapPSLStatus = item.SapPSLStatus,
                        //                        RentStatus = item.RentStatus,
                        //                        HIDStatus = item.HIDStatus,
                        //                        Plant = item.Plant,
                        //                        SalesOffice = item.SalesOffice,
                        //                        Model = item.Model
                        //                    });

                        //dataPspAfterFailure = (from item in dataPspAfterFailure
                        //                       where item.HIDStatus != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pspAfterFailure = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where item.HIDStatus != ""
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where item.HIDStatus != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        //dataPspProActiveOuts = (from item in dataPspProActiveOuts
                        //                        where item.HIDStatus != ""
                        //                        select new
                        //                        {
                        //                            Area = item.Area,
                        //                            pspProActiveOuts = item.SapPSLStatus,
                        //                            TerminationDate = item.TerminationDate,
                        //                            PSLType = item.PSLType,
                        //                            SapPSLStatus = item.SapPSLStatus,
                        //                            RentStatus = item.RentStatus,
                        //                            HIDStatus = item.HIDStatus,
                        //                            Plant = item.Plant,
                        //                            SalesOffice = item.SalesOffice,
                        //                            Model = item.Model
                        //                        });

                        //dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                        //                           where item.HIDStatus != ""
                        //                           select new
                        //                           {
                        //                               Area = item.Area,
                        //                               pspAfterFailureOuts = item.SapPSLStatus,
                        //                               TerminationDate = item.TerminationDate,
                        //                               PSLType = item.PSLType,
                        //                               SapPSLStatus = item.SapPSLStatus,
                        //                               RentStatus = item.RentStatus,
                        //                               HIDStatus = item.HIDStatus,
                        //                               Plant = item.Plant,
                        //                               SalesOffice = item.SalesOffice,
                        //                               Model = item.Model
                        //                           });
                        #endregion
                    }

                    if (hid == "on" && rental == "on" && inventory == "")
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where item.HIDStatus != "" || item.RentStatus != ""
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where item.HIDStatus != "" || item.RentStatus != ""
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        //dataPspProActive = (from item in dataPspProActive
                        //                    where item.HIDStatus != "" || item.RentStatus != ""
                        //                    select new
                        //                    {
                        //                        Area = item.Area,
                        //                        pspProActive = item.SapPSLStatus,
                        //                        TerminationDate = item.TerminationDate,
                        //                        PSLType = item.PSLType,
                        //                        SapPSLStatus = item.SapPSLStatus,
                        //                        RentStatus = item.RentStatus,
                        //                        HIDStatus = item.HIDStatus,
                        //                        Plant = item.Plant,
                        //                        SalesOffice = item.SalesOffice,
                        //                        Model = item.Model
                        //                    });

                        //dataPspAfterFailure = (from item in dataPspAfterFailure
                        //                       where item.HIDStatus != "" || item.RentStatus != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pspAfterFailure = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where item.HIDStatus != "" || item.RentStatus != ""
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where item.HIDStatus != "" || item.RentStatus != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        //dataPspProActiveOuts = (from item in dataPspProActiveOuts
                        //                        where item.HIDStatus != "" || item.RentStatus != ""
                        //                        select new
                        //                        {
                        //                            Area = item.Area,
                        //                            pspProActiveOuts = item.SapPSLStatus,
                        //                            TerminationDate = item.TerminationDate,
                        //                            PSLType = item.PSLType,
                        //                            SapPSLStatus = item.SapPSLStatus,
                        //                            RentStatus = item.RentStatus,
                        //                            HIDStatus = item.HIDStatus,
                        //                            Plant = item.Plant,
                        //                            SalesOffice = item.SalesOffice,
                        //                            Model = item.Model
                        //                        });

                        //dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                        //                           where item.HIDStatus != "" || item.RentStatus != ""
                        //                           select new
                        //                           {
                        //                               Area = item.Area,
                        //                               pspAfterFailureOuts = item.SapPSLStatus,
                        //                               TerminationDate = item.TerminationDate,
                        //                               PSLType = item.PSLType,
                        //                               SapPSLStatus = item.SapPSLStatus,
                        //                               RentStatus = item.RentStatus,
                        //                               HIDStatus = item.HIDStatus,
                        //                               Plant = item.Plant,
                        //                               SalesOffice = item.SalesOffice,
                        //                               Model = item.Model
                        //                           });
                        #endregion
                    }

                    if (hid == "on" && rental == "" && inventory == "on")
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where item.HIDStatus != "" || item.Plant != ""
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where item.HIDStatus != "" || item.Plant != ""
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        //dataPspProActive = (from item in dataPspProActive
                        //                    where item.HIDStatus != "" || item.Plant != ""
                        //                    select new
                        //                    {
                        //                        Area = item.Area,
                        //                        pspProActive = item.SapPSLStatus,
                        //                        TerminationDate = item.TerminationDate,
                        //                        PSLType = item.PSLType,
                        //                        SapPSLStatus = item.SapPSLStatus,
                        //                        RentStatus = item.RentStatus,
                        //                        HIDStatus = item.HIDStatus,
                        //                        Plant = item.Plant,
                        //                        SalesOffice = item.SalesOffice,
                        //                        Model = item.Model
                        //                    });

                        //dataPspAfterFailure = (from item in dataPspAfterFailure
                        //                       where item.HIDStatus != "" || item.Plant != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pspAfterFailure = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where item.HIDStatus != "" || item.Plant != ""
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where item.HIDStatus != "" || item.Plant != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        //dataPspProActiveOuts = (from item in dataPspProActiveOuts
                        //                        where item.HIDStatus != "" || item.Plant != ""
                        //                        select new
                        //                        {
                        //                            Area = item.Area,
                        //                            pspProActiveOuts = item.SapPSLStatus,
                        //                            TerminationDate = item.TerminationDate,
                        //                            PSLType = item.PSLType,
                        //                            SapPSLStatus = item.SapPSLStatus,
                        //                            RentStatus = item.RentStatus,
                        //                            HIDStatus = item.HIDStatus,
                        //                            Plant = item.Plant,
                        //                            SalesOffice = item.SalesOffice,
                        //                            Model = item.Model
                        //                        });

                        //dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                        //                           where item.HIDStatus != "" || item.Plant != ""
                        //                           select new
                        //                           {
                        //                               Area = item.Area,
                        //                               pspAfterFailureOuts = item.SapPSLStatus,
                        //                               TerminationDate = item.TerminationDate,
                        //                               PSLType = item.PSLType,
                        //                               SapPSLStatus = item.SapPSLStatus,
                        //                               RentStatus = item.RentStatus,
                        //                               HIDStatus = item.HIDStatus,
                        //                               Plant = item.Plant,
                        //                               SalesOffice = item.SalesOffice,
                        //                               Model = item.Model
                        //                           });
                        #endregion
                    }

                    if (hid == "" && rental == "on" && inventory == "")
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where item.RentStatus != ""
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where item.RentStatus != ""
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        //dataPspProActive = (from item in dataPspProActive
                        //                    where item.RentStatus != ""
                        //                    select new
                        //                    {
                        //                        Area = item.Area,
                        //                        pspProActive = item.SapPSLStatus,
                        //                        TerminationDate = item.TerminationDate,
                        //                        PSLType = item.PSLType,
                        //                        SapPSLStatus = item.SapPSLStatus,
                        //                        RentStatus = item.RentStatus,
                        //                        HIDStatus = item.HIDStatus,
                        //                        Plant = item.Plant,
                        //                        SalesOffice = item.SalesOffice,
                        //                        Model = item.Model
                        //                    });

                        //dataPspAfterFailure = (from item in dataPspAfterFailure
                        //                       where item.RentStatus != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pspAfterFailure = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where item.RentStatus != ""
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where item.RentStatus != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        //dataPspProActiveOuts = (from item in dataPspProActiveOuts
                        //                        where item.RentStatus != ""
                        //                        select new
                        //                        {
                        //                            Area = item.Area,
                        //                            pspProActiveOuts = item.SapPSLStatus,
                        //                            TerminationDate = item.TerminationDate,
                        //                            PSLType = item.PSLType,
                        //                            SapPSLStatus = item.SapPSLStatus,
                        //                            RentStatus = item.RentStatus,
                        //                            HIDStatus = item.HIDStatus,
                        //                            Plant = item.Plant,
                        //                            SalesOffice = item.SalesOffice,
                        //                            Model = item.Model
                        //                        });

                        //dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                        //                           where item.RentStatus != ""
                        //                           select new
                        //                           {
                        //                               Area = item.Area,
                        //                               pspAfterFailureOuts = item.SapPSLStatus,
                        //                               TerminationDate = item.TerminationDate,
                        //                               PSLType = item.PSLType,
                        //                               SapPSLStatus = item.SapPSLStatus,
                        //                               RentStatus = item.RentStatus,
                        //                               HIDStatus = item.HIDStatus,
                        //                               Plant = item.Plant,
                        //                               SalesOffice = item.SalesOffice,
                        //                               Model = item.Model
                        //                           });
                        #endregion
                    }

                    if (hid == "" && rental == "on" && inventory == "on")
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where item.RentStatus != "" || item.Plant != ""
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where item.RentStatus != "" || item.Plant != ""
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        //dataPspProActive = (from item in dataPspProActive
                        //                    where item.RentStatus != "" || item.Plant != ""
                        //                    select new
                        //                    {
                        //                        Area = item.Area,
                        //                        pspProActive = item.SapPSLStatus,
                        //                        TerminationDate = item.TerminationDate,
                        //                        PSLType = item.PSLType,
                        //                        SapPSLStatus = item.SapPSLStatus,
                        //                        RentStatus = item.RentStatus,
                        //                        HIDStatus = item.HIDStatus,
                        //                        Plant = item.Plant,
                        //                        SalesOffice = item.SalesOffice,
                        //                        Model = item.Model
                        //                    });

                        //dataPspAfterFailure = (from item in dataPspAfterFailure
                        //                       where item.RentStatus != "" || item.Plant != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pspAfterFailure = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where item.RentStatus != "" || item.Plant != ""
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where item.RentStatus != "" || item.Plant != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        //dataPspProActiveOuts = (from item in dataPspProActiveOuts
                        //                        where item.RentStatus != "" || item.Plant != ""
                        //                        select new
                        //                        {
                        //                            Area = item.Area,
                        //                            pspProActiveOuts = item.SapPSLStatus,
                        //                            TerminationDate = item.TerminationDate,
                        //                            PSLType = item.PSLType,
                        //                            SapPSLStatus = item.SapPSLStatus,
                        //                            RentStatus = item.RentStatus,
                        //                            HIDStatus = item.HIDStatus,
                        //                            Plant = item.Plant,
                        //                            SalesOffice = item.SalesOffice,
                        //                            Model = item.Model
                        //                        });

                        //dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                        //                           where item.RentStatus != "" || item.Plant != ""
                        //                           select new
                        //                           {
                        //                               Area = item.Area,
                        //                               pspAfterFailureOuts = item.SapPSLStatus,
                        //                               TerminationDate = item.TerminationDate,
                        //                               PSLType = item.PSLType,
                        //                               SapPSLStatus = item.SapPSLStatus,
                        //                               RentStatus = item.RentStatus,
                        //                               HIDStatus = item.HIDStatus,
                        //                               Plant = item.Plant,
                        //                               SalesOffice = item.SalesOffice,
                        //                               Model = item.Model
                        //                           });
                        #endregion
                    }

                    if (hid == "" && rental == "" && inventory == "on")
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where item.Plant != ""
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where item.Plant != ""
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        //dataPspProActive = (from item in dataPspProActive
                        //                    where item.Plant != ""
                        //                    select new
                        //                    {
                        //                        Area = item.Area,
                        //                        pspProActive = item.SapPSLStatus,
                        //                        TerminationDate = item.TerminationDate,
                        //                        PSLType = item.PSLType,
                        //                        SapPSLStatus = item.SapPSLStatus,
                        //                        RentStatus = item.RentStatus,
                        //                        HIDStatus = item.HIDStatus,
                        //                        Plant = item.Plant,
                        //                        SalesOffice = item.SalesOffice,
                        //                        Model = item.Model
                        //                    });

                        //dataPspAfterFailure = (from item in dataPspAfterFailure
                        //                       where item.Plant != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pspAfterFailure = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where item.Plant != ""
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where item.Plant != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        //dataPspProActiveOuts = (from item in dataPspProActiveOuts
                        //                        where item.Plant != ""
                        //                        select new
                        //                        {
                        //                            Area = item.Area,
                        //                            pspProActiveOuts = item.SapPSLStatus,
                        //                            TerminationDate = item.TerminationDate,
                        //                            PSLType = item.PSLType,
                        //                            SapPSLStatus = item.SapPSLStatus,
                        //                            RentStatus = item.RentStatus,
                        //                            HIDStatus = item.HIDStatus,
                        //                            Plant = item.Plant,
                        //                            SalesOffice = item.SalesOffice,
                        //                            Model = item.Model
                        //                        });

                        //dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                        //                           where item.Plant != ""
                        //                           select new
                        //                           {
                        //                               Area = item.Area,
                        //                               pspAfterFailureOuts = item.SapPSLStatus,
                        //                               TerminationDate = item.TerminationDate,
                        //                               PSLType = item.PSLType,
                        //                               SapPSLStatus = item.SapPSLStatus,
                        //                               RentStatus = item.RentStatus,
                        //                               HIDStatus = item.HIDStatus,
                        //                               Plant = item.Plant,
                        //                               SalesOffice = item.SalesOffice,
                        //                               Model = item.Model
                        //                           });
                        #endregion
                    }

                    if (hid == "on" && rental == "on" && inventory == "on")
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        //dataPspProActive = (from item in dataPspProActive
                        //                    where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                        //                    select new
                        //                    {
                        //                        Area = item.Area,
                        //                        pspProActive = item.SapPSLStatus,
                        //                        TerminationDate = item.TerminationDate,
                        //                        PSLType = item.PSLType,
                        //                        SapPSLStatus = item.SapPSLStatus,
                        //                        RentStatus = item.RentStatus,
                        //                        HIDStatus = item.HIDStatus,
                        //                        Plant = item.Plant,
                        //                        SalesOffice = item.SalesOffice,
                        //                        Model = item.Model
                        //                    });

                        //dataPspAfterFailure = (from item in dataPspAfterFailure
                        //                       where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pspAfterFailure = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        //dataPspProActiveOuts = (from item in dataPspProActiveOuts
                        //                        where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                        //                        select new
                        //                        {
                        //                            Area = item.Area,
                        //                            pspProActiveOuts = item.SapPSLStatus,
                        //                            TerminationDate = item.TerminationDate,
                        //                            PSLType = item.PSLType,
                        //                            SapPSLStatus = item.SapPSLStatus,
                        //                            RentStatus = item.RentStatus,
                        //                            HIDStatus = item.HIDStatus,
                        //                            Plant = item.Plant,
                        //                            SalesOffice = item.SalesOffice,
                        //                            Model = item.Model
                        //                        });

                        //dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                        //                           where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                        //                           select new
                        //                           {
                        //                               Area = item.Area,
                        //                               pspAfterFailureOuts = item.SapPSLStatus,
                        //                               TerminationDate = item.TerminationDate,
                        //                               PSLType = item.PSLType,
                        //                               SapPSLStatus = item.SapPSLStatus,
                        //                               RentStatus = item.RentStatus,
                        //                               HIDStatus = item.HIDStatus,
                        //                               Plant = item.Plant,
                        //                               SalesOffice = item.SalesOffice,
                        //                               Model = item.Model
                        //                           });
                        #endregion
                    }

                    if (others == "on" && hid == "" && rental == "" && inventory == "")
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        //dataPspProActive = (from item in dataPspProActive
                        //                    where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                        //                    select new
                        //                    {
                        //                        Area = item.Area,
                        //                        pspProActive = item.SapPSLStatus,
                        //                        TerminationDate = item.TerminationDate,
                        //                        PSLType = item.PSLType,
                        //                        SapPSLStatus = item.SapPSLStatus,
                        //                        RentStatus = item.RentStatus,
                        //                        HIDStatus = item.HIDStatus,
                        //                        Plant = item.Plant,
                        //                        SalesOffice = item.SalesOffice,
                        //                        Model = item.Model
                        //                    });

                        //dataPspAfterFailure = (from item in dataPspAfterFailure
                        //                       where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pspAfterFailure = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        //dataPspProActiveOuts = (from item in dataPspProActiveOuts
                        //                        where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                        //                        select new
                        //                        {
                        //                            Area = item.Area,
                        //                            pspProActiveOuts = item.SapPSLStatus,
                        //                            TerminationDate = item.TerminationDate,
                        //                            PSLType = item.PSLType,
                        //                            SapPSLStatus = item.SapPSLStatus,
                        //                            RentStatus = item.RentStatus,
                        //                            HIDStatus = item.HIDStatus,
                        //                            Plant = item.Plant,
                        //                            SalesOffice = item.SalesOffice,
                        //                            Model = item.Model
                        //                        });

                        //dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                        //                           where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                        //                           select new
                        //                           {
                        //                               Area = item.Area,
                        //                               pspAfterFailureOuts = item.SapPSLStatus,
                        //                               TerminationDate = item.TerminationDate,
                        //                               PSLType = item.PSLType,
                        //                               SapPSLStatus = item.SapPSLStatus,
                        //                               RentStatus = item.RentStatus,
                        //                               HIDStatus = item.HIDStatus,
                        //                               Plant = item.Plant,
                        //                               SalesOffice = item.SalesOffice,
                        //                               Model = item.Model
                        //                           });
                        #endregion
                    }

                    if (area.Count() > 0 && area != null)
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where area.Contains(item.Area)
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where area.Contains(item.Area)
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        //dataPspProActive = (from item in dataPspProActive
                        //                    where area.Contains(item.Area)
                        //                    select new
                        //                    {
                        //                        Area = item.Area,
                        //                        pspProActive = item.SapPSLStatus,
                        //                        TerminationDate = item.TerminationDate,
                        //                        PSLType = item.PSLType,
                        //                        SapPSLStatus = item.SapPSLStatus,
                        //                        RentStatus = item.RentStatus,
                        //                        HIDStatus = item.HIDStatus,
                        //                        Plant = item.Plant,
                        //                        SalesOffice = item.SalesOffice,
                        //                        Model = item.Model
                        //                    });

                        //dataPspAfterFailure = (from item in dataPspAfterFailure
                        //                       where area.Contains(item.Area)
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pspAfterFailure = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where area.Contains(item.Area)
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where area.Contains(item.Area)
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        //dataPspProActiveOuts = (from item in dataPspProActiveOuts
                        //                        where area.Contains(item.Area)
                        //                        select new
                        //                        {
                        //                            Area = item.Area,
                        //                            pspProActiveOuts = item.SapPSLStatus,
                        //                            TerminationDate = item.TerminationDate,
                        //                            PSLType = item.PSLType,
                        //                            SapPSLStatus = item.SapPSLStatus,
                        //                            RentStatus = item.RentStatus,
                        //                            HIDStatus = item.HIDStatus,
                        //                            Plant = item.Plant,
                        //                            SalesOffice = item.SalesOffice,
                        //                            Model = item.Model
                        //                        });

                        //dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                        //                           where area.Contains(item.Area)
                        //                           select new
                        //                           {
                        //                               Area = item.Area,
                        //                               pspAfterFailureOuts = item.SapPSLStatus,
                        //                               TerminationDate = item.TerminationDate,
                        //                               PSLType = item.PSLType,
                        //                               SapPSLStatus = item.SapPSLStatus,
                        //                               RentStatus = item.RentStatus,
                        //                               HIDStatus = item.HIDStatus,
                        //                               Plant = item.Plant,
                        //                               SalesOffice = item.SalesOffice,
                        //                               Model = item.Model
                        //                           });
                        #endregion
                    }

                    if (salesOffice.Count() > 0 && salesOffice != null)
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where salesOffice.Contains(item.SalesOffice)
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where salesOffice.Contains(item.SalesOffice)
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        //dataPspProActive = (from item in dataPspProActive
                        //                    where salesOffice.Contains(item.SalesOffice)
                        //                    select new
                        //                    {
                        //                        Area = item.Area,
                        //                        pspProActive = item.SapPSLStatus,
                        //                        TerminationDate = item.TerminationDate,
                        //                        PSLType = item.PSLType,
                        //                        SapPSLStatus = item.SapPSLStatus,
                        //                        RentStatus = item.RentStatus,
                        //                        HIDStatus = item.HIDStatus,
                        //                        Plant = item.Plant,
                        //                        SalesOffice = item.SalesOffice,
                        //                        Model = item.Model
                        //                    });

                        //dataPspAfterFailure = (from item in dataPspAfterFailure
                        //                       where salesOffice.Contains(item.SalesOffice)
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pspAfterFailure = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where salesOffice.Contains(item.SalesOffice)
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where salesOffice.Contains(item.SalesOffice)
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        //dataPspProActiveOuts = (from item in dataPspProActiveOuts
                        //                        where salesOffice.Contains(item.SalesOffice)
                        //                        select new
                        //                        {
                        //                            Area = item.Area,
                        //                            pspProActiveOuts = item.SapPSLStatus,
                        //                            TerminationDate = item.TerminationDate,
                        //                            PSLType = item.PSLType,
                        //                            SapPSLStatus = item.SapPSLStatus,
                        //                            RentStatus = item.RentStatus,
                        //                            HIDStatus = item.HIDStatus,
                        //                            Plant = item.Plant,
                        //                            SalesOffice = item.SalesOffice,
                        //                            Model = item.Model
                        //                        });

                        //dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                        //                           where salesOffice.Contains(item.SalesOffice)
                        //                           select new
                        //                           {
                        //                               Area = item.Area,
                        //                               pspAfterFailureOuts = item.SapPSLStatus,
                        //                               TerminationDate = item.TerminationDate,
                        //                               PSLType = item.PSLType,
                        //                               SapPSLStatus = item.SapPSLStatus,
                        //                               RentStatus = item.RentStatus,
                        //                               HIDStatus = item.HIDStatus,
                        //                               Plant = item.Plant,
                        //                               SalesOffice = item.SalesOffice,
                        //                               Model = item.Model
                        //                           });
                        #endregion
                    }

                    if (model.Count() > 0 && model != null)
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where model.Contains(item.Model)
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where model.Contains(item.Model)
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        //dataPspProActive = (from item in dataPspProActive
                        //                    where model.Contains(item.Model)
                        //                    select new
                        //                    {
                        //                        Area = item.Area,
                        //                        pspProActive = item.SapPSLStatus,
                        //                        TerminationDate = item.TerminationDate,
                        //                        PSLType = item.PSLType,
                        //                        SapPSLStatus = item.SapPSLStatus,
                        //                        RentStatus = item.RentStatus,
                        //                        HIDStatus = item.HIDStatus,
                        //                        Plant = item.Plant,
                        //                        SalesOffice = item.SalesOffice,
                        //                        Model = item.Model
                        //                    });

                        //dataPspAfterFailure = (from item in dataPspAfterFailure
                        //                       where model.Contains(item.Model)
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pspAfterFailure = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where model.Contains(item.Model)
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where model.Contains(item.Model)
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        //dataPspProActiveOuts = (from item in dataPspProActiveOuts
                        //                        where model.Contains(item.Model)
                        //                        select new
                        //                        {
                        //                            Area = item.Area,
                        //                            pspProActiveOuts = item.SapPSLStatus,
                        //                            TerminationDate = item.TerminationDate,
                        //                            PSLType = item.PSLType,
                        //                            SapPSLStatus = item.SapPSLStatus,
                        //                            RentStatus = item.RentStatus,
                        //                            HIDStatus = item.HIDStatus,
                        //                            Plant = item.Plant,
                        //                            SalesOffice = item.SalesOffice,
                        //                            Model = item.Model
                        //                        });

                        //dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                        //                           where model.Contains(item.Model)
                        //                           select new
                        //                           {
                        //                               Area = item.Area,
                        //                               pspAfterFailureOuts = item.SapPSLStatus,
                        //                               TerminationDate = item.TerminationDate,
                        //                               PSLType = item.PSLType,
                        //                               SapPSLStatus = item.SapPSLStatus,
                        //                               RentStatus = item.RentStatus,
                        //                               HIDStatus = item.HIDStatus,
                        //                               Plant = item.Plant,
                        //                               SalesOffice = item.SalesOffice,
                        //                               Model = item.Model
                        //                           });
                        #endregion
                    }

                    if (psltype.Count() > 0)
                    {
                        foreach (var item in psltype)
                        {
                            if (item == "S")
                            {
                                pipSafetyParse = Convert.ToDecimal(dataPipSafety.Count());
                                pipSafetyParseOuts = Convert.ToDecimal(dataPipSafetyOuts.Count());
                            }
                            if (item == "P")
                            {
                                pipPriorityParse = Convert.ToDecimal(dataPipPriority.Count());
                                pipPriorityParseOuts = Convert.ToDecimal(dataPipPriorityOuts.Count());
                            }
                            //if (item == "A")
                            //{
                            //    pspAfterFailureParse = Convert.ToDecimal(dataPspAfterFailure.Count());
                            //    pspAfterFailureParseOuts = Convert.ToDecimal(dataPspAfterFailureOuts.Count());
                            //}
                            //if (item == "C")
                            //{
                            //    pspProActiveParse = Convert.ToDecimal(dataPspProActive.Count());
                            //    pspProActiveParseOuts = Convert.ToDecimal(dataPspProActiveOuts.Count());
                            //}
                        }
                    }
                    else
                    {
                        pipSafetyParse = Convert.ToDecimal(dataPipSafety.Count());
                        pipPriorityParse = Convert.ToDecimal(dataPipPriority.Count());
                        pspProActiveParse = Convert.ToDecimal(0);
                        pspAfterFailureParse = Convert.ToDecimal(0);

                        pipSafetyParseOuts = Convert.ToDecimal(dataPipSafetyOuts.Count());
                        pipPriorityParseOuts = Convert.ToDecimal(dataPipPriorityOuts.Count());
                        pspProActiveParseOuts = Convert.ToDecimal(0);
                        pspAfterFailureParseOuts = Convert.ToDecimal(0);
                    }



                    var countDataPipSafety = pipSafetyParse + pipSafetyParseOuts;
                    var countDataPipPriority = pipPriorityParse + pipPriorityParseOuts;
                    var countDataPspProActive = pspProActiveParse + pspProActiveParseOuts;
                    var countDataPspAfterFailure = pspAfterFailureParse + pspAfterFailureParseOuts;

                    var percentPipSafety = (pipSafetyParse != 0) ? (pipSafetyParse / countDataPipSafety) * 100 : 0;
                    var percentPipPriority = (pipPriorityParse != 0) ? (pipPriorityParse / countDataPipPriority) * 100 : 0;
                    var percentPspProActive = (pspProActiveParse != 0) ? (pspProActiveParse / countDataPspProActive) * 100 : 0;
                    var percentPspAfterFailure = (pspAfterFailureParse != 0) ? (pspAfterFailureParse / countDataPspAfterFailure) * 100 : 0;

                    var percentPipSafetyMathRound = Math.Round(percentPipSafety, 2);
                    var percentPipPriorityMathRound = Math.Round(percentPipPriority, 2);
                    var percentPspProActiveMathRound = Math.Round(percentPspProActive, 2);
                    var percentPspAfterFailureMathRound = Math.Round(percentPspAfterFailure, 2);


                    var listAveragePipSafetyCompAndOuts = new List<decimal>();
                    var listAveragePipPriorityCompAndOuts = new List<decimal>();
                    var listAveragePspProActiveCompAndOuts = new List<decimal>();
                    var listAveragePspAfterFailureCompAndOuts = new List<decimal>();

                    listAveragePipSafetyCompAndOuts.Add(pipSafetyParse);
                    listAveragePipSafetyCompAndOuts.Add(pipSafetyParseOuts);

                    listAveragePipPriorityCompAndOuts.Add(pipPriorityParse);
                    listAveragePipPriorityCompAndOuts.Add(pipPriorityParseOuts);

                    listAveragePspProActiveCompAndOuts.Add(pspProActiveParse);
                    listAveragePspProActiveCompAndOuts.Add(pspProActiveParseOuts);

                    listAveragePspAfterFailureCompAndOuts.Add(pspAfterFailureParse);
                    listAveragePspAfterFailureCompAndOuts.Add(pspAfterFailureParseOuts);

                    listCountAveragePipSafety.Add(percentPipSafetyMathRound);
                    listCountAveragePipPriority.Add(percentPipPriorityMathRound);

                    listCountAveragePspProActive.Add(percentPspProActiveMathRound);
                    listCountAveragePspAfterFailure.Add(percentPspAfterFailureMathRound);

                    listMonth.Add(monthName);

                    var list = new DataChartPSLCompletionSummary();
                    list.MonthName = listMonth;
                    list.RawDataPipSafetyCompAndOuts = listAveragePipSafetyCompAndOuts;
                    list.RawDataPipPriorityCompAndOuts = listAveragePipPriorityCompAndOuts;
                    list.RawDataPspProActiveCompAndOuts = listAveragePspProActiveCompAndOuts;
                    list.RawDataPspAfterFailureCompAndOuts = listAveragePspAfterFailureCompAndOuts;
                    list.DataPercentPipSafety = listCountAveragePipSafety;
                    list.DataPercentPipPriority = listCountAveragePipPriority;
                    list.DataPercentPspProActive = listCountAveragePspProActive;
                    list.DataPercentPspAfterFailure = listCountAveragePspAfterFailure;
                    listItem.Add(list);

                }
            }

            if (!string.IsNullOrWhiteSpace(dateFromIssue) && string.IsNullOrWhiteSpace(dateEndIssue))
            {
                decimal pipSafetyParse = 0;
                decimal pipPriorityParse = 0;
                decimal pspProActiveParse = 0;
                decimal pspAfterFailureParse = 0;

                decimal pipSafetyParseOuts = 0;
                decimal pipPriorityParseOuts = 0;
                decimal pspProActiveParseOuts = 0;
                decimal pspAfterFailureParseOuts = 0;
                monthEndIssue = monthFromIssue;
                for (var i = monthFromIssue; i <= monthEndIssue; i++)
                {
                    var convertToDateTimeFrom = DateTime.ParseExact(dateFromIssue, "dd-MM-yyyy", null);
                    var monthName = new DateTime(convertToDateTimeFrom.Year, i, 1).ToString("MMM");

                    #region Completed
                    var dataPipSafety = (from item in _ctx.PSLMaster
                                         where item.Area != null && item.LetterDate.Value.Year == yearFromIssue && item.LetterDate.Value.Month == i && item.PSLType == "S" && item.Validation.Contains("Completed") && item.RepairDate != null
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.SapPSLStatus,
                                             TerminationDate = item.LetterDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.Validation,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                    var dataPipPriority = (from item in _ctx.PSLMaster
                                           where item.Area != null && item.LetterDate.Value.Year == yearFromIssue && item.LetterDate.Value.Month == i && item.PSLType == "P" && item.Validation.Contains("Completed") && item.RepairDate != null
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.LetterDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.Validation,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                    //var dataPspProActive = (from item in _ctx.PSLMaster
                    //                        where item.Area != null && item.TerminationDate.Value.Year == yearFromTerm && item.TerminationDate.Value.Month == i && item.PSLType == "C" && item.Validation.Contains("Completed") && item.RepairDate == null && item.PCR == ""
                    //                        select new
                    //                        {
                    //                            Area = item.Area,
                    //                            pspProActive = item.SapPSLStatus,
                    //                            TerminationDate = item.TerminationDate,
                    //                            PSLType = item.PSLType,
                    //                            SapPSLStatus = item.Validation,
                    //                            RentStatus = item.RentStatus,
                    //                            HIDStatus = item.HIDStatus,
                    //                            Plant = item.Plant,
                    //                            SalesOffice = item.SalesOffice,
                    //                            Model = item.Model
                    //                        });

                    //var dataPspAfterFailure = (from item in _ctx.PSLMaster
                    //                           where item.Area != null && item.TerminationDate.Value.Year == yearFromTerm && item.TerminationDate.Value.Month == i && item.PSLType == "A" && item.Validation.Contains("Completed") && item.RepairDate == null && item.PCR == ""
                    //                           select new
                    //                           {
                    //                               Area = item.Area,
                    //                               pspAfterFailure = item.SapPSLStatus,
                    //                               TerminationDate = item.TerminationDate,
                    //                               PSLType = item.PSLType,
                    //                               SapPSLStatus = item.Validation,
                    //                               RentStatus = item.RentStatus,
                    //                               HIDStatus = item.HIDStatus,
                    //                               Plant = item.Plant,
                    //                               SalesOffice = item.SalesOffice,
                    //                               Model = item.Model
                    //                           });
                    #endregion

                    #region Outstanding
                    var dataPipSafetyOuts = (from item in _ctx.PSLMaster
                                             where item.Area != null && item.LetterDate.Value.Year == yearFromIssue && item.LetterDate.Value.Month == i && item.PSLType == "S" && item.Validation == "Outstanding" && item.RepairDate != null
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.LetterDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.Validation,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                    var dataPipPriorityOuts = (from item in _ctx.PSLMaster
                                               where item.Area != null && item.LetterDate.Value.Year == yearFromIssue && item.LetterDate.Value.Month == i && item.PSLType == "P" && item.Validation == "Outstanding" && item.RepairDate != null
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.LetterDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.Validation,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                    //var dataPspProActiveOuts = (from item in _ctx.PSLMaster
                    //                            where item.Area != null && item.TerminationDate.Value.Year == yearFromTerm && item.TerminationDate.Value.Month == i && item.PSLType == "C" && item.Validation.Contains("Outstanding") && item.RepairDate != null && item.PCR == ""
                    //                            select new
                    //                            {
                    //                                Area = item.Area,
                    //                                pspProActiveOuts = item.SapPSLStatus,
                    //                                TerminationDate = item.TerminationDate,
                    //                                PSLType = item.PSLType,
                    //                                SapPSLStatus = item.Validation,
                    //                                RentStatus = item.RentStatus,
                    //                                HIDStatus = item.HIDStatus,
                    //                                Plant = item.Plant,
                    //                                SalesOffice = item.SalesOffice,
                    //                                Model = item.Model
                    //                            });

                    //var dataPspAfterFailureOuts = (from item in _ctx.PSLMaster
                    //                               where item.Area != null && item.TerminationDate.Value.Year == yearFromTerm && item.TerminationDate.Value.Month == i && item.PSLType == "A" && item.Validation.Contains("Outstanding") && item.RepairDate != null && item.PCR == ""
                    //                               select new
                    //                               {
                    //                                   Area = item.Area,
                    //                                   pspAfterFailureOuts = item.SapPSLStatus,
                    //                                   TerminationDate = item.TerminationDate,
                    //                                   PSLType = item.PSLType,
                    //                                   SapPSLStatus = item.Validation,
                    //                                   RentStatus = item.RentStatus,
                    //                                   HIDStatus = item.HIDStatus,
                    //                                   Plant = item.Plant,
                    //                                   SalesOffice = item.SalesOffice,
                    //                                   Model = item.Model
                    //                               });
                    #endregion

                    if (hid == "on" && rental == "" && inventory == "")
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where item.HIDStatus != ""
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where item.HIDStatus != ""
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        //dataPspProActive = (from item in dataPspProActive
                        //                    where item.HIDStatus != ""
                        //                    select new
                        //                    {
                        //                        Area = item.Area,
                        //                        pspProActive = item.SapPSLStatus,
                        //                        TerminationDate = item.TerminationDate,
                        //                        PSLType = item.PSLType,
                        //                        SapPSLStatus = item.SapPSLStatus,
                        //                        RentStatus = item.RentStatus,
                        //                        HIDStatus = item.HIDStatus,
                        //                        Plant = item.Plant,
                        //                        SalesOffice = item.SalesOffice,
                        //                        Model = item.Model
                        //                    });

                        //dataPspAfterFailure = (from item in dataPspAfterFailure
                        //                       where item.HIDStatus != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pspAfterFailure = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where item.HIDStatus != ""
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where item.HIDStatus != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        //dataPspProActiveOuts = (from item in dataPspProActiveOuts
                        //                        where item.HIDStatus != ""
                        //                        select new
                        //                        {
                        //                            Area = item.Area,
                        //                            pspProActiveOuts = item.SapPSLStatus,
                        //                            TerminationDate = item.TerminationDate,
                        //                            PSLType = item.PSLType,
                        //                            SapPSLStatus = item.SapPSLStatus,
                        //                            RentStatus = item.RentStatus,
                        //                            HIDStatus = item.HIDStatus,
                        //                            Plant = item.Plant,
                        //                            SalesOffice = item.SalesOffice,
                        //                            Model = item.Model
                        //                        });

                        //dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                        //                           where item.HIDStatus != ""
                        //                           select new
                        //                           {
                        //                               Area = item.Area,
                        //                               pspAfterFailureOuts = item.SapPSLStatus,
                        //                               TerminationDate = item.TerminationDate,
                        //                               PSLType = item.PSLType,
                        //                               SapPSLStatus = item.SapPSLStatus,
                        //                               RentStatus = item.RentStatus,
                        //                               HIDStatus = item.HIDStatus,
                        //                               Plant = item.Plant,
                        //                               SalesOffice = item.SalesOffice,
                        //                               Model = item.Model
                        //                           });
                        #endregion
                    }

                    if (hid == "on" && rental == "on" && inventory == "")
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where item.HIDStatus != "" || item.RentStatus != ""
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where item.HIDStatus != "" || item.RentStatus != ""
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        //dataPspProActive = (from item in dataPspProActive
                        //                    where item.HIDStatus != "" || item.RentStatus != ""
                        //                    select new
                        //                    {
                        //                        Area = item.Area,
                        //                        pspProActive = item.SapPSLStatus,
                        //                        TerminationDate = item.TerminationDate,
                        //                        PSLType = item.PSLType,
                        //                        SapPSLStatus = item.SapPSLStatus,
                        //                        RentStatus = item.RentStatus,
                        //                        HIDStatus = item.HIDStatus,
                        //                        Plant = item.Plant,
                        //                        SalesOffice = item.SalesOffice,
                        //                        Model = item.Model
                        //                    });

                        //dataPspAfterFailure = (from item in dataPspAfterFailure
                        //                       where item.HIDStatus != "" || item.RentStatus != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pspAfterFailure = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where item.HIDStatus != "" || item.RentStatus != ""
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where item.HIDStatus != "" || item.RentStatus != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        //dataPspProActiveOuts = (from item in dataPspProActiveOuts
                        //                        where item.HIDStatus != "" || item.RentStatus != ""
                        //                        select new
                        //                        {
                        //                            Area = item.Area,
                        //                            pspProActiveOuts = item.SapPSLStatus,
                        //                            TerminationDate = item.TerminationDate,
                        //                            PSLType = item.PSLType,
                        //                            SapPSLStatus = item.SapPSLStatus,
                        //                            RentStatus = item.RentStatus,
                        //                            HIDStatus = item.HIDStatus,
                        //                            Plant = item.Plant,
                        //                            SalesOffice = item.SalesOffice,
                        //                            Model = item.Model
                        //                        });

                        //dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                        //                           where item.HIDStatus != "" || item.RentStatus != ""
                        //                           select new
                        //                           {
                        //                               Area = item.Area,
                        //                               pspAfterFailureOuts = item.SapPSLStatus,
                        //                               TerminationDate = item.TerminationDate,
                        //                               PSLType = item.PSLType,
                        //                               SapPSLStatus = item.SapPSLStatus,
                        //                               RentStatus = item.RentStatus,
                        //                               HIDStatus = item.HIDStatus,
                        //                               Plant = item.Plant,
                        //                               SalesOffice = item.SalesOffice,
                        //                               Model = item.Model
                        //                           });
                        #endregion
                    }

                    if (hid == "on" && rental == "" && inventory == "on")
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where item.HIDStatus != "" || item.Plant != ""
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where item.HIDStatus != "" || item.Plant != ""
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        //dataPspProActive = (from item in dataPspProActive
                        //                    where item.HIDStatus != "" || item.Plant != ""
                        //                    select new
                        //                    {
                        //                        Area = item.Area,
                        //                        pspProActive = item.SapPSLStatus,
                        //                        TerminationDate = item.TerminationDate,
                        //                        PSLType = item.PSLType,
                        //                        SapPSLStatus = item.SapPSLStatus,
                        //                        RentStatus = item.RentStatus,
                        //                        HIDStatus = item.HIDStatus,
                        //                        Plant = item.Plant,
                        //                        SalesOffice = item.SalesOffice,
                        //                        Model = item.Model
                        //                    });

                        //dataPspAfterFailure = (from item in dataPspAfterFailure
                        //                       where item.HIDStatus != "" || item.Plant != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pspAfterFailure = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where item.HIDStatus != "" || item.Plant != ""
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where item.HIDStatus != "" || item.Plant != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        //dataPspProActiveOuts = (from item in dataPspProActiveOuts
                        //                        where item.HIDStatus != "" || item.Plant != ""
                        //                        select new
                        //                        {
                        //                            Area = item.Area,
                        //                            pspProActiveOuts = item.SapPSLStatus,
                        //                            TerminationDate = item.TerminationDate,
                        //                            PSLType = item.PSLType,
                        //                            SapPSLStatus = item.SapPSLStatus,
                        //                            RentStatus = item.RentStatus,
                        //                            HIDStatus = item.HIDStatus,
                        //                            Plant = item.Plant,
                        //                            SalesOffice = item.SalesOffice,
                        //                            Model = item.Model
                        //                        });

                        //dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                        //                           where item.HIDStatus != "" || item.Plant != ""
                        //                           select new
                        //                           {
                        //                               Area = item.Area,
                        //                               pspAfterFailureOuts = item.SapPSLStatus,
                        //                               TerminationDate = item.TerminationDate,
                        //                               PSLType = item.PSLType,
                        //                               SapPSLStatus = item.SapPSLStatus,
                        //                               RentStatus = item.RentStatus,
                        //                               HIDStatus = item.HIDStatus,
                        //                               Plant = item.Plant,
                        //                               SalesOffice = item.SalesOffice,
                        //                               Model = item.Model
                        //                           });
                        #endregion
                    }

                    if (hid == "" && rental == "on" && inventory == "")
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where item.RentStatus != ""
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where item.RentStatus != ""
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        //dataPspProActive = (from item in dataPspProActive
                        //                    where item.RentStatus != ""
                        //                    select new
                        //                    {
                        //                        Area = item.Area,
                        //                        pspProActive = item.SapPSLStatus,
                        //                        TerminationDate = item.TerminationDate,
                        //                        PSLType = item.PSLType,
                        //                        SapPSLStatus = item.SapPSLStatus,
                        //                        RentStatus = item.RentStatus,
                        //                        HIDStatus = item.HIDStatus,
                        //                        Plant = item.Plant,
                        //                        SalesOffice = item.SalesOffice,
                        //                        Model = item.Model
                        //                    });

                        //dataPspAfterFailure = (from item in dataPspAfterFailure
                        //                       where item.RentStatus != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pspAfterFailure = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where item.RentStatus != ""
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where item.RentStatus != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        //dataPspProActiveOuts = (from item in dataPspProActiveOuts
                        //                        where item.RentStatus != ""
                        //                        select new
                        //                        {
                        //                            Area = item.Area,
                        //                            pspProActiveOuts = item.SapPSLStatus,
                        //                            TerminationDate = item.TerminationDate,
                        //                            PSLType = item.PSLType,
                        //                            SapPSLStatus = item.SapPSLStatus,
                        //                            RentStatus = item.RentStatus,
                        //                            HIDStatus = item.HIDStatus,
                        //                            Plant = item.Plant,
                        //                            SalesOffice = item.SalesOffice,
                        //                            Model = item.Model
                        //                        });

                        //dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                        //                           where item.RentStatus != ""
                        //                           select new
                        //                           {
                        //                               Area = item.Area,
                        //                               pspAfterFailureOuts = item.SapPSLStatus,
                        //                               TerminationDate = item.TerminationDate,
                        //                               PSLType = item.PSLType,
                        //                               SapPSLStatus = item.SapPSLStatus,
                        //                               RentStatus = item.RentStatus,
                        //                               HIDStatus = item.HIDStatus,
                        //                               Plant = item.Plant,
                        //                               SalesOffice = item.SalesOffice,
                        //                               Model = item.Model
                        //                           });
                        #endregion
                    }

                    if (hid == "" && rental == "on" && inventory == "on")
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where item.RentStatus != "" || item.Plant != ""
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where item.RentStatus != "" || item.Plant != ""
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        //dataPspProActive = (from item in dataPspProActive
                        //                    where item.RentStatus != "" || item.Plant != ""
                        //                    select new
                        //                    {
                        //                        Area = item.Area,
                        //                        pspProActive = item.SapPSLStatus,
                        //                        TerminationDate = item.TerminationDate,
                        //                        PSLType = item.PSLType,
                        //                        SapPSLStatus = item.SapPSLStatus,
                        //                        RentStatus = item.RentStatus,
                        //                        HIDStatus = item.HIDStatus,
                        //                        Plant = item.Plant,
                        //                        SalesOffice = item.SalesOffice,
                        //                        Model = item.Model
                        //                    });

                        //dataPspAfterFailure = (from item in dataPspAfterFailure
                        //                       where item.RentStatus != "" || item.Plant != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pspAfterFailure = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where item.RentStatus != "" || item.Plant != ""
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where item.RentStatus != "" || item.Plant != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        //dataPspProActiveOuts = (from item in dataPspProActiveOuts
                        //                        where item.RentStatus != "" || item.Plant != ""
                        //                        select new
                        //                        {
                        //                            Area = item.Area,
                        //                            pspProActiveOuts = item.SapPSLStatus,
                        //                            TerminationDate = item.TerminationDate,
                        //                            PSLType = item.PSLType,
                        //                            SapPSLStatus = item.SapPSLStatus,
                        //                            RentStatus = item.RentStatus,
                        //                            HIDStatus = item.HIDStatus,
                        //                            Plant = item.Plant,
                        //                            SalesOffice = item.SalesOffice,
                        //                            Model = item.Model
                        //                        });

                        //dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                        //                           where item.RentStatus != "" || item.Plant != ""
                        //                           select new
                        //                           {
                        //                               Area = item.Area,
                        //                               pspAfterFailureOuts = item.SapPSLStatus,
                        //                               TerminationDate = item.TerminationDate,
                        //                               PSLType = item.PSLType,
                        //                               SapPSLStatus = item.SapPSLStatus,
                        //                               RentStatus = item.RentStatus,
                        //                               HIDStatus = item.HIDStatus,
                        //                               Plant = item.Plant,
                        //                               SalesOffice = item.SalesOffice,
                        //                               Model = item.Model
                        //                           });
                        #endregion
                    }

                    if (hid == "" && rental == "" && inventory == "on")
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where item.Plant != ""
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where item.Plant != ""
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        //dataPspProActive = (from item in dataPspProActive
                        //                    where item.Plant != ""
                        //                    select new
                        //                    {
                        //                        Area = item.Area,
                        //                        pspProActive = item.SapPSLStatus,
                        //                        TerminationDate = item.TerminationDate,
                        //                        PSLType = item.PSLType,
                        //                        SapPSLStatus = item.SapPSLStatus,
                        //                        RentStatus = item.RentStatus,
                        //                        HIDStatus = item.HIDStatus,
                        //                        Plant = item.Plant,
                        //                        SalesOffice = item.SalesOffice,
                        //                        Model = item.Model
                        //                    });

                        //dataPspAfterFailure = (from item in dataPspAfterFailure
                        //                       where item.Plant != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pspAfterFailure = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where item.Plant != ""
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where item.Plant != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        //dataPspProActiveOuts = (from item in dataPspProActiveOuts
                        //                        where item.Plant != ""
                        //                        select new
                        //                        {
                        //                            Area = item.Area,
                        //                            pspProActiveOuts = item.SapPSLStatus,
                        //                            TerminationDate = item.TerminationDate,
                        //                            PSLType = item.PSLType,
                        //                            SapPSLStatus = item.SapPSLStatus,
                        //                            RentStatus = item.RentStatus,
                        //                            HIDStatus = item.HIDStatus,
                        //                            Plant = item.Plant,
                        //                            SalesOffice = item.SalesOffice,
                        //                            Model = item.Model
                        //                        });

                        //dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                        //                           where item.Plant != ""
                        //                           select new
                        //                           {
                        //                               Area = item.Area,
                        //                               pspAfterFailureOuts = item.SapPSLStatus,
                        //                               TerminationDate = item.TerminationDate,
                        //                               PSLType = item.PSLType,
                        //                               SapPSLStatus = item.SapPSLStatus,
                        //                               RentStatus = item.RentStatus,
                        //                               HIDStatus = item.HIDStatus,
                        //                               Plant = item.Plant,
                        //                               SalesOffice = item.SalesOffice,
                        //                               Model = item.Model
                        //                           });
                        #endregion
                    }

                    if (hid == "on" && rental == "on" && inventory == "on")
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        //dataPspProActive = (from item in dataPspProActive
                        //                    where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                        //                    select new
                        //                    {
                        //                        Area = item.Area,
                        //                        pspProActive = item.SapPSLStatus,
                        //                        TerminationDate = item.TerminationDate,
                        //                        PSLType = item.PSLType,
                        //                        SapPSLStatus = item.SapPSLStatus,
                        //                        RentStatus = item.RentStatus,
                        //                        HIDStatus = item.HIDStatus,
                        //                        Plant = item.Plant,
                        //                        SalesOffice = item.SalesOffice,
                        //                        Model = item.Model
                        //                    });

                        //dataPspAfterFailure = (from item in dataPspAfterFailure
                        //                       where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pspAfterFailure = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        //dataPspProActiveOuts = (from item in dataPspProActiveOuts
                        //                        where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                        //                        select new
                        //                        {
                        //                            Area = item.Area,
                        //                            pspProActiveOuts = item.SapPSLStatus,
                        //                            TerminationDate = item.TerminationDate,
                        //                            PSLType = item.PSLType,
                        //                            SapPSLStatus = item.SapPSLStatus,
                        //                            RentStatus = item.RentStatus,
                        //                            HIDStatus = item.HIDStatus,
                        //                            Plant = item.Plant,
                        //                            SalesOffice = item.SalesOffice,
                        //                            Model = item.Model
                        //                        });

                        //dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                        //                           where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                        //                           select new
                        //                           {
                        //                               Area = item.Area,
                        //                               pspAfterFailureOuts = item.SapPSLStatus,
                        //                               TerminationDate = item.TerminationDate,
                        //                               PSLType = item.PSLType,
                        //                               SapPSLStatus = item.SapPSLStatus,
                        //                               RentStatus = item.RentStatus,
                        //                               HIDStatus = item.HIDStatus,
                        //                               Plant = item.Plant,
                        //                               SalesOffice = item.SalesOffice,
                        //                               Model = item.Model
                        //                           });
                        #endregion
                    }

                    if (others == "on" && hid == "" && rental == "" && inventory == "")
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        //dataPspProActive = (from item in dataPspProActive
                        //                    where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                        //                    select new
                        //                    {
                        //                        Area = item.Area,
                        //                        pspProActive = item.SapPSLStatus,
                        //                        TerminationDate = item.TerminationDate,
                        //                        PSLType = item.PSLType,
                        //                        SapPSLStatus = item.SapPSLStatus,
                        //                        RentStatus = item.RentStatus,
                        //                        HIDStatus = item.HIDStatus,
                        //                        Plant = item.Plant,
                        //                        SalesOffice = item.SalesOffice,
                        //                        Model = item.Model
                        //                    });

                        //dataPspAfterFailure = (from item in dataPspAfterFailure
                        //                       where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pspAfterFailure = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        //dataPspProActiveOuts = (from item in dataPspProActiveOuts
                        //                        where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                        //                        select new
                        //                        {
                        //                            Area = item.Area,
                        //                            pspProActiveOuts = item.SapPSLStatus,
                        //                            TerminationDate = item.TerminationDate,
                        //                            PSLType = item.PSLType,
                        //                            SapPSLStatus = item.SapPSLStatus,
                        //                            RentStatus = item.RentStatus,
                        //                            HIDStatus = item.HIDStatus,
                        //                            Plant = item.Plant,
                        //                            SalesOffice = item.SalesOffice,
                        //                            Model = item.Model
                        //                        });

                        //dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                        //                           where item.RentStatus == "" || item.Plant == "" || item.HIDStatus == ""
                        //                           select new
                        //                           {
                        //                               Area = item.Area,
                        //                               pspAfterFailureOuts = item.SapPSLStatus,
                        //                               TerminationDate = item.TerminationDate,
                        //                               PSLType = item.PSLType,
                        //                               SapPSLStatus = item.SapPSLStatus,
                        //                               RentStatus = item.RentStatus,
                        //                               HIDStatus = item.HIDStatus,
                        //                               Plant = item.Plant,
                        //                               SalesOffice = item.SalesOffice,
                        //                               Model = item.Model
                        //                           });
                        #endregion
                    }

                    if (area.Count() > 0 && area != null)
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where area.Contains(item.Area)
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where area.Contains(item.Area)
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        //dataPspProActive = (from item in dataPspProActive
                        //                    where area.Contains(item.Area)
                        //                    select new
                        //                    {
                        //                        Area = item.Area,
                        //                        pspProActive = item.SapPSLStatus,
                        //                        TerminationDate = item.TerminationDate,
                        //                        PSLType = item.PSLType,
                        //                        SapPSLStatus = item.SapPSLStatus,
                        //                        RentStatus = item.RentStatus,
                        //                        HIDStatus = item.HIDStatus,
                        //                        Plant = item.Plant,
                        //                        SalesOffice = item.SalesOffice,
                        //                        Model = item.Model
                        //                    });

                        //dataPspAfterFailure = (from item in dataPspAfterFailure
                        //                       where area.Contains(item.Area)
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pspAfterFailure = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where area.Contains(item.Area)
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where area.Contains(item.Area)
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        //dataPspProActiveOuts = (from item in dataPspProActiveOuts
                        //                        where area.Contains(item.Area)
                        //                        select new
                        //                        {
                        //                            Area = item.Area,
                        //                            pspProActiveOuts = item.SapPSLStatus,
                        //                            TerminationDate = item.TerminationDate,
                        //                            PSLType = item.PSLType,
                        //                            SapPSLStatus = item.SapPSLStatus,
                        //                            RentStatus = item.RentStatus,
                        //                            HIDStatus = item.HIDStatus,
                        //                            Plant = item.Plant,
                        //                            SalesOffice = item.SalesOffice,
                        //                            Model = item.Model
                        //                        });

                        //dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                        //                           where area.Contains(item.Area)
                        //                           select new
                        //                           {
                        //                               Area = item.Area,
                        //                               pspAfterFailureOuts = item.SapPSLStatus,
                        //                               TerminationDate = item.TerminationDate,
                        //                               PSLType = item.PSLType,
                        //                               SapPSLStatus = item.SapPSLStatus,
                        //                               RentStatus = item.RentStatus,
                        //                               HIDStatus = item.HIDStatus,
                        //                               Plant = item.Plant,
                        //                               SalesOffice = item.SalesOffice,
                        //                               Model = item.Model
                        //                           });
                        #endregion
                    }

                    if (salesOffice.Count() > 0 && salesOffice != null)
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where salesOffice.Contains(item.SalesOffice)
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where salesOffice.Contains(item.SalesOffice)
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        //dataPspProActive = (from item in dataPspProActive
                        //                    where salesOffice.Contains(item.SalesOffice)
                        //                    select new
                        //                    {
                        //                        Area = item.Area,
                        //                        pspProActive = item.SapPSLStatus,
                        //                        TerminationDate = item.TerminationDate,
                        //                        PSLType = item.PSLType,
                        //                        SapPSLStatus = item.SapPSLStatus,
                        //                        RentStatus = item.RentStatus,
                        //                        HIDStatus = item.HIDStatus,
                        //                        Plant = item.Plant,
                        //                        SalesOffice = item.SalesOffice,
                        //                        Model = item.Model
                        //                    });

                        //dataPspAfterFailure = (from item in dataPspAfterFailure
                        //                       where salesOffice.Contains(item.SalesOffice)
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pspAfterFailure = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where salesOffice.Contains(item.SalesOffice)
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where salesOffice.Contains(item.SalesOffice)
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        //dataPspProActiveOuts = (from item in dataPspProActiveOuts
                        //                        where salesOffice.Contains(item.SalesOffice)
                        //                        select new
                        //                        {
                        //                            Area = item.Area,
                        //                            pspProActiveOuts = item.SapPSLStatus,
                        //                            TerminationDate = item.TerminationDate,
                        //                            PSLType = item.PSLType,
                        //                            SapPSLStatus = item.SapPSLStatus,
                        //                            RentStatus = item.RentStatus,
                        //                            HIDStatus = item.HIDStatus,
                        //                            Plant = item.Plant,
                        //                            SalesOffice = item.SalesOffice,
                        //                            Model = item.Model
                        //                        });

                        //dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                        //                           where salesOffice.Contains(item.SalesOffice)
                        //                           select new
                        //                           {
                        //                               Area = item.Area,
                        //                               pspAfterFailureOuts = item.SapPSLStatus,
                        //                               TerminationDate = item.TerminationDate,
                        //                               PSLType = item.PSLType,
                        //                               SapPSLStatus = item.SapPSLStatus,
                        //                               RentStatus = item.RentStatus,
                        //                               HIDStatus = item.HIDStatus,
                        //                               Plant = item.Plant,
                        //                               SalesOffice = item.SalesOffice,
                        //                               Model = item.Model
                        //                           });
                        #endregion
                    }

                    if (model.Count() > 0 && model != null)
                    {
                        #region Completed  
                        dataPipSafety = (from item in dataPipSafety
                                         where model.Contains(item.Model)
                                         select new
                                         {
                                             Area = item.Area,
                                             pipSafety = item.pipSafety,
                                             TerminationDate = item.TerminationDate,
                                             PSLType = item.PSLType,
                                             SapPSLStatus = item.SapPSLStatus,
                                             RentStatus = item.RentStatus,
                                             HIDStatus = item.HIDStatus,
                                             Plant = item.Plant,
                                             SalesOffice = item.SalesOffice,
                                             Model = item.Model
                                         });

                        dataPipPriority = (from item in dataPipPriority
                                           where model.Contains(item.Model)
                                           select new
                                           {
                                               Area = item.Area,
                                               pipPriority = item.SapPSLStatus,
                                               TerminationDate = item.TerminationDate,
                                               PSLType = item.PSLType,
                                               SapPSLStatus = item.SapPSLStatus,
                                               RentStatus = item.RentStatus,
                                               HIDStatus = item.HIDStatus,
                                               Plant = item.Plant,
                                               SalesOffice = item.SalesOffice,
                                               Model = item.Model
                                           });

                        //dataPspProActive = (from item in dataPspProActive
                        //                    where model.Contains(item.Model)
                        //                    select new
                        //                    {
                        //                        Area = item.Area,
                        //                        pspProActive = item.SapPSLStatus,
                        //                        TerminationDate = item.TerminationDate,
                        //                        PSLType = item.PSLType,
                        //                        SapPSLStatus = item.SapPSLStatus,
                        //                        RentStatus = item.RentStatus,
                        //                        HIDStatus = item.HIDStatus,
                        //                        Plant = item.Plant,
                        //                        SalesOffice = item.SalesOffice,
                        //                        Model = item.Model
                        //                    });

                        //dataPspAfterFailure = (from item in dataPspAfterFailure
                        //                       where model.Contains(item.Model)
                        //                       select new
                        //                       {
                        //                           Area = item.Area,
                        //                           pspAfterFailure = item.SapPSLStatus,
                        //                           TerminationDate = item.TerminationDate,
                        //                           PSLType = item.PSLType,
                        //                           SapPSLStatus = item.SapPSLStatus,
                        //                           RentStatus = item.RentStatus,
                        //                           HIDStatus = item.HIDStatus,
                        //                           Plant = item.Plant,
                        //                           SalesOffice = item.SalesOffice,
                        //                           Model = item.Model
                        //                       });
                        #endregion

                        #region Outstanding
                        dataPipSafetyOuts = (from item in dataPipSafetyOuts
                                             where model.Contains(item.Model)
                                             select new
                                             {
                                                 Area = item.Area,
                                                 pipSafetyOuts = item.SapPSLStatus,
                                                 TerminationDate = item.TerminationDate,
                                                 PSLType = item.PSLType,
                                                 SapPSLStatus = item.SapPSLStatus,
                                                 RentStatus = item.RentStatus,
                                                 HIDStatus = item.HIDStatus,
                                                 Plant = item.Plant,
                                                 SalesOffice = item.SalesOffice,
                                                 Model = item.Model
                                             });

                        dataPipPriorityOuts = (from item in dataPipPriorityOuts
                                               where model.Contains(item.Model)
                                               select new
                                               {
                                                   Area = item.Area,
                                                   pipPriorityOuts = item.SapPSLStatus,
                                                   TerminationDate = item.TerminationDate,
                                                   PSLType = item.PSLType,
                                                   SapPSLStatus = item.SapPSLStatus,
                                                   RentStatus = item.RentStatus,
                                                   HIDStatus = item.HIDStatus,
                                                   Plant = item.Plant,
                                                   SalesOffice = item.SalesOffice,
                                                   Model = item.Model
                                               });

                        //dataPspProActiveOuts = (from item in dataPspProActiveOuts
                        //                        where model.Contains(item.Model)
                        //                        select new
                        //                        {
                        //                            Area = item.Area,
                        //                            pspProActiveOuts = item.SapPSLStatus,
                        //                            TerminationDate = item.TerminationDate,
                        //                            PSLType = item.PSLType,
                        //                            SapPSLStatus = item.SapPSLStatus,
                        //                            RentStatus = item.RentStatus,
                        //                            HIDStatus = item.HIDStatus,
                        //                            Plant = item.Plant,
                        //                            SalesOffice = item.SalesOffice,
                        //                            Model = item.Model
                        //                        });

                        //dataPspAfterFailureOuts = (from item in dataPspAfterFailureOuts
                        //                           where model.Contains(item.Model)
                        //                           select new
                        //                           {
                        //                               Area = item.Area,
                        //                               pspAfterFailureOuts = item.SapPSLStatus,
                        //                               TerminationDate = item.TerminationDate,
                        //                               PSLType = item.PSLType,
                        //                               SapPSLStatus = item.SapPSLStatus,
                        //                               RentStatus = item.RentStatus,
                        //                               HIDStatus = item.HIDStatus,
                        //                               Plant = item.Plant,
                        //                               SalesOffice = item.SalesOffice,
                        //                               Model = item.Model
                        //                           });
                        #endregion
                    }

                    if (psltype.Count() > 0)
                    {
                        foreach (var item in psltype)
                        {
                            if (item == "S")
                            {
                                pipSafetyParse = Convert.ToDecimal(dataPipSafety.Count());
                                pipSafetyParseOuts = Convert.ToDecimal(dataPipSafetyOuts.Count());
                            }
                            if (item == "P")
                            {
                                pipPriorityParse = Convert.ToDecimal(dataPipPriority.Count());
                                pipPriorityParseOuts = Convert.ToDecimal(dataPipPriorityOuts.Count());
                            }
                            //if (item == "A")
                            //{
                            //    pspAfterFailureParse = Convert.ToDecimal(dataPspAfterFailure.Count());
                            //    pspAfterFailureParseOuts = Convert.ToDecimal(dataPspAfterFailureOuts.Count());
                            //}
                            //if (item == "C")
                            //{
                            //    pspProActiveParse = Convert.ToDecimal(dataPspProActive.Count());
                            //    pspProActiveParseOuts = Convert.ToDecimal(dataPspProActiveOuts.Count());
                            //}
                        }
                    }
                    else
                    {
                        pipSafetyParse = Convert.ToDecimal(dataPipSafety.Count());
                        pipPriorityParse = Convert.ToDecimal(dataPipPriority.Count());
                        pspProActiveParse = Convert.ToDecimal(0);
                        pspAfterFailureParse = Convert.ToDecimal(0);

                        pipSafetyParseOuts = Convert.ToDecimal(dataPipSafetyOuts.Count());
                        pipPriorityParseOuts = Convert.ToDecimal(dataPipPriorityOuts.Count());
                        pspProActiveParseOuts = Convert.ToDecimal(0);
                        pspAfterFailureParseOuts = Convert.ToDecimal(0);
                    }



                    var countDataPipSafety = pipSafetyParse + pipSafetyParseOuts;
                    var countDataPipPriority = pipPriorityParse + pipPriorityParseOuts;
                    var countDataPspProActive = pspProActiveParse + pspProActiveParseOuts;
                    var countDataPspAfterFailure = pspAfterFailureParse + pspAfterFailureParseOuts;

                    var percentPipSafety = (pipSafetyParse != 0) ? (pipSafetyParse / countDataPipSafety) * 100 : 0;
                    var percentPipPriority = (pipPriorityParse != 0) ? (pipPriorityParse / countDataPipPriority) * 100 : 0;
                    var percentPspProActive = (pspProActiveParse != 0) ? (pspProActiveParse / countDataPspProActive) * 100 : 0;
                    var percentPspAfterFailure = (pspAfterFailureParse != 0) ? (pspAfterFailureParse / countDataPspAfterFailure) * 100 : 0;

                    var percentPipSafetyMathRound = Math.Round(percentPipSafety, 2);
                    var percentPipPriorityMathRound = Math.Round(percentPipPriority, 2);
                    var percentPspProActiveMathRound = Math.Round(percentPspProActive, 2);
                    var percentPspAfterFailureMathRound = Math.Round(percentPspAfterFailure, 2);


                    var listAveragePipSafetyCompAndOuts = new List<decimal>();
                    var listAveragePipPriorityCompAndOuts = new List<decimal>();
                    var listAveragePspProActiveCompAndOuts = new List<decimal>();
                    var listAveragePspAfterFailureCompAndOuts = new List<decimal>();

                    listAveragePipSafetyCompAndOuts.Add(pipSafetyParse);
                    listAveragePipSafetyCompAndOuts.Add(pipSafetyParseOuts);

                    listAveragePipPriorityCompAndOuts.Add(pipPriorityParse);
                    listAveragePipPriorityCompAndOuts.Add(pipPriorityParseOuts);

                    listAveragePspProActiveCompAndOuts.Add(pspProActiveParse);
                    listAveragePspProActiveCompAndOuts.Add(pspProActiveParseOuts);

                    listAveragePspAfterFailureCompAndOuts.Add(pspAfterFailureParse);
                    listAveragePspAfterFailureCompAndOuts.Add(pspAfterFailureParseOuts);

                    listCountAveragePipSafety.Add(percentPipSafetyMathRound);
                    listCountAveragePipPriority.Add(percentPipPriorityMathRound);

                    listCountAveragePspProActive.Add(percentPspProActiveMathRound);
                    listCountAveragePspAfterFailure.Add(percentPspAfterFailureMathRound);

                    listMonth.Add(monthName);

                    var list = new DataChartPSLCompletionSummary();
                    list.MonthName = listMonth;
                    list.RawDataPipSafetyCompAndOuts = listAveragePipSafetyCompAndOuts;
                    list.RawDataPipPriorityCompAndOuts = listAveragePipPriorityCompAndOuts;
                    list.RawDataPspProActiveCompAndOuts = listAveragePspProActiveCompAndOuts;
                    list.RawDataPspAfterFailureCompAndOuts = listAveragePspAfterFailureCompAndOuts;
                    list.DataPercentPipSafety = listCountAveragePipSafety;
                    list.DataPercentPipPriority = listCountAveragePipPriority;
                    list.DataPercentPspProActive = listCountAveragePspProActive;
                    list.DataPercentPspAfterFailure = listCountAveragePspAfterFailure;
                    listItem.Add(list);

                }
            }

            return listItem;
        }

        public List<TablePSLCostRecovery> GetDataTablePSLCostRecovery(string dateFrom, string dateEnd, string[] splitArea, string[] splitModel, string[] splitSalesOffice, string[] splitPslType, string[] splitPslStatus, int column, string order, bool searchArea, bool searchPSLNo, bool searchModel, bool searchUnitQty, bool searchCompleted, bool searchTotalSO, bool searchTotalClaim, bool searchSettled, bool searchSettlement, bool searchRecovery, string valueSearch, string hid, string rental, string inventory, string others, string download, int skip, int take)
        {
            var dateNow = DateTime.Now;
            //_ctx.Configuration.LazyLoadingEnabled = false;
            //_ctx.Configuration.ProxyCreationEnabled = false;
            var getData = (from item in _ctx.PSLMaster
                           where item.Area != "" && item.Area != null && item.TerminationDate.Value.Year == dateNow.Year
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               PSLId = (item.PSLId != null && item.PSLId != "") ? item.PSLId : "-",
                               Area = (item.Area != null && item.Area != "") ? item.Area : "-",
                               Model = (item.Model != null && item.Model != "") ? item.Model : "-",
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ServiceOrderReleaseDate,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               SalesOffice = item.SalesOffice,
                               CompleteYear = item.CompleteYear,
                               TotalSO = (item.SoTotalCost != 0 && item.SoTotalCost != null) ? item.SoTotalCost : 0,
                               TotalClaim = (item.WarrantyClaimTotal != 0 && item.WarrantyClaimTotal != null) ? item.WarrantyClaimTotal : 0,
                               Settled = (item.Settled != 0 && item.Settled != null) ? item.Settled : 0,
                               Recovery = (item.Recovery != 0 && item.Recovery != null) ? item.Recovery : 0,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                               Validation = item.Validation,
                               PslAge = item.PslAge,
                               TotalAmount = item.TotalAmount
                           });

            if (!string.IsNullOrWhiteSpace(dateFrom) && !string.IsNullOrWhiteSpace(dateEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(dateFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(dateEnd, "dd-MM-yyyy", null);
                getData = (from item in getData
                           where item.TerminationDate.Value >= convertToDateTimeFrom && item.TerminationDate.Value <= convertToDateTimeEnd
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               PSLId = (item.PSLId != null && item.PSLId != "") ? item.PSLId : "-",
                               Area = (item.Area != null && item.Area != "") ? item.Area : "-",
                               Model = (item.Model != null && item.Model != "") ? item.Model : "-",
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               SalesOffice = item.SalesOffice,
                               CompleteYear = item.CompleteYear,
                               TotalSO = item.TotalSO,
                               TotalClaim = item.TotalClaim,
                               Settled = (item.Settled != 0 && item.Settled != null) ? item.Settled : 0,
                               Recovery = (item.Recovery != 0 && item.Recovery != null) ? item.Recovery : 0,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                               Validation = item.Validation,
                               PslAge = item.PslAge,
                               TotalAmount = item.TotalAmount
                           });
            }

            if (!string.IsNullOrWhiteSpace(dateFrom) && string.IsNullOrWhiteSpace(dateEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(dateFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(dateEnd, "dd-MM-yyyy", null);
                getData = (from item in getData
                           where item.TerminationDate.Value == convertToDateTimeFrom
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               PSLId = (item.PSLId != null && item.PSLId != "") ? item.PSLId : "-",
                               Area = (item.Area != null && item.Area != "") ? item.Area : "-",
                               Model = (item.Model != null && item.Model != "") ? item.Model : "-",
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               SalesOffice = item.SalesOffice,
                               CompleteYear = item.CompleteYear,
                               TotalSO = item.TotalSO,
                               TotalClaim = item.TotalClaim,
                               Settled = (item.Settled != 0 && item.Settled != null) ? item.Settled : 0,
                               Recovery = (item.Recovery != 0 && item.Recovery != null) ? item.Recovery : 0,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                               Validation = item.Validation,
                               PslAge = item.PslAge,
                               TotalAmount = item.TotalAmount
                           });
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                getData = (from item in getData
                           where item.HIDStatus != "" || item.RentStatus != ""
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               PSLId = (item.PSLId != null && item.PSLId != "") ? item.PSLId : "-",
                               Area = (item.Area != null && item.Area != "") ? item.Area : "-",
                               Model = (item.Model != null && item.Model != "") ? item.Model : "-",
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               SalesOffice = item.SalesOffice,
                               CompleteYear = item.CompleteYear,
                               TotalSO = item.TotalSO,
                               TotalClaim = item.TotalClaim,
                               Settled = (item.Settled != 0 && item.Settled != null) ? item.Settled : 0,
                               Recovery = (item.Recovery != 0 && item.Recovery != null) ? item.Recovery : 0,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                               Validation = item.Validation,
                               PslAge = item.PslAge,
                               TotalAmount = item.TotalAmount
                           });
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                getData = (from item in getData
                           where item.HIDStatus != "" || item.Plant != ""
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               PSLId = (item.PSLId != null && item.PSLId != "") ? item.PSLId : "-",
                               Area = (item.Area != null && item.Area != "") ? item.Area : "-",
                               Model = (item.Model != null && item.Model != "") ? item.Model : "-",
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               SalesOffice = item.SalesOffice,
                               CompleteYear = item.CompleteYear,
                               TotalSO = item.TotalSO,
                               TotalClaim = item.TotalClaim,
                               Settled = (item.Settled != 0 && item.Settled != null) ? item.Settled : 0,
                               Recovery = (item.Recovery != 0 && item.Recovery != null) ? item.Recovery : 0,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                               Validation = item.Validation,
                               PslAge = item.PslAge,
                               TotalAmount = item.TotalAmount
                           });
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                getData = (from item in getData
                           where item.RentStatus != ""
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               PSLId = (item.PSLId != null && item.PSLId != "") ? item.PSLId : "-",
                               Area = (item.Area != null && item.Area != "") ? item.Area : "-",
                               Model = (item.Model != null && item.Model != "") ? item.Model : "-",
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               SalesOffice = item.SalesOffice,
                               CompleteYear = item.CompleteYear,
                               TotalSO = item.TotalSO,
                               TotalClaim = item.TotalClaim,
                               Settled = (item.Settled != 0 && item.Settled != null) ? item.Settled : 0,
                               Recovery = (item.Recovery != 0 && item.Recovery != null) ? item.Recovery : 0,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                               Validation = item.Validation,
                               PslAge = item.PslAge,
                               TotalAmount = item.TotalAmount
                           });
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                getData = (from item in getData
                           where item.RentStatus != "" || item.Plant != ""
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               PSLId = (item.PSLId != null && item.PSLId != "") ? item.PSLId : "-",
                               Area = (item.Area != null && item.Area != "") ? item.Area : "-",
                               Model = (item.Model != null && item.Model != "") ? item.Model : "-",
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               SalesOffice = item.SalesOffice,
                               CompleteYear = item.CompleteYear,
                               TotalSO = item.TotalSO,
                               TotalClaim = item.TotalClaim,
                               Settled = (item.Settled != 0 && item.Settled != null) ? item.Settled : 0,
                               Recovery = (item.Recovery != 0 && item.Recovery != null) ? item.Recovery : 0,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                               Validation = item.Validation,
                               PslAge = item.PslAge,
                               TotalAmount = item.TotalAmount
                           });
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                getData = (from item in getData
                           where item.Plant != ""
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               PSLId = (item.PSLId != null && item.PSLId != "") ? item.PSLId : "-",
                               Area = (item.Area != null && item.Area != "") ? item.Area : "-",
                               Model = (item.Model != null && item.Model != "") ? item.Model : "-",
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               SalesOffice = item.SalesOffice,
                               CompleteYear = item.CompleteYear,
                               TotalSO = item.TotalSO,
                               TotalClaim = item.TotalClaim,
                               Settled = (item.Settled != 0 && item.Settled != null) ? item.Settled : 0,
                               Recovery = (item.Recovery != 0 && item.Recovery != null) ? item.Recovery : 0,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                               Validation = item.Validation,
                               PslAge = item.PslAge,
                               TotalAmount = item.TotalAmount
                           });
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                getData = (from item in getData
                           where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               PSLId = (item.PSLId != null && item.PSLId != "") ? item.PSLId : "-",
                               Area = (item.Area != null && item.Area != "") ? item.Area : "-",
                               Model = (item.Model != null && item.Model != "") ? item.Model : "-",
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               SalesOffice = item.SalesOffice,
                               CompleteYear = item.CompleteYear,
                               TotalSO = item.TotalSO,
                               TotalClaim = item.TotalClaim,
                               Settled = (item.Settled != 0 && item.Settled != null) ? item.Settled : 0,
                               Recovery = (item.Recovery != 0 && item.Recovery != null) ? item.Recovery : 0,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                               Validation = item.Validation,
                               PslAge = item.PslAge,
                               TotalAmount = item.TotalAmount
                           });
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                getData = (from item in getData
                           where item.HIDStatus == "" || item.RentStatus == "" || item.Plant == ""
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               PSLId = (item.PSLId != null && item.PSLId != "") ? item.PSLId : "-",
                               Area = (item.Area != null && item.Area != "") ? item.Area : "-",
                               Model = (item.Model != null && item.Model != "") ? item.Model : "-",
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               SalesOffice = item.SalesOffice,
                               CompleteYear = item.CompleteYear,
                               TotalSO = item.TotalSO,
                               TotalClaim = item.TotalClaim,
                               Settled = (item.Settled != 0 && item.Settled != null) ? item.Settled : 0,
                               Recovery = (item.Recovery != 0 && item.Recovery != null) ? item.Recovery : 0,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                               Validation = item.Validation,
                               PslAge = item.PslAge,
                               TotalAmount = item.TotalAmount
                           });
            }

            if (splitArea.Count() > 0 && splitArea != null)
            {
                getData = (from item in getData
                           where splitArea.Contains(item.Area)
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               PSLId = (item.PSLId != null && item.PSLId != "") ? item.PSLId : "-",
                               Area = (item.Area != null && item.Area != "") ? item.Area : "-",
                               Model = (item.Model != null && item.Model != "") ? item.Model : "-",
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               SalesOffice = item.SalesOffice,
                               CompleteYear = item.CompleteYear,
                               TotalSO = item.TotalSO,
                               TotalClaim = item.TotalClaim,
                               Settled = (item.Settled != 0 && item.Settled != null) ? item.Settled : 0,
                               Recovery = (item.Recovery != 0 && item.Recovery != null) ? item.Recovery : 0,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                               Validation = item.Validation,
                               PslAge = item.PslAge,
                               TotalAmount = item.TotalAmount
                           });
            }
            if (splitModel.Count() > 0 && splitModel != null)
            {
                getData = (from item in getData
                           where splitModel.Contains(item.Model)
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               PSLId = (item.PSLId != null && item.PSLId != "") ? item.PSLId : "-",
                               Area = (item.Area != null && item.Area != "") ? item.Area : "-",
                               Model = (item.Model != null && item.Model != "") ? item.Model : "-",
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               SalesOffice = item.SalesOffice,
                               CompleteYear = item.CompleteYear,
                               TotalSO = item.TotalSO,
                               TotalClaim = item.TotalClaim,
                               Settled = (item.Settled != 0 && item.Settled != null) ? item.Settled : 0,
                               Recovery = (item.Recovery != 0 && item.Recovery != null) ? item.Recovery : 0,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                               Validation = item.Validation,
                               PslAge = item.PslAge,
                               TotalAmount = item.TotalAmount
                           });
            }
            if (splitSalesOffice.Count() > 0 && splitSalesOffice != null)
            {
                getData = (from item in getData
                           where splitSalesOffice.Contains(item.SalesOffice)
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               PSLId = (item.PSLId != null && item.PSLId != "") ? item.PSLId : "-",
                               Area = (item.Area != null && item.Area != "") ? item.Area : "-",
                               Model = (item.Model != null && item.Model != "") ? item.Model : "-",
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               SalesOffice = item.SalesOffice,
                               CompleteYear = item.CompleteYear,
                               TotalSO = item.TotalSO,
                               TotalClaim = item.TotalClaim,
                               Settled = (item.Settled != 0 && item.Settled != null) ? item.Settled : 0,
                               Recovery = (item.Recovery != 0 && item.Recovery != null) ? item.Recovery : 0,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                               Validation = item.Validation,
                               PslAge = item.PslAge,
                               TotalAmount = item.TotalAmount
                           });
            }

            if (splitPslType.Count() > 0 && splitPslType != null)
            {
                getData = (from item in getData
                           where splitPslType.Contains(item.PSLType)
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               PSLId = (item.PSLId != null && item.PSLId != "") ? item.PSLId : "-",
                               Area = (item.Area != null && item.Area != "") ? item.Area : "-",
                               Model = (item.Model != null && item.Model != "") ? item.Model : "-",
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               SalesOffice = item.SalesOffice,
                               CompleteYear = item.CompleteYear,
                               TotalSO = item.TotalSO,
                               TotalClaim = item.TotalClaim,
                               Settled = (item.Settled != 0 && item.Settled != null) ? item.Settled : 0,
                               Recovery = (item.Recovery != 0 && item.Recovery != null) ? item.Recovery : 0,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                               Validation = item.Validation,
                               PslAge = item.PslAge,
                               TotalAmount = item.TotalAmount
                           });
            }
            if (splitPslStatus.Count() > 0 && splitPslStatus != null)
            {
                getData = (from item in getData
                           where splitPslStatus.Contains(item.SapPSLStatus)
                           select new
                           {
                               PSLMasterId = item.PSLMasterId,
                               PSLId = (item.PSLId != null && item.PSLId != "") ? item.PSLId : "-",
                               Area = (item.Area != null && item.Area != "") ? item.Area : "-",
                               Model = (item.Model != null && item.Model != "") ? item.Model : "-",
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               SalesOffice = item.SalesOffice,
                               CompleteYear = item.CompleteYear,
                               TotalSO = item.TotalSO,
                               TotalClaim = item.TotalClaim,
                               Settled = (item.Settled != 0 && item.Settled != null) ? item.Settled : 0,
                               Recovery = (item.Recovery != 0 && item.Recovery != null) ? item.Recovery : 0,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                               DaysToExpired = item.DaysToExpired,
                               WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                               Validation = item.Validation,
                               PslAge = item.PslAge,
                               TotalAmount = item.TotalAmount
                           });
            }
            
            if (!string.IsNullOrWhiteSpace(valueSearch))
            {
                getData = getData.Where(item => item.Area.ToLower().Contains(valueSearch.ToLower()) || item.PSLId.ToLower().Contains(valueSearch.ToLower()));
            }
            var groupItem = getData.GroupBy(g => new { g.Area, g.PSLId }).Select(pslid => new
            {
                Area = pslid.FirstOrDefault().Area,
                PSLId = pslid.FirstOrDefault().PSLId,
                TotalAmount = pslid.FirstOrDefault().TotalAmount,
                TotalSO = pslid.FirstOrDefault().TotalSO,
                TotalClaim = pslid.FirstOrDefault().TotalClaim,
                Settled = pslid.FirstOrDefault().Settled,
                ReleaseDate = pslid.FirstOrDefault().ReleaseDate,
                TerminationDate = pslid.FirstOrDefault().TerminationDate,
                DaysToExpired = pslid.FirstOrDefault().DaysToExpired,
                Validation = pslid.FirstOrDefault().Validation,
                PslAge = pslid.FirstOrDefault().PslAge
            });


            var listItem = new List<TablePSLCostRecovery>();
            var countData = groupItem.Count();
            if(download == "0")
            {
                int ida = 0;
                foreach (var item in groupItem.OrderBy(odb => odb.Area).Skip(skip).Take(take).ToList())
                {
                    var list = new TablePSLCostRecovery();
                    list.Row = ida++;
                    if (!string.IsNullOrWhiteSpace(item.Area))
                    {
                        list.Area = item.Area;
                    }
                    else
                    {
                        list.Area = "-";
                    }
                    list.PSLId = item.PSLId;
                    list.TotalAmount = item.TotalAmount;
                    list.TotalSO = item.TotalSO;
                    list.TotalClaim = item.TotalClaim;
                    list.Settled = item.Settled;
                    list.ReleaseDate = item.ReleaseDate;
                    list.TerminationDate = item.TerminationDate;
                    list.DaysToExpired = item.DaysToExpired;
                    list.Validation = item.Validation;
                    list.PslAge = item.PslAge;
                    list.CountData = countData;
                    listItem.Add(list);
                }
            }
            else
            {
                int ida = 0;
                foreach (var item in groupItem.ToList())
                {
                    var list = new TablePSLCostRecovery();
                    list.Row = ida++;
                    if (!string.IsNullOrWhiteSpace(item.Area))
                    {
                        list.Area = item.Area;
                    }
                    else
                    {
                        list.Area = "-";
                    }
                    list.PSLId = item.PSLId;
                    list.TotalAmount = item.TotalAmount;
                    list.TotalSO = item.TotalSO;
                    list.TotalClaim = item.TotalClaim;
                    list.Settled = item.Settled;
                    list.ReleaseDate = item.ReleaseDate;
                    list.TerminationDate = item.TerminationDate;
                    list.DaysToExpired = item.DaysToExpired;
                    list.Validation = item.Validation;
                    list.PslAge = item.PslAge;
                    list.CountData = countData;
                    listItem.Add(list);
                }
            }
            return listItem;
        }

        //public List<string> GetPSLID(string area)
        //{
        //    var result = new List<string>();
        //    var getData = (from item in _ctx.PSLMaster
        //                   where item.Area == area
        //                   group item by item.PSLId into pslid
        //                   select new
        //                   {
        //                       PSLId = pslid.FirstOrDefault().PSLId
        //                   }).ToList();
        //    foreach(var item in getData)
        //    {
        //        result.Add(item.PSLId)
        //    }
        //}

        public List<GetPSLIdFromAreaCostRecovery> getPSLId(string area, string dateFrom, string dateEnd, string[] splitArea, string[] splitModel, string[] splitSalesOffice, string[] splitPslType, string[] splitPslStatus, string hid, string rental, string inventory, string others)
        {
            var getData = (from item in _ctx.PSLMaster
                           where item.Area == area && item.TerminationDate.Value.Year == DateTime.Now.Year
                           select new
                           {
                               PSLId = item.PSLId,
                               TerminationDate = item.TerminationDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Model = item.Model,
                               SalesOffice = item.SalesOffice,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               LetterDate = item.LetterDate,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            if (!string.IsNullOrWhiteSpace(dateFrom) && !string.IsNullOrWhiteSpace(dateEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(dateFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(dateEnd, "dd-MM-yyyy", null);
                getData = (from item in getData
                           where item.TerminationDate.Value >= convertToDateTimeFrom && item.TerminationDate.Value <= convertToDateTimeEnd
                           select new
                           {
                               PSLId = item.PSLId,
                               TerminationDate = item.TerminationDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Model = item.Model,
                               SalesOffice = item.SalesOffice,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               LetterDate = item.LetterDate,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }

            if (!string.IsNullOrWhiteSpace(dateFrom) && string.IsNullOrWhiteSpace(dateEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(dateFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(dateEnd, "dd-MM-yyyy", null);
                getData = (from item in getData
                           where item.TerminationDate.Value == convertToDateTimeFrom
                           select new
                           {
                               PSLId = item.PSLId,
                               TerminationDate = item.TerminationDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Model = item.Model,
                               SalesOffice = item.SalesOffice,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               LetterDate = item.LetterDate,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }

            if (hid == "on")
            {
                getData = (from item in getData
                           where item.HIDStatus != null
                           select new
                           {
                               PSLId = item.PSLId,
                               TerminationDate = item.TerminationDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Model = item.Model,
                               SalesOffice = item.SalesOffice,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               LetterDate = item.LetterDate,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }

            if (rental == "on")
            {
                getData = (from item in getData
                           where item.RentStatus != null
                           select new
                           {
                               PSLId = item.PSLId,
                               TerminationDate = item.TerminationDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Model = item.Model,
                               SalesOffice = item.SalesOffice,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               LetterDate = item.LetterDate,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }

            if (inventory == "on")
            {
                getData = (from item in getData
                           where item.Plant != null
                           select new
                           {
                               PSLId = item.PSLId,
                               TerminationDate = item.TerminationDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Model = item.Model,
                               SalesOffice = item.SalesOffice,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               LetterDate = item.LetterDate,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }

            if (others == "on")
            {
                getData = (from item in getData
                           where item.Plant == null && item.HIDStatus == null && item.RentStatus == null
                           select new
                           {
                               PSLId = item.PSLId,
                               TerminationDate = item.TerminationDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Model = item.Model,
                               SalesOffice = item.SalesOffice,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               LetterDate = item.LetterDate,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }
            
            if (splitModel.Count() > 0 && splitModel != null)
            {
                getData = (from item in getData
                           where splitModel.Contains(item.Model)
                           select new
                           {
                               PSLId = item.PSLId,
                               TerminationDate = item.TerminationDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Model = item.Model,
                               SalesOffice = item.SalesOffice,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               LetterDate = item.LetterDate,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }
            if (splitSalesOffice.Count() > 0 && splitSalesOffice != null)
            {
                getData = (from item in getData
                           where splitSalesOffice.Contains(item.SalesOffice)
                           select new
                           {
                               PSLId = item.PSLId,
                               TerminationDate = item.TerminationDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Model = item.Model,
                               SalesOffice = item.SalesOffice,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               LetterDate = item.LetterDate,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }

            if (splitPslType.Count() > 0 && splitPslType != null)
            {
                getData = (from item in getData
                           where splitPslType.Contains(item.PSLType)
                           select new
                           {
                               PSLId = item.PSLId,
                               TerminationDate = item.TerminationDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Model = item.Model,
                               SalesOffice = item.SalesOffice,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               LetterDate = item.LetterDate,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }
            if (splitPslStatus.Count() > 0 && splitPslStatus != null)
            {
                getData = (from item in getData
                           where splitPslStatus.Contains(item.SapPSLStatus)
                           select new
                           {
                               PSLId = item.PSLId,
                               TerminationDate = item.TerminationDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant,
                               Model = item.Model,
                               SalesOffice = item.SalesOffice,
                               PSLType = item.PSLType,
                               SapPSLStatus = item.SapPSLStatus,
                               LetterDate = item.LetterDate,
                               DaysToExpired = item.DaysToExpired,
                               Validation = item.Validation
                           });
            }

            var groupData = (from item in getData
                             group item by item.PSLId into pslid
                             select new
                             {
                                 PSLId = pslid.FirstOrDefault().PSLId,
                                 TerminationDate = pslid.FirstOrDefault().TerminationDate,
                                 ReleaseDate = pslid.FirstOrDefault().LetterDate,
                                 DayToExpired = pslid.FirstOrDefault().DaysToExpired,
                                 Validation = pslid.FirstOrDefault().Validation
                             });
            var listItem = new List<GetPSLIdFromAreaCostRecovery>();
            foreach(var item in groupData)
            {
                var data = new GetPSLIdFromAreaCostRecovery();
                //var getDataModel = getModel(area, item.PSLId, dateFrom, dateEnd, splitArea, splitModel, splitSalesOffice, splitPslType, splitPslStatus, hid, rental, inventory, others);
                data.PSLId = item.PSLId;
                //data.Model = getDataModel;
                data.TerminationDate = item.TerminationDate;
                data.LetterDate = item.ReleaseDate;
                data.DaysToExpired = item.DayToExpired;
                data.Validation = item.Validation;
                listItem.Add(data);
            }
            return listItem;
        }

        //public List<GetModelFromPSLIdAreaCostRecovery> getModel(string area, string pslid, string dateFrom, string dateEnd, string[] splitArea, string[] splitModel, string[] splitSalesOffice, string[] splitPslType, string[] splitPslStatus, string hid, string rental, string inventory, string others)
        //{
        //    var getData = (from item in _ctx.PSLMaster
        //                   where item.Area == area && item.PSLId == pslid && item.TerminationDate.Value.Year == DateTime.Now.Year
        //                   select new
        //                   {
        //                       PSLId = item.PSLId,
        //                       TerminationDate = item.TerminationDate,
        //                       HIDStatus = item.HIDStatus,
        //                       RentStatus = item.RentStatus,
        //                       Plant = item.Plant,
        //                       Model = item.Model,
        //                       SalesOffice = item.SalesOffice,
        //                       PSLType = item.PSLType,
        //                       SapPSLStatus = item.SapPSLStatus
        //                   });
        //    if (!string.IsNullOrWhiteSpace(dateFrom) && !string.IsNullOrWhiteSpace(dateEnd))
        //    {
        //        var convertToDateTimeFrom = DateTime.ParseExact(dateFrom, "dd-MM-yyyy", null);
        //        var convertToDateTimeEnd = DateTime.ParseExact(dateEnd, "dd-MM-yyyy", null);
        //        getData = (from item in getData
        //                   where item.TerminationDate.Value >= convertToDateTimeFrom && item.TerminationDate.Value <= convertToDateTimeEnd
        //                   select new
        //                   {
        //                       PSLId = item.PSLId,
        //                       TerminationDate = item.TerminationDate,
        //                       HIDStatus = item.HIDStatus,
        //                       RentStatus = item.RentStatus,
        //                       Plant = item.Plant,
        //                       Model = item.Model,
        //                       SalesOffice = item.SalesOffice,
        //                       PSLType = item.PSLType,
        //                       SapPSLStatus = item.SapPSLStatus
        //                   });
        //    }

        //    if (!string.IsNullOrWhiteSpace(dateFrom) && string.IsNullOrWhiteSpace(dateEnd))
        //    {
        //        var convertToDateTimeFrom = DateTime.ParseExact(dateFrom, "dd-MM-yyyy", null);
        //        var convertToDateTimeEnd = DateTime.ParseExact(dateEnd, "dd-MM-yyyy", null);
        //        getData = (from item in getData
        //                   where item.TerminationDate.Value == convertToDateTimeFrom
        //                   select new
        //                   {
        //                       PSLId = item.PSLId,
        //                       TerminationDate = item.TerminationDate,
        //                       HIDStatus = item.HIDStatus,
        //                       RentStatus = item.RentStatus,
        //                       Plant = item.Plant,
        //                       Model = item.Model,
        //                       SalesOffice = item.SalesOffice,
        //                       PSLType = item.PSLType,
        //                       SapPSLStatus = item.SapPSLStatus
        //                   });
        //    }

        //    if (hid == "on")
        //    {
        //        getData = (from item in getData
        //                   where item.HIDStatus != null
        //                   select new
        //                   {
        //                       PSLId = item.PSLId,
        //                       TerminationDate = item.TerminationDate,
        //                       HIDStatus = item.HIDStatus,
        //                       RentStatus = item.RentStatus,
        //                       Plant = item.Plant,
        //                       Model = item.Model,
        //                       SalesOffice = item.SalesOffice,
        //                       PSLType = item.PSLType,
        //                       SapPSLStatus = item.SapPSLStatus
        //                   });
        //    }

        //    if (rental == "on")
        //    {
        //        getData = (from item in getData
        //                   where item.RentStatus != null
        //                   select new
        //                   {
        //                       PSLId = item.PSLId,
        //                       TerminationDate = item.TerminationDate,
        //                       HIDStatus = item.HIDStatus,
        //                       RentStatus = item.RentStatus,
        //                       Plant = item.Plant,
        //                       Model = item.Model,
        //                       SalesOffice = item.SalesOffice,
        //                       PSLType = item.PSLType,
        //                       SapPSLStatus = item.SapPSLStatus
        //                   });
        //    }

        //    if (inventory == "on")
        //    {
        //        getData = (from item in getData
        //                   where item.Plant != null
        //                   select new
        //                   {
        //                       PSLId = item.PSLId,
        //                       TerminationDate = item.TerminationDate,
        //                       HIDStatus = item.HIDStatus,
        //                       RentStatus = item.RentStatus,
        //                       Plant = item.Plant,
        //                       Model = item.Model,
        //                       SalesOffice = item.SalesOffice,
        //                       PSLType = item.PSLType,
        //                       SapPSLStatus = item.SapPSLStatus
        //                   });
        //    }

        //    if (others == "on")
        //    {
        //        getData = (from item in getData
        //                   where item.Plant == null && item.HIDStatus == null && item.RentStatus == null
        //                   select new
        //                   {
        //                       PSLId = item.PSLId,
        //                       TerminationDate = item.TerminationDate,
        //                       HIDStatus = item.HIDStatus,
        //                       RentStatus = item.RentStatus,
        //                       Plant = item.Plant,
        //                       Model = item.Model,
        //                       SalesOffice = item.SalesOffice,
        //                       PSLType = item.PSLType,
        //                       SapPSLStatus = item.SapPSLStatus
        //                   });
        //    }

        //    if (splitModel.Count() > 0 && splitModel != null)
        //    {
        //        getData = (from item in getData
        //                   where splitModel.Contains(item.Model)
        //                   select new
        //                   {
        //                       PSLId = item.PSLId,
        //                       TerminationDate = item.TerminationDate,
        //                       HIDStatus = item.HIDStatus,
        //                       RentStatus = item.RentStatus,
        //                       Plant = item.Plant,
        //                       Model = item.Model,
        //                       SalesOffice = item.SalesOffice,
        //                       PSLType = item.PSLType,
        //                       SapPSLStatus = item.SapPSLStatus
        //                   });
        //    }
        //    if (splitSalesOffice.Count() > 0 && splitSalesOffice != null)
        //    {
        //        getData = (from item in getData
        //                   where splitSalesOffice.Contains(item.SalesOffice)
        //                   select new
        //                   {
        //                       PSLId = item.PSLId,
        //                       TerminationDate = item.TerminationDate,
        //                       HIDStatus = item.HIDStatus,
        //                       RentStatus = item.RentStatus,
        //                       Plant = item.Plant,
        //                       Model = item.Model,
        //                       SalesOffice = item.SalesOffice,
        //                       PSLType = item.PSLType,
        //                       SapPSLStatus = item.SapPSLStatus
        //                   });
        //    }

        //    if (splitPslType.Count() > 0 && splitPslType != null)
        //    {
        //        getData = (from item in getData
        //                   where splitPslType.Contains(item.PSLType)
        //                   select new
        //                   {
        //                       PSLId = item.PSLId,
        //                       TerminationDate = item.TerminationDate,
        //                       HIDStatus = item.HIDStatus,
        //                       RentStatus = item.RentStatus,
        //                       Plant = item.Plant,
        //                       Model = item.Model,
        //                       SalesOffice = item.SalesOffice,
        //                       PSLType = item.PSLType,
        //                       SapPSLStatus = item.SapPSLStatus
        //                   });
        //    }
        //    if (splitPslStatus.Count() > 0 && splitPslStatus != null)
        //    {
        //        getData = (from item in getData
        //                   where splitPslStatus.Contains(item.SapPSLStatus)
        //                   select new
        //                   {
        //                       PSLId = item.PSLId,
        //                       TerminationDate = item.TerminationDate,
        //                       HIDStatus = item.HIDStatus,
        //                       RentStatus = item.RentStatus,
        //                       Plant = item.Plant,
        //                       Model = item.Model,
        //                       SalesOffice = item.SalesOffice,
        //                       PSLType = item.PSLType,
        //                       SapPSLStatus = item.SapPSLStatus
        //                   });
        //    }
        //    var groupData = (from item in getData
        //                     group item by item.Model into model
        //                     select new
        //                     {
        //                         Model = model.FirstOrDefault().Model
        //                     });
        //    var listItem = new List<GetModelFromPSLIdAreaCostRecovery>();
        //    foreach(var item in groupData)
        //    {
        //        var data = new GetModelFromPSLIdAreaCostRecovery();
        //        data.Model = item.Model;
        //        listItem.Add(data);
        //    }
        //    return listItem;

        //}

        public List<TablePSLExecution> GetDataForTablePSLExecuton(string[] splitArea, string[] splitModel, string[] splitPSLNo, string[] splitPSLStatus, string[] splitSOStatus, bool searchSerialNumber, bool searchArea, bool searchSalesOffice, bool searchCustomer, bool searchStatus, string valueSearch, string hid, string rental, string inventory, string orderByDir, string orderByColumn, int start, int length, string others)
        {
            orderByColumn = orderByColumn.ToLower();

            var listItem = new List<TablePSLExecution>();
            var getData = (from item in _ctx.PSLMaster
                           where item.Area != null && item.Area != ""
                           group item by item.SerialNumber into a
                           select new
                           {
                               pslMasterId = a.FirstOrDefault().PSLMasterId,
                               serialNumber = a.FirstOrDefault().SerialNumber,
                               pslSn = a.FirstOrDefault().PSLId,
                               area = a.FirstOrDefault().Area,
                               salesffice = a.FirstOrDefault().SalesOffice,
                               customer = a.FirstOrDefault().SapCustomerName,
                               model = a.FirstOrDefault().Model,
                               soStatus = a.FirstOrDefault().ServiceOrderStatusDesc,
                               pslStatus = a.FirstOrDefault().SapPSLStatus,
                               pslId = a.FirstOrDefault().PSLId,
                               rentStatus = a.FirstOrDefault().RentStatus,
                               hidStatus = a.FirstOrDefault().HIDStatus,
                               inventoryPlant = a.FirstOrDefault().Plant,
                           });

            if (splitArea.Count() <= 0 && splitModel.Count() <= 0 && splitPSLNo.Count() <= 0 && splitPSLStatus.Count() <= 0 && splitSOStatus.Count() <= 0 && rental == "" && hid == "" && inventory == "")
            {
                getData = (from item in _ctx.PSLMaster
                           where item.SapPSLStatus == "Open"
                           group item by item.SerialNumber into a
                           select new
                           {
                               pslMasterId = a.FirstOrDefault().PSLMasterId,
                               serialNumber = a.FirstOrDefault().SerialNumber,
                               pslSn = a.FirstOrDefault().PSLId,
                               area = a.FirstOrDefault().Area,
                               salesffice = a.FirstOrDefault().SalesOffice,
                               customer = a.FirstOrDefault().SapCustomerName,
                               model = a.FirstOrDefault().Model,
                               soStatus = a.FirstOrDefault().ServiceOrderStatusDesc,
                               pslStatus = a.FirstOrDefault().SapPSLStatus,
                               pslId = a.FirstOrDefault().PSLId,
                               rentStatus = a.FirstOrDefault().RentStatus,
                               hidStatus = a.FirstOrDefault().HIDStatus,
                               inventoryPlant = a.FirstOrDefault().Plant,
                           }).Take(100);
            }

            if (hid == "on" && rental == "" && inventory == "")
            {
                getData = (from item in getData
                           where item.hidStatus != ""
                           select new
                           {
                               pslMasterId = item.pslMasterId,
                               serialNumber = item.serialNumber,
                               pslSn = item.pslSn,
                               area = item.area,
                               salesffice = item.salesffice,
                               customer = item.customer,
                               model = item.model,
                               soStatus = item.soStatus,
                               pslStatus = item.pslStatus,
                               pslId = item.pslId,
                               rentStatus = item.rentStatus,
                               hidStatus = item.hidStatus,
                               inventoryPlant = item.inventoryPlant
                           });
            }
            else if (hid == "on" && rental == "on" && inventory == "")
            {
                getData = (from item in getData
                           where item.hidStatus != "" || item.rentStatus != ""
                           select new
                           {
                               pslMasterId = item.pslMasterId,
                               serialNumber = item.serialNumber,
                               pslSn = item.pslSn,
                               area = item.area,
                               salesffice = item.salesffice,
                               customer = item.customer,
                               model = item.model,
                               soStatus = item.soStatus,
                               pslStatus = item.pslStatus,
                               pslId = item.pslId,
                               rentStatus = item.rentStatus,
                               hidStatus = item.hidStatus,
                               inventoryPlant = item.inventoryPlant
                           });
            }
            else if (hid == "on" && rental == "" && inventory == "on")
            {
                getData = (from item in getData
                           where item.hidStatus != "" || item.inventoryPlant != ""
                           select new
                           {
                               pslMasterId = item.pslMasterId,
                               serialNumber = item.serialNumber,
                               pslSn = item.pslSn,
                               area = item.area,
                               salesffice = item.salesffice,
                               customer = item.customer,
                               model = item.model,
                               soStatus = item.soStatus,
                               pslStatus = item.pslStatus,
                               pslId = item.pslId,
                               rentStatus = item.rentStatus,
                               hidStatus = item.hidStatus,
                               inventoryPlant = item.inventoryPlant
                           });
            }
            else if (hid == "" && rental == "on" && inventory == "")
            {
                getData = (from item in getData
                           where item.rentStatus != ""
                           select new
                           {
                               pslMasterId = item.pslMasterId,
                               serialNumber = item.serialNumber,
                               pslSn = item.pslSn,
                               area = item.area,
                               salesffice = item.salesffice,
                               customer = item.customer,
                               model = item.model,
                               soStatus = item.soStatus,
                               pslStatus = item.pslStatus,
                               pslId = item.pslId,
                               rentStatus = item.rentStatus,
                               hidStatus = item.hidStatus,
                               inventoryPlant = item.inventoryPlant
                           });
            }
            else if (hid == "" && rental == "on" && inventory == "on")
            {
                getData = (from item in getData
                           where item.rentStatus != "" || item.inventoryPlant != ""
                           select new
                           {
                               pslMasterId = item.pslMasterId,
                               serialNumber = item.serialNumber,
                               pslSn = item.pslSn,
                               area = item.area,
                               salesffice = item.salesffice,
                               customer = item.customer,
                               model = item.model,
                               soStatus = item.soStatus,
                               pslStatus = item.pslStatus,
                               pslId = item.pslId,
                               rentStatus = item.rentStatus,
                               hidStatus = item.hidStatus,
                               inventoryPlant = item.inventoryPlant
                           });
            }
            else if (hid == "" && rental == "" && inventory == "on")
            {
                getData = (from item in getData
                           where item.inventoryPlant != ""
                           select new
                           {
                               pslMasterId = item.pslMasterId,
                               serialNumber = item.serialNumber,
                               pslSn = item.pslSn,
                               area = item.area,
                               salesffice = item.salesffice,
                               customer = item.customer,
                               model = item.model,
                               soStatus = item.soStatus,
                               pslStatus = item.pslStatus,
                               pslId = item.pslId,
                               rentStatus = item.rentStatus,
                               hidStatus = item.hidStatus,
                               inventoryPlant = item.inventoryPlant
                           });
            }
            else if (hid == "on" && rental == "on" && inventory == "on")
            {
                getData = (from item in getData
                           where item.rentStatus != "" || item.inventoryPlant != "" || item.hidStatus != ""
                           select new
                           {
                               pslMasterId = item.pslMasterId,
                               serialNumber = item.serialNumber,
                               pslSn = item.pslSn,
                               area = item.area,
                               salesffice = item.salesffice,
                               customer = item.customer,
                               model = item.model,
                               soStatus = item.soStatus,
                               pslStatus = item.pslStatus,
                               pslId = item.pslId,
                               rentStatus = item.rentStatus,
                               hidStatus = item.hidStatus,
                               inventoryPlant = item.inventoryPlant
                           });
            }
            else if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                getData = (from item in getData
                           where item.hidStatus == "" || item.rentStatus == "" || item.inventoryPlant == ""
                           select new
                           {
                               pslMasterId = item.pslMasterId,
                               serialNumber = item.serialNumber,
                               pslSn = item.pslSn,
                               area = item.area,
                               salesffice = item.salesffice,
                               customer = item.customer,
                               model = item.model,
                               soStatus = item.soStatus,
                               pslStatus = item.pslStatus,
                               pslId = item.pslId,
                               rentStatus = item.rentStatus,
                               hidStatus = item.hidStatus,
                               inventoryPlant = item.inventoryPlant
                           });
            }
            if (splitArea.Count() > 0 && splitArea != null)
            {
                getData = (from item in getData
                           where splitArea.Contains(item.area)
                           select new
                           {
                               pslMasterId = item.pslMasterId,
                               serialNumber = item.serialNumber,
                               pslSn = item.pslSn,
                               area = item.area,
                               salesffice = item.salesffice,
                               customer = item.customer,
                               model = item.model,
                               soStatus = item.soStatus,
                               pslStatus = item.pslStatus,
                               pslId = item.pslId,
                               rentStatus = item.rentStatus,
                               hidStatus = item.hidStatus,
                               inventoryPlant = item.inventoryPlant
                           });
            }

            if (splitModel.Count() > 0 && splitModel != null)
            {
                getData = (from item in getData
                           where splitModel.Contains(item.model)
                           select new
                           {
                               pslMasterId = item.pslMasterId,
                               serialNumber = item.serialNumber,
                               pslSn = item.pslSn,
                               area = item.area,
                               salesffice = item.salesffice,
                               customer = item.customer,
                               model = item.model,
                               soStatus = item.soStatus,
                               pslStatus = item.pslStatus,
                               pslId = item.pslId,
                               rentStatus = item.rentStatus,
                               hidStatus = item.hidStatus,
                               inventoryPlant = item.inventoryPlant
                           });
            }

            if (splitPSLNo.Count() > 0 && splitPSLNo != null)
            {
                getData = (from item in getData
                           where splitPSLNo.Contains(item.pslId)
                           select new
                           {
                               pslMasterId = item.pslMasterId,
                               serialNumber = item.serialNumber,
                               pslSn = item.pslSn,
                               area = item.area,
                               salesffice = item.salesffice,
                               customer = item.customer,
                               model = item.model,
                               soStatus = item.soStatus,
                               pslStatus = item.pslStatus,
                               pslId = item.pslId,
                               rentStatus = item.rentStatus,
                               hidStatus = item.hidStatus,
                               inventoryPlant = item.inventoryPlant
                           });
            }

            if (splitPSLStatus.Count() > 0 && splitPSLStatus != null)
            {
                getData = (from item in getData
                           where splitPSLStatus.Contains(item.pslStatus)
                           select new
                           {
                               pslMasterId = item.pslMasterId,
                               serialNumber = item.serialNumber,
                               pslSn = item.pslSn,
                               area = item.area,
                               salesffice = item.salesffice,
                               customer = item.customer,
                               model = item.model,
                               soStatus = item.soStatus,
                               pslStatus = item.pslStatus,
                               pslId = item.pslId,
                               rentStatus = item.rentStatus,
                               hidStatus = item.hidStatus,
                               inventoryPlant = item.inventoryPlant
                           });
            }

            if (splitSOStatus.Count() > 0 && splitSOStatus != null)
            {
                getData = (from item in getData
                           where splitSOStatus.Contains(item.soStatus)
                           select new
                           {
                               pslMasterId = item.pslMasterId,
                               serialNumber = item.serialNumber,
                               pslSn = item.pslSn,
                               area = item.area,
                               salesffice = item.salesffice,
                               customer = item.customer,
                               model = item.model,
                               soStatus = item.soStatus,
                               pslStatus = item.pslStatus,
                               pslId = item.pslId,
                               rentStatus = item.rentStatus,
                               hidStatus = item.hidStatus,
                               inventoryPlant = item.inventoryPlant
                           });
            }


            //if (!string.IsNullOrWhiteSpace(valueSearch))
            //{
            //    if (searchSerialNumber == true || searchArea == true || searchSalesOffice == true || searchCustomer == true || searchStatus == true)
            //    {
            //        getData = (from item in getData
            //                   where item.serialNumber.Contains(valueSearch) || item.area.Contains(valueSearch) || item.salesffice.Contains(valueSearch) || item.customer.Contains(valueSearch) || item.pslStatus.Contains(valueSearch)
            //                   select new
            //                   {
            //                       pslMasterId = item.pslMasterId,
            //                       serialNumber = item.serialNumber,
            //                       pslSn = item.pslSn,
            //                       area = item.area,
            //                       salesffice = item.salesffice,
            //                       customer = item.customer,
            //                       model = item.model,
            //                       soStatus = item.soStatus,
            //                       pslStatus = item.pslStatus,
            //                       pslId = item.pslId,
            //                       rentStatus = item.rentStatus,
            //                       hidStatus = item.hidStatus,
            //                       inventoryPlant = item.inventoryPlant

            //                   });
            //    }
            //}


            #region OrderByCondition
            if (!string.IsNullOrWhiteSpace(orderByColumn))
            {
                if (orderByColumn == "model")
                {
                    if (!string.IsNullOrWhiteSpace(orderByDir) && orderByDir == "desc")
                    {
                        getData = getData.OrderByDescending(ob => ob.model);
                    }
                    else
                    {
                        getData = getData.OrderBy(ob => ob.model);
                    }
                }
                else if (orderByColumn == "area")
                {
                    if (!string.IsNullOrWhiteSpace(orderByDir) && orderByDir == "desc")
                    {
                        getData = getData.OrderByDescending(ob => ob.area);
                    }
                    else
                    {
                        getData = getData.OrderBy(ob => ob.area);
                    }
                }
                else if (orderByColumn == "sales_office")
                {
                    if (!string.IsNullOrWhiteSpace(orderByDir) && orderByDir == "desc")
                    {
                        getData = getData.OrderByDescending(ob => ob.salesffice);
                    }
                    else
                    {
                        getData = getData.OrderBy(ob => ob.salesffice);
                    }
                }
                else if (orderByColumn == "customer")
                {
                    if (!string.IsNullOrWhiteSpace(orderByDir) && orderByDir == "desc")
                    {
                        getData = getData.OrderByDescending(ob => ob.customer);
                    }
                    else
                    {
                        getData = getData.OrderBy(ob => ob.customer);
                    }
                }
                else
                {
                    if (!string.IsNullOrWhiteSpace(orderByDir) && orderByDir == "desc")
                    {
                        getData = getData.OrderByDescending(ob => ob.serialNumber);
                    }
                    else
                    {
                        getData = getData.OrderBy(ob => ob.serialNumber);
                    }
                }
            }
            else
            {
                if (!string.IsNullOrWhiteSpace(orderByDir) && orderByDir == "desc")
                {
                    getData = getData.OrderByDescending(ob => ob.serialNumber);
                }
                else
                {
                    getData = getData.OrderBy(ob => ob.serialNumber);
                }
            }
            #endregion

            if (!string.IsNullOrWhiteSpace(valueSearch))
            {
                getData = getData.Where(w => w.serialNumber.ToLower().Contains(valueSearch.ToLower()) || w.area.ToLower().Contains(valueSearch.ToLower()) || w.salesffice.ToLower().Contains(valueSearch.ToLower()) || w.customer.ToLower().Contains(valueSearch.ToLower()) || w.model.ToLower().Contains(valueSearch.ToLower()));
            }


            var countDataTotal = getData.Count();
            if(length > 0)
            {
                getData = getData.Skip(start).Take(length);
            }
            var getDataList = getData.ToList();

            var ida = 0;
            foreach (var item in getDataList)
            {
                var list = new TablePSLExecution();
                list.Row = ida++;
                if (!string.IsNullOrWhiteSpace(item.serialNumber))
                {
                    list.SerialNo = item.serialNumber;
                }
                else
                {
                    list.SerialNo = "-";
                }

                if (!string.IsNullOrWhiteSpace(item.area))
                {
                    list.Area = item.area;
                }
                else
                {
                    list.Area = "-";
                }

                if (!string.IsNullOrWhiteSpace(item.salesffice))
                {
                    list.SalesOffice = item.salesffice;
                }
                else
                {
                    list.SalesOffice = "-";
                }

                if (!string.IsNullOrWhiteSpace(item.customer))
                {
                    list.Customer = item.customer;
                }
                else
                {
                    list.Customer = "-";
                }

                if (!string.IsNullOrWhiteSpace(item.model))
                {
                    list.Model = item.model;
                }
                else
                {
                    list.Model = "-";
                }

                var getStatus = StatusForTablePSLExecution(item.serialNumber, splitPSLStatus, splitSOStatus, hid, rental, inventory, others, splitArea, splitModel);

                

                if (!string.IsNullOrWhiteSpace(valueSearch))
                {
                    list.StatusCheckValueSearch = getStatus.Where(w => w.PSLId.ToLower().Contains(valueSearch.ToLower()) || w.PSLStatus.ToLower().Contains(valueSearch.ToLower())).ToList();
                }
                list.Status = (list.StatusCheckValueSearch != null && list.StatusCheckValueSearch.Count() != 0) ? list.StatusCheckValueSearch : getStatus;
                listItem.Add(list);
            }

            if (!string.IsNullOrWhiteSpace(valueSearch))
            {
                listItem = listItem.Where(w=> w.SerialNo.ToLower().Contains(valueSearch.ToLower()) || w.Area.ToLower().Contains(valueSearch.ToLower()) || w.SalesOffice.ToLower().Contains(valueSearch.ToLower()) || w.Customer.ToLower().Contains(valueSearch.ToLower()) || w.Model.ToLower().Contains(valueSearch.ToLower()) ||  w.StatusCheckValueSearch.Count() != 0 ).ToList();
            }

            return listItem;
        }

        public List<StatusTablePSLExecution> StatusForTablePSLExecution(string sn, string[] pslStatus, string[] soStatus, string hid, string rental, string inventory, string others, string[] splitarea, string[] splitmodel)
        {
            var listItem = new List<StatusTablePSLExecution>();
            var getData = (from item in _ctx.PSLMaster
                           where item.SerialNumber == sn
                           select new
                           {
                               Area = item.Area,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               SalesOffice = item.SalesOffice,
                               Customer = item.SapCustomerName,
                               pslMasterId = item.PSLMasterId,
                               pslId = item.PSLId,
                               pslStatus = item.SapPSLStatus,
                               soStatus = item.ServiceOrderStatusDesc,
                               SRNo = item.ServiceRequestNo,
                               quotNo = item.QuotationNo,
                               SONo = item.ServiceOrderNo,
                               WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                               FollowUpDuration = (item.FollowUpDuration != 0) ? item.FollowUpDuration : 0,
                               Validation = item.Validation,
                               PSLAge = item.PslAge,
                               DayToExpired = item.DaysToExpired,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ServiceOrderReleaseDate,
                               PSLType = item.PSLType,
                               HidTaskId = item.HIDStatus,
                               Plant = item.Plant,
                               RentStatus = item.RentStatus
                           });
            if(hid == "on")
            {
                getData = (from item in getData
                           where item.HidTaskId != null
                           select new
                           {
                               Area = item.Area,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               SalesOffice = item.SalesOffice,
                               Customer = item.Customer,
                               pslMasterId = item.pslMasterId,
                               pslId = item.pslId,
                               pslStatus = item.pslStatus,
                               soStatus = item.soStatus,
                               SRNo = item.SRNo,
                               quotNo = item.quotNo,
                               SONo = item.SONo,
                               WipAge = item.WipAge,
                               FollowUpDuration = item.FollowUpDuration,
                               Validation = item.Validation,
                               PSLAge = item.PSLAge,
                               DayToExpired = item.DayToExpired,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               HidTaskId = item.HidTaskId,
                               Plant = item.Plant,
                               RentStatus = item.RentStatus
                           });
            }
            if (rental == "on")
            {
                getData = (from item in getData
                           where item.RentStatus != null
                           select new
                           {
                               Area = item.Area,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               SalesOffice = item.SalesOffice,
                               Customer = item.Customer,
                               pslMasterId = item.pslMasterId,
                               pslId = item.pslId,
                               pslStatus = item.pslStatus,
                               soStatus = item.soStatus,
                               SRNo = item.SRNo,
                               quotNo = item.quotNo,
                               SONo = item.SONo,
                               WipAge = item.WipAge,
                               FollowUpDuration = item.FollowUpDuration,
                               Validation = item.Validation,
                               PSLAge = item.PSLAge,
                               DayToExpired = item.DayToExpired,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               HidTaskId = item.HidTaskId,
                               Plant = item.Plant,
                               RentStatus = item.RentStatus
                           });
            }
            if (inventory == "on")
            {
                getData = (from item in getData
                           where item.Plant != null
                           select new
                           {
                               Area = item.Area,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               SalesOffice = item.SalesOffice,
                               Customer = item.Customer,
                               pslMasterId = item.pslMasterId,
                               pslId = item.pslId,
                               pslStatus = item.pslStatus,
                               soStatus = item.soStatus,
                               SRNo = item.SRNo,
                               quotNo = item.quotNo,
                               SONo = item.SONo,
                               WipAge = item.WipAge,
                               FollowUpDuration = item.FollowUpDuration,
                               Validation = item.Validation,
                               PSLAge = item.PSLAge,
                               DayToExpired = item.DayToExpired,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               HidTaskId = item.HidTaskId,
                               Plant = item.Plant,
                               RentStatus = item.RentStatus
                           });
            }
            if (others == "on")
            {
                getData = (from item in getData
                           where item.HidTaskId != null && item.Plant != null && item.RentStatus != null
                           select new
                           {
                               Area = item.Area,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               SalesOffice = item.SalesOffice,
                               Customer = item.Customer,
                               pslMasterId = item.pslMasterId,
                               pslId = item.pslId,
                               pslStatus = item.pslStatus,
                               soStatus = item.soStatus,
                               SRNo = item.SRNo,
                               quotNo = item.quotNo,
                               SONo = item.SONo,
                               WipAge = item.WipAge,
                               FollowUpDuration = item.FollowUpDuration,
                               Validation = item.Validation,
                               PSLAge = item.PSLAge,
                               DayToExpired = item.DayToExpired,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               HidTaskId = item.HidTaskId,
                               Plant = item.Plant,
                               RentStatus = item.RentStatus
                           });
            }
            if (splitarea.Count() > 0 && splitarea != null)
            {
                getData = (from item in getData
                           where splitarea.Contains(item.Area)
                           select new
                           {
                               Area = item.Area,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               SalesOffice = item.SalesOffice,
                               Customer = item.Customer,
                               pslMasterId = item.pslMasterId,
                               pslId = item.pslId,
                               pslStatus = item.pslStatus,
                               soStatus = item.soStatus,
                               SRNo = item.SRNo,
                               quotNo = item.quotNo,
                               SONo = item.SONo,
                               WipAge = item.WipAge,
                               FollowUpDuration = item.FollowUpDuration,
                               Validation = item.Validation,
                               PSLAge = item.PSLAge,
                               DayToExpired = item.DayToExpired,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               HidTaskId = item.HidTaskId,
                               Plant = item.Plant,
                               RentStatus = item.RentStatus
                           });
            }
            if (splitmodel.Count() > 0 && splitmodel != null)
            {
                getData = (from item in getData
                           where splitmodel.Contains(item.Model)
                           select new
                           {
                               Area = item.Area,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               SalesOffice = item.SalesOffice,
                               Customer = item.Customer,
                               pslMasterId = item.pslMasterId,
                               pslId = item.pslId,
                               pslStatus = item.pslStatus,
                               soStatus = item.soStatus,
                               SRNo = item.SRNo,
                               quotNo = item.quotNo,
                               SONo = item.SONo,
                               WipAge = item.WipAge,
                               FollowUpDuration = item.FollowUpDuration,
                               Validation = item.Validation,
                               PSLAge = item.PSLAge,
                               DayToExpired = item.DayToExpired,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               HidTaskId = item.HidTaskId,
                               Plant = item.Plant,
                               RentStatus = item.RentStatus
                           });
            }
            if (pslStatus.Count() > 0 && pslStatus != null)
            {
                getData = (from item in getData
                           where pslStatus.Contains(item.pslStatus)
                           select new
                           {
                               Area = item.Area,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               SalesOffice = item.SalesOffice,
                               Customer = item.Customer,
                               pslMasterId = item.pslMasterId,
                               pslId = item.pslId,
                               pslStatus = item.pslStatus,
                               soStatus = item.soStatus,
                               SRNo = item.SRNo,
                               quotNo = item.quotNo,
                               SONo = item.SONo,
                               WipAge = item.WipAge,
                               FollowUpDuration = item.FollowUpDuration,
                               Validation = item.Validation,
                               PSLAge = item.PSLAge,
                               DayToExpired = item.DayToExpired,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               HidTaskId = item.HidTaskId,
                               Plant = item.Plant,
                               RentStatus = item.RentStatus
                           });
            }
            if(soStatus.Count() > 0 && soStatus != null)
            {
                getData = (from item in getData
                           where soStatus.Contains(item.soStatus)
                           select new
                           {
                               Area = item.Area,
                               Model = item.Model,
                               SerialNumber = item.SerialNumber,
                               SalesOffice = item.SalesOffice,
                               Customer = item.Customer,
                               pslMasterId = item.pslMasterId,
                               pslId = item.pslId,
                               pslStatus = item.pslStatus,
                               soStatus = item.soStatus,
                               SRNo = item.SRNo,
                               quotNo = item.quotNo,
                               SONo = item.SONo,
                               WipAge = item.WipAge,
                               FollowUpDuration = item.FollowUpDuration,
                               Validation = item.Validation,
                               PSLAge = item.PSLAge,
                               DayToExpired = item.DayToExpired,
                               TerminationDate = item.TerminationDate,
                               ReleaseDate = item.ReleaseDate,
                               PSLType = item.PSLType,
                               HidTaskId = item.HidTaskId,
                               Plant = item.Plant,
                               RentStatus = item.RentStatus
                           });
            }
            //if (!string.IsNullOrWhiteSpace(valueSearch))
            //{
            //    getData = (from item in getData
            //               where item.Area.Contains(valueSearch) || item.Model.Contains(valueSearch) || item.SerialNumber.Contains(valueSearch) || item.SalesOffice.Contains(valueSearch) || item.Customer.Contains(valueSearch) || item.pslId.Contains(valueSearch) || item.pslStatus.Contains(valueSearch) || item.SRNo.Contains(valueSearch) || item.SONo.Contains(valueSearch) || item.soStatus.Contains(valueSearch) || item.quotNo.Contains(valueSearch)
            //               select new
            //               {
            //                   Area = item.Area,
            //                   Model = item.Model,
            //                   SerialNumber = item.SerialNumber,
            //                   SalesOffice = item.SalesOffice,
            //                   Customer = item.Customer,
            //                   pslMasterId = item.pslMasterId,
            //                   pslId = item.pslId,
            //                   pslStatus = item.pslStatus,
            //                   soStatus = item.soStatus,
            //                   SRNo = item.SRNo,
            //                   quotNo = item.quotNo,
            //                   SONo = item.SONo,
            //                   WipAge = item.WipAge,
            //                   FollowUpDuration = item.FollowUpDuration,
            //                   Validation = item.Validation,
            //                   PSLAge = item.PSLAge,
            //                   DayToExpired = item.DayToExpired,
            //                   TerminationDate = item.TerminationDate,
            //                   ReleaseDate = item.ReleaseDate,
            //                   PSLType = item.PSLType,
            //                   HidTaskId = item.HidTaskId,
            //                   Plant = item.Plant,
            //                   RentStatus = item.RentStatus
            //               });
            //}
            foreach(var item in getData.ToList().Take(100))
            {
                if(item != null)
                {
                    var list = new StatusTablePSLExecution();
                    list.PSLId = item.pslId;
                    list.PSLStatus = item.pslStatus;
                    list.SOStatus = item.soStatus;
                    list.SRStatus = item.SRNo;
                    list.QuotNo = item.quotNo;
                    list.SONo = item.SONo;
                    list.WipAge = item.WipAge;
                    list.FollowUpDuration = item.FollowUpDuration;
                    list.DayToExpired = item.DayToExpired;
                    list.PSLAge = item.PSLAge;
                    list.Validation = item.Validation;
                    list.TerminationDate = item.TerminationDate;
                    list.ReleaseDate = item.ReleaseDate;
                    list.PSLType = item.PSLType;
                    listItem.Add(list);
                }
            }
            



            return listItem;
        }

        public DataChartPSLCompletionPIPFilterSafetyCompletion GetDataForChartCompletionFilterSafetyCompletion(string[] area, string[] pslId, string[] salesOffice, string[] psltype, string dateFrom, string dateEnd, string hid, string rental, string inventory, string others)
        {
            var listItem = new  DataChartPSLCompletionPIPFilterSafetyCompletion();
            var monthFrom = DateTime.Today.AddMonths(-24);
           var monthEnd = DateTime.Today.AddMonths(-13);
            var getDataCompletedFilter = (from item in _ctx.PSLMaster
                                          where item.LetterDate.Value >= monthFrom && item.LetterDate.Value <= monthEnd
                                          select new
                                          {
                                              Area = item.Area,
                                              PslStatus = item.Validation,
                                              PSLAge = item.PslAge,
                                              PSLType = item.PSLType,
                                              TerminationDate = item.LetterDate,
                                              SalesOffice = item.SalesOffice,
                                              PSLId = item.PSLId,
                                              rentStatus = item.RentStatus,
                                              hidStatus = item.HIDStatus,
                                              plant = item.Plant,
                                              RepairDate = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                                              DateRepair = item.RepairDate,
                                              PSLSN = item.PSLSN
                                          });
            var vargetDataCompletedFilter = (from item in getDataCompletedFilter
                                             where item.RepairDate < 365
                                             select new
                                             {
                                                 Area = item.Area,
                                                 PslStatus = item.PslStatus,
                                                 PSLAge = item.PSLAge,
                                                 PSLType = item.PSLType,
                                                 TerminationDate = item.TerminationDate,
                                                 SalesOffice = item.SalesOffice,
                                                 PSLId = item.PSLId,
                                                 rentStatus = item.rentStatus,
                                                 hidStatus = item.hidStatus,
                                                 plant = item.plant,
                                                 DateRepair = item.RepairDate,
                                                 PSLSN = item.PSLSN
                                             });
            var getDataCompleted = (from item in vargetDataCompletedFilter
                                    where item.Area != null && item.PSLType == "S" && item.PslStatus.Contains("Completed") && item.Area != null && item.PSLId.Substring(0, 2) == "PI"
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).OrderBy(odb => odb.Area).ToList();

            var varGetDataPending = (from item in _ctx.PSLMaster
                                     where item.LetterDate.Value >= monthFrom && item.LetterDate.Value <= monthEnd
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.Validation,
                                         PSLAge = item.PslAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.RentStatus,
                                         hidStatus = item.HIDStatus,
                                         plant = item.Plant,
                                         SubsDate = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                                         RepairDate = item.RepairDate,
                                         PSLSN = item.PSLSN
                                     });
            var getDataPending = (from item in varGetDataPending
                                  where item.Area != null && item.PSLType == "S" && item.PslStatus == "Completed" && item.RepairDate == null && item.PSLId.Substring(0, 2) == "PI" || item.Area != null && item.PSLType == "S" && item.PslStatus == "Completed" && item.SubsDate > 365 && item.PSLId.Substring(0, 2) == "PI" || item.Area != null && item.PSLType == "S" && item.PSLId.Substring(0, 2) == "PI" && item.PslStatus == "Outstanding" && item.PSLAge < 365
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).OrderBy(odb => odb.Area).ToList();

            var getDataAll = (from item in vargetDataCompletedFilter
                              where item.Area != null && item.PSLType == "S" && item.Area != null && item.PSLId.Substring(0, 2) == "PI"
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).OrderBy(odb => odb.Area).ToList();

            var getistDataPending = (from item in varGetDataPending
                                     where item.Area != null && item.PSLType == "S" && item.PslStatus == "Completed" && item.RepairDate == null && item.PSLId.Substring(0, 2) == "PI" || item.Area != null && item.PSLType == "S" && item.PslStatus == "Completed" && item.SubsDate > 365 && item.PSLId.Substring(0, 2) == "PI" || item.Area != null && item.PSLType == "S" && item.PSLId.Substring(0, 2) == "PI" && item.PslStatus == "Outstanding" && item.PSLAge < 365
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).OrderBy(odb => odb.Area).ToList();

            if (!string.IsNullOrWhiteSpace(dateFrom) && !string.IsNullOrWhiteSpace(dateEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(dateFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(dateEnd, "dd-MM-yyyy", null);
                getDataCompletedFilter = (from item in _ctx.PSLMaster
                                              where item.LetterDate.Value >= convertToDateTimeFrom && item.LetterDate.Value <= convertToDateTimeEnd
                                              select new
                                              {
                                                  Area = item.Area,
                                                  PslStatus = item.Validation,
                                                  PSLAge = item.PslAge,
                                                  PSLType = item.PSLType,
                                                  TerminationDate = item.LetterDate,
                                                  SalesOffice = item.SalesOffice,
                                                  PSLId = item.PSLId,
                                                  rentStatus = item.RentStatus,
                                                  hidStatus = item.HIDStatus,
                                                  plant = item.Plant,
                                                  RepairDate = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                                                  DateRepair = item.RepairDate,
                                                  PSLSN = item.PSLSN
                                              });
                vargetDataCompletedFilter = (from item in getDataCompletedFilter
                                                 where item.RepairDate < 365
                                                 select new
                                                 {
                                                     Area = item.Area,
                                                     PslStatus = item.PslStatus,
                                                     PSLAge = item.PSLAge,
                                                     PSLType = item.PSLType,
                                                     TerminationDate = item.TerminationDate,
                                                     SalesOffice = item.SalesOffice,
                                                     PSLId = item.PSLId,
                                                     rentStatus = item.rentStatus,
                                                     hidStatus = item.hidStatus,
                                                     plant = item.plant,
                                                     DateRepair = item.RepairDate,
                                                     PSLSN = item.PSLSN
                                                 });
                getDataCompleted = (from item in vargetDataCompletedFilter
                                        where item.Area != null && item.PSLType == "S" && item.PslStatus.Contains("Completed") && item.Area != null && item.PSLId.Substring(0, 2) == "PI"
                                        select new
                                        {
                                            Area = item.Area,
                                            PslStatus = item.PslStatus,
                                            PSLAge = item.PSLAge,
                                            PSLType = item.PSLType,
                                            TerminationDate = item.TerminationDate,
                                            SalesOffice = item.SalesOffice,
                                            PSLId = item.PSLId,
                                            rentStatus = item.rentStatus,
                                            hidStatus = item.hidStatus,
                                            plant = item.plant,
                                            PSLSN = item.PSLSN
                                        }).OrderBy(odb => odb.Area).ToList();

                varGetDataPending = (from item in _ctx.PSLMaster
                                     where item.LetterDate.Value >= convertToDateTimeFrom && item.LetterDate.Value <= convertToDateTimeEnd
                                     select new
                                         {
                                             Area = item.Area,
                                             PslStatus = item.Validation,
                                             PSLAge = item.PslAge,
                                             PSLType = item.PSLType,
                                             TerminationDate = item.TerminationDate,
                                             SalesOffice = item.SalesOffice,
                                             PSLId = item.PSLId,
                                             rentStatus = item.RentStatus,
                                             hidStatus = item.HIDStatus,
                                             plant = item.Plant,
                                             SubsDate = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                                             RepairDate = item.RepairDate,
                                             PSLSN = item.PSLSN
                                     });
                getDataPending = (from item in varGetDataPending
                                      where item.Area != null && item.PSLType == "S" && item.PslStatus == "Completed" && item.RepairDate == null && item.PSLId.Substring(0, 2) == "PI" || item.Area != null && item.PSLType == "S" && item.PslStatus == "Completed" && item.SubsDate > 365 && item.PSLId.Substring(0, 2) == "PI" || item.Area != null && item.PSLType == "S" && item.PSLId.Substring(0, 2) == "PI" && item.PslStatus == "Outstanding" && item.PSLAge < 365
                                  select new
                                      {
                                          Area = item.Area,
                                          PslStatus = item.PslStatus,
                                          PSLAge = item.PSLAge,
                                          PSLType = item.PSLType,
                                          TerminationDate = item.TerminationDate,
                                          SalesOffice = item.SalesOffice,
                                          PSLId = item.PSLId,
                                          rentStatus = item.rentStatus,
                                          hidStatus = item.hidStatus,
                                          plant = item.plant,
                                            PSLSN = item.PSLSN
                                  }).OrderBy(odb => odb.Area).ToList();

                getDataAll = (from item in vargetDataCompletedFilter
                                  where item.PSLType == "S" && item.Area != null && item.PSLId.Substring(0, 2) == "PI"
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).OrderBy(odb => odb.Area).ToList();

                getistDataPending = (from item in varGetDataPending
                                         where item.Area != null && item.PSLType == "S" && item.PslStatus == "Completed" && item.RepairDate == null && item.PSLId.Substring(0, 2) == "PI" || item.Area != null && item.PSLType == "S" && item.PslStatus == "Completed" && item.SubsDate > 365 && item.PSLId.Substring(0, 2) == "PI" || item.Area != null && item.PSLType == "S" && item.PSLId.Substring(0, 2) == "PI" && item.PslStatus == "Outstanding" && item.PSLAge < 365
                                     select new
                                         {
                                             Area = item.Area,
                                             PslStatus = item.PslStatus,
                                             PSLAge = item.PSLAge,
                                             PSLType = item.PSLType,
                                             TerminationDate = item.TerminationDate,
                                             SalesOffice = item.SalesOffice,
                                             PSLId = item.PSLId,
                                             rentStatus = item.rentStatus,
                                             hidStatus = item.hidStatus,
                                             plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).OrderBy(odb => odb.Area).ToList();
            }

            if (!string.IsNullOrWhiteSpace(dateFrom) && string.IsNullOrWhiteSpace(dateEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(dateFrom, "dd-MM-yyyy", null);
                getDataCompletedFilter = (from item in _ctx.PSLMaster
                                          where item.LetterDate.Value == convertToDateTimeFrom
                                          select new
                                          {
                                              Area = item.Area,
                                              PslStatus = item.Validation,
                                              PSLAge = item.PslAge,
                                              PSLType = item.PSLType,
                                              TerminationDate = item.LetterDate,
                                              SalesOffice = item.SalesOffice,
                                              PSLId = item.PSLId,
                                              rentStatus = item.RentStatus,
                                              hidStatus = item.HIDStatus,
                                              plant = item.Plant,
                                              RepairDate = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                                              DateRepair = item.RepairDate,
                                              PSLSN = item.PSLSN
                                          });
                vargetDataCompletedFilter = (from item in getDataCompletedFilter
                                             where item.RepairDate < 365
                                             select new
                                             {
                                                 Area = item.Area,
                                                 PslStatus = item.PslStatus,
                                                 PSLAge = item.PSLAge,
                                                 PSLType = item.PSLType,
                                                 TerminationDate = item.TerminationDate,
                                                 SalesOffice = item.SalesOffice,
                                                 PSLId = item.PSLId,
                                                 rentStatus = item.rentStatus,
                                                 hidStatus = item.hidStatus,
                                                 plant = item.plant,
                                                 DateRepair = item.RepairDate,
                                                 PSLSN = item.PSLSN
                                             });
                getDataCompleted = (from item in vargetDataCompletedFilter
                                    where item.Area != null && item.PSLType == "S" && item.PslStatus.Contains("Completed") && item.Area != null && item.PSLId.Substring(0, 2) == "PI"
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).OrderBy(odb => odb.Area).ToList();

                varGetDataPending = (from item in _ctx.PSLMaster
                                     where item.LetterDate.Value == convertToDateTimeFrom
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.Validation,
                                         PSLAge = item.PslAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.RentStatus,
                                         hidStatus = item.HIDStatus,
                                         plant = item.Plant,
                                         SubsDate = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                                         RepairDate = item.RepairDate,
                                         PSLSN = item.PSLSN
                                     });
                getDataPending = (from item in varGetDataPending
                                  where item.Area != null && item.PSLType == "S" && item.PslStatus == "Completed" && item.RepairDate == null && item.PSLId.Substring(0, 2) == "PI" || item.Area != null && item.PSLType == "S" && item.PslStatus == "Completed" && item.SubsDate > 365 && item.PSLId.Substring(0, 2) == "PI" || item.Area != null && item.PSLType == "S" && item.PSLId.Substring(0, 2) == "PI" && item.PslStatus == "Outstanding" && item.PSLAge < 365
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).OrderBy(odb => odb.Area).ToList();

                getDataAll = (from item in vargetDataCompletedFilter
                              where item.PSLType == "S" && item.Area != null && item.PSLId.Substring(0, 2) == "PI"
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).OrderBy(odb => odb.Area).ToList();

                getistDataPending = (from item in varGetDataPending
                                     where item.Area != null && item.PSLType == "S" && item.PslStatus == "Completed" && item.RepairDate == null && item.PSLId.Substring(0, 2) == "PI" || item.Area != null && item.PSLType == "S" && item.PslStatus == "Completed" && item.SubsDate > 365 && item.PSLId.Substring(0, 2) == "PI" || item.Area != null && item.PSLType == "S" && item.PSLId.Substring(0, 2) == "PI" && item.PslStatus == "Outstanding" && item.PSLAge < 365
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).OrderBy(odb => odb.Area).ToList();
            }

            if (hid == "on" && rental == "" && inventory == "")
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.hidStatus != ""
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.hidStatus != ""
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.hidStatus != ""
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.hidStatus != ""
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.hidStatus != "" || item.rentStatus != ""
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.hidStatus != "" || item.rentStatus != ""
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.hidStatus != "" || item.rentStatus != ""
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.hidStatus != "" || item.rentStatus != ""
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.hidStatus != "" || item.plant != ""
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.hidStatus != "" || item.plant != ""
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.hidStatus != "" || item.plant != ""
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.hidStatus != "" || item.plant != ""
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.rentStatus != ""
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.rentStatus != ""
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.rentStatus != ""
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.rentStatus != ""
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.rentStatus != "" || item.plant != ""
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.rentStatus != "" || item.plant != ""
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.rentStatus != "" || item.plant != ""
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.rentStatus != "" || item.plant != ""
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.plant != ""
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.plant != ""
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.plant != ""
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.plant != ""
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.plant != "" || item.hidStatus != "" || item.rentStatus != ""
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.plant != "" || item.hidStatus != "" || item.rentStatus != ""
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.plant != "" || item.hidStatus != "" || item.rentStatus != ""
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.plant != "" || item.hidStatus != "" || item.rentStatus != ""
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.plant == "" || item.hidStatus == "" || item.rentStatus == ""
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.plant == "" || item.hidStatus == "" || item.rentStatus == ""
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.plant == "" || item.hidStatus == "" || item.rentStatus == ""
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.plant == "" || item.hidStatus == "" || item.rentStatus == ""
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (area.Count() > 0 && area != null)
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.PSLType == "S" && item.PslStatus.Contains("Completed") && area.Contains(item.Area)
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.PSLType == "S" && item.PslStatus != "Completed" && area.Contains(item.Area)
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.PSLType == "S" && area.Contains(item.Area)
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.PslStatus != "Completed" && item.PSLType == "S" && area.Contains(item.Area)
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (salesOffice.Count() > 0 && salesOffice != null)
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.PSLType == "S" && item.PslStatus.Contains("Completed") && salesOffice.Contains(item.SalesOffice)
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.PSLType == "S" && item.PslStatus != "Completed" && salesOffice.Contains(item.SalesOffice)
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.PSLType == "S" && salesOffice.Contains(item.SalesOffice)
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.PslStatus != "Completed" && item.PSLType == "S" && salesOffice.Contains(item.SalesOffice)
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN

                                     }).ToList();
            }

            if (pslId.Count() > 0 && pslId != null)
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.PSLType == "S" && item.PslStatus.Contains("Completed") && pslId.Contains(item.PSLId)
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN

                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.PSLType == "S" && item.PslStatus != "Completed" && pslId.Contains(item.PSLId)
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN

                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.PSLType == "S" && pslId.Contains(item.PSLId)
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN

                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.PslStatus != "Completed" && item.PSLType == "S" && pslId.Contains(item.PSLId)
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN

                                     }).ToList();
            }

            var groupDataPending = getDataPending.Select(s => s.PSLSN).Distinct().Count();

            var listItemArea = new List<string>();
            var listItemSalesOffic = new List<string>();
            var listItemPSLId = new List<string>();
            var tempArea = "";
            foreach (var item in getistDataPending)
            {
                if(psltype.Count() > 0)
                {
                    foreach(var data in psltype)
                    {
                        if(data == "S")
                        {
                            if (tempArea != item.Area)
                            {
                                listItemArea.Add(item.Area);
                                tempArea = item.Area;
                            }
                            listItemSalesOffic.Add(item.SalesOffice);
                            listItemPSLId.Add(item.PSLId);
                        }
                        else
                        {
                            listItemArea = new List<string>();
                            listItemSalesOffic = new List<string>();
                            listItemPSLId = new List<string>();
                        }
                    }
                }
                else
                {
                    if (tempArea != item.Area)
                    {
                        listItemArea.Add(item.Area);
                        tempArea = item.Area;
                    }
                    listItemSalesOffic.Add(item.SalesOffice);
                    listItemPSLId.Add(item.PSLId);
                }
               
            }
            if(psltype.Count() > 0)
            {
                foreach(var item in psltype)
                {
                    if(item == "S")
                    {
                        var getDataCompletedParse = Convert.ToDecimal(getDataCompleted.Count());
                        var getDataPendingParse = Convert.ToDecimal(getDataPending.Count());
                        var getDataAllParse = Convert.ToDecimal(getDataAll.Count());

                        var listItemDataSets = new List<decimal>();
                        var countDataCompleted = (getDataCompletedParse != 0 && getDataAllParse != 0) ? (getDataCompletedParse / getDataAllParse) * 100 : 0;
                        var countDataPending = (getDataPendingParse != 0 && getDataAllParse != 0) ? (getDataPendingParse / getDataAllParse) * 100 : 0;

                        listItemDataSets.Add(countDataCompleted);
                        listItemDataSets.Add(countDataPending);

                        listItem.ElementScoreFilterSafetyCompletion = getDataCompletedParse;
                        listItem.DataFilterSafetyCompletion = listItemDataSets;
                        listItem.Area = listItemArea;
                        listItem.SalesOffice = listItemSalesOffic;
                        listItem.PSLId = listItemPSLId;
                        listItem.Completed = countDataCompleted;
                        listItem.CountPending = groupDataPending;
                    }
                    else
                    {
                        var getDataCompletedParse = 0;
                        var getDataPendingParse = 0;
                        var getDataAllParse = 0;

                        var listItemDataSets = new List<decimal>();
                        var countDataCompleted = (getDataCompletedParse != 0 && getDataAllParse != 0) ? (getDataCompletedParse / getDataAllParse) * 100 : 0;
                        var countDataPending = (getDataPendingParse != 0 && getDataAllParse != 0) ? (getDataPendingParse / getDataAllParse) * 100 : 0;

                        listItemDataSets.Add(countDataCompleted);
                        listItemDataSets.Add(countDataPending);

                        listItem.ElementScoreFilterSafetyCompletion = getDataCompletedParse;
                        listItem.DataFilterSafetyCompletion = listItemDataSets;
                        listItem.Area = listItemArea;
                        listItem.SalesOffice = listItemSalesOffic;
                        listItem.PSLId = listItemPSLId;
                        listItem.Completed = countDataCompleted;
                        listItem.CountPending = 0;
                    }
                }
            }
            else
            {
                var getDataCompletedParse = Convert.ToDecimal(getDataCompleted.Count());
                var getDataPendingParse = Convert.ToDecimal(getDataPending.Count());
                var getDataAllParse = Convert.ToDecimal(getDataAll.Count());

                var listItemDataSets = new List<decimal>();
                var countDataCompleted = (getDataCompletedParse != 0 && getDataAllParse != 0) ? (getDataCompletedParse / getDataAllParse) * 100 : 0;
                var countDataPending = (getDataPendingParse != 0 && getDataAllParse != 0) ? (getDataPendingParse / getDataAllParse) * 100 : 0;

                listItemDataSets.Add(countDataCompleted);
                listItemDataSets.Add(countDataPending);

                listItem.ElementScoreFilterSafetyCompletion = getDataCompletedParse;
                listItem.DataFilterSafetyCompletion = listItemDataSets;
                listItem.Area = listItemArea;
                listItem.SalesOffice = listItemSalesOffic;
                listItem.PSLId = listItemPSLId;
                listItem.Completed = countDataCompleted;
                listItem.CountPending = groupDataPending;
            }
            
            return listItem;
        }

        public DataChartPSLCompletionPIPFilterSafetyLegacy GetDataForChartCompletionFilterSafetyLegacy(string[] area, string[] pslId, string[] salesOffice, string[] psltype, string dateFrom, string dateEnd, string hid, string rental, string inventory, string others)
        {
            var monthFrom = DateTime.Today.AddMonths(-24);
           var monthEnd = DateTime.Today.AddMonths(-13);
            var listItem = new DataChartPSLCompletionPIPFilterSafetyLegacy();
            var getDataCompletedFilter = (from item in _ctx.PSLMaster
                                          where item.LetterDate.Value >= monthFrom && item.LetterDate.Value <= monthEnd
                                          select new
                                          {
                                              Area = item.Area,
                                              PslStatus = item.Validation,
                                              PSLAge = item.PslAge,
                                              PSLType = item.PSLType,
                                              TerminationDate = item.LetterDate,
                                              SalesOffice = item.SalesOffice,
                                              PSLId = item.PSLId,
                                              rentStatus = item.RentStatus,
                                              hidStatus = item.HIDStatus,
                                              plant = item.Plant,
                                              RepairDate = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                                              DateRepair = item.RepairDate,
                                              PSLSN = item.PSLSN
                                          });
            var vargetDataCompletedFilter = (from item in getDataCompletedFilter
                                             select new
                                             {
                                                 Area = item.Area,
                                                 PslStatus = item.PslStatus,
                                                 PSLAge = item.PSLAge,
                                                 PSLType = item.PSLType,
                                                 TerminationDate = item.TerminationDate,
                                                 SalesOffice = item.SalesOffice,
                                                 PSLId = item.PSLId,
                                                 rentStatus = item.rentStatus,
                                                 hidStatus = item.hidStatus,
                                                 plant = item.plant,
                                                 DateRepair = item.DateRepair,
                                                 PSLSN = item.PSLSN
                                             });
            var getDataCompleted = (from item in vargetDataCompletedFilter
                                    where item.PSLType == "S" && item.Area != null && item.PSLId.Substring(0, 2) == "PI" && item.DateRepair == null && item.PSLAge > 365
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).OrderBy(odb => odb.Area).ToList();
            var varGetDataPending = (from item in _ctx.PSLMaster
                                     where item.LetterDate.Value >= monthFrom && item.LetterDate.Value <= monthEnd
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.Validation,
                                         PSLAge = item.PslAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.RentStatus,
                                         hidStatus = item.HIDStatus,
                                         plant = item.Plant,
                                         SubsDate = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                                         RepairDate = item.RepairDate,
                                         PSLSN = item.PSLSN
                                     });
            var getDataPending = (from item in varGetDataPending
                                  where item.PSLType == "S" && item.Area != null && item.PSLId.Substring(0, 2) == "PI" && item.RepairDate == null && item.PSLAge > 365
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).OrderBy(odb => odb.Area).ToList();

            var getDataAll = (from item in vargetDataCompletedFilter
                              where item.PSLType == "S" && item.Area != null && item.PSLId.Substring(0, 2) == "PI" && item.PSLAge > 365
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).OrderBy(odb => odb.Area).ToList();

            var getistDataPending = (from item in varGetDataPending
                                     where item.PSLType == "S" && item.Area != null && item.PSLId.Substring(0, 2) == "PI" && item.RepairDate == null && item.PSLAge > 365
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).OrderBy(odb => odb.Area).ToList();

            if (!string.IsNullOrWhiteSpace(dateFrom) && !string.IsNullOrWhiteSpace(dateEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(dateFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(dateEnd, "dd-MM-yyyy", null);
                getDataCompletedFilter = (from item in _ctx.PSLMaster
                                              where item.LetterDate.Value >= convertToDateTimeFrom && item.LetterDate.Value <= convertToDateTimeEnd
                                              select new
                                              {
                                                  Area = item.Area,
                                                  PslStatus = item.Validation,
                                                  PSLAge = item.PslAge,
                                                  PSLType = item.PSLType,
                                                  TerminationDate = item.LetterDate,
                                                  SalesOffice = item.SalesOffice,
                                                  PSLId = item.PSLId,
                                                  rentStatus = item.RentStatus,
                                                  hidStatus = item.HIDStatus,
                                                  plant = item.Plant,
                                                  RepairDate = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                                                  DateRepair = item.RepairDate,
                                                  PSLSN = item.PSLSN
                                              });
                vargetDataCompletedFilter = (from item in getDataCompletedFilter
                                                 select new
                                                 {
                                                     Area = item.Area,
                                                     PslStatus = item.PslStatus,
                                                     PSLAge = item.PSLAge,
                                                     PSLType = item.PSLType,
                                                     TerminationDate = item.TerminationDate,
                                                     SalesOffice = item.SalesOffice,
                                                     PSLId = item.PSLId,
                                                     rentStatus = item.rentStatus,
                                                     hidStatus = item.hidStatus,
                                                     plant = item.plant,
                                                     DateRepair = item.DateRepair,
                                                     PSLSN = item.PSLSN
                                                 });
                getDataCompleted = (from item in vargetDataCompletedFilter
                                        where item.PSLType == "S" && item.Area != null && item.PSLId.Substring(0, 2) == "PI" && item.DateRepair == null && item.PSLAge > 365 
                                    select new
                                        {
                                            Area = item.Area,
                                            PslStatus = item.PslStatus,
                                            PSLAge = item.PSLAge,
                                            PSLType = item.PSLType,
                                            TerminationDate = item.TerminationDate,
                                            SalesOffice = item.SalesOffice,
                                            PSLId = item.PSLId,
                                            rentStatus = item.rentStatus,
                                            hidStatus = item.hidStatus,
                                            plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).OrderBy(odb => odb.Area).ToList();
                varGetDataPending = (from item in _ctx.PSLMaster
                                     where item.LetterDate.Value >= convertToDateTimeFrom && item.LetterDate.Value <= convertToDateTimeEnd
                                     select new
                                         {
                                             Area = item.Area,
                                             PslStatus = item.Validation,
                                             PSLAge = item.PslAge,
                                             PSLType = item.PSLType,
                                             TerminationDate = item.TerminationDate,
                                             SalesOffice = item.SalesOffice,
                                             PSLId = item.PSLId,
                                             rentStatus = item.RentStatus,
                                             hidStatus = item.HIDStatus,
                                             plant = item.Plant,
                                             SubsDate = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                                             RepairDate = item.RepairDate,
                                         PSLSN = item.PSLSN
                                     });
                getDataPending = (from item in varGetDataPending
                                      where item.PSLType == "S" && item.Area != null && item.PSLId.Substring(0, 2) == "PI" && item.RepairDate == null && item.PSLAge > 365
                                  select new
                                      {
                                          Area = item.Area,
                                          PslStatus = item.PslStatus,
                                          PSLAge = item.PSLAge,
                                          PSLType = item.PSLType,
                                          TerminationDate = item.TerminationDate,
                                          SalesOffice = item.SalesOffice,
                                          PSLId = item.PSLId,
                                          rentStatus = item.rentStatus,
                                          hidStatus = item.hidStatus,
                                          plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).OrderBy(odb => odb.Area).ToList();

                getDataAll = (from item in vargetDataCompletedFilter
                                  where item.PSLType == "S" && item.Area != null && item.PSLId.Substring(0, 2) == "PI"
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).OrderBy(odb => odb.Area).ToList();

                getistDataPending = (from item in varGetDataPending
                                         where item.PSLType == "S" && item.Area != null && item.PSLId.Substring(0, 2) == "PI" && item.RepairDate == null && item.PSLAge > 365
                                     select new
                                         {
                                             Area = item.Area,
                                             PslStatus = item.PslStatus,
                                             PSLAge = item.PSLAge,
                                             PSLType = item.PSLType,
                                             TerminationDate = item.TerminationDate,
                                             SalesOffice = item.SalesOffice,
                                             PSLId = item.PSLId,
                                             rentStatus = item.rentStatus,
                                             hidStatus = item.hidStatus,
                                             plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).OrderBy(odb => odb.Area).ToList();
            }

            if (!string.IsNullOrWhiteSpace(dateFrom) && string.IsNullOrWhiteSpace(dateEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(dateFrom, "dd-MM-yyyy", null);
                getDataCompletedFilter = (from item in _ctx.PSLMaster
                                          where item.LetterDate.Value == convertToDateTimeFrom
                                          select new
                                          {
                                              Area = item.Area,
                                              PslStatus = item.Validation,
                                              PSLAge = item.PslAge,
                                              PSLType = item.PSLType,
                                              TerminationDate = item.LetterDate,
                                              SalesOffice = item.SalesOffice,
                                              PSLId = item.PSLId,
                                              rentStatus = item.RentStatus,
                                              hidStatus = item.HIDStatus,
                                              plant = item.Plant,
                                              RepairDate = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                                              DateRepair = item.RepairDate,
                                              PSLSN = item.PSLSN
                                          });
                vargetDataCompletedFilter = (from item in getDataCompletedFilter
                                             select new
                                             {
                                                 Area = item.Area,
                                                 PslStatus = item.PslStatus,
                                                 PSLAge = item.PSLAge,
                                                 PSLType = item.PSLType,
                                                 TerminationDate = item.TerminationDate,
                                                 SalesOffice = item.SalesOffice,
                                                 PSLId = item.PSLId,
                                                 rentStatus = item.rentStatus,
                                                 hidStatus = item.hidStatus,
                                                 plant = item.plant,
                                                 DateRepair = item.DateRepair,
                                                 PSLSN = item.PSLSN
                                             });
                getDataCompleted = (from item in vargetDataCompletedFilter
                                    where item.PSLType == "S" && item.Area != null && item.PSLId.Substring(0, 2) == "PI" && item.DateRepair == null && item.PSLAge > 365
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).OrderBy(odb => odb.Area).ToList();
                varGetDataPending = (from item in _ctx.PSLMaster
                                     where item.LetterDate.Value == convertToDateTimeFrom
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.Validation,
                                         PSLAge = item.PslAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.RentStatus,
                                         hidStatus = item.HIDStatus,
                                         plant = item.Plant,
                                         SubsDate = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                                         RepairDate = item.RepairDate,
                                         PSLSN = item.PSLSN
                                     });
                getDataPending = (from item in varGetDataPending
                                  where item.PSLType == "S" && item.Area != null && item.PSLId.Substring(0, 2) == "PI" && item.RepairDate == null && item.PSLAge > 365
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).OrderBy(odb => odb.Area).ToList();

                getDataAll = (from item in vargetDataCompletedFilter
                              where item.PSLType == "S" && item.Area != null && item.PSLId.Substring(0, 2) == "PI"
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).OrderBy(odb => odb.Area).ToList();

                getistDataPending = (from item in varGetDataPending
                                     where item.PSLType == "S" && item.Area != null && item.PSLId.Substring(0, 2) == "PI" && item.RepairDate == null && item.PSLAge > 365
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).OrderBy(odb => odb.Area).ToList();
            }

            if (hid == "on" && rental == "" && inventory == "")
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.hidStatus != ""
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.hidStatus != ""
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.hidStatus != ""
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.hidStatus != ""
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.hidStatus != "" || item.rentStatus != ""
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.hidStatus != "" || item.rentStatus != ""
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.hidStatus != "" || item.rentStatus != ""
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.hidStatus != "" || item.rentStatus != ""
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.hidStatus != "" || item.plant != ""
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.hidStatus != "" || item.plant != ""
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.hidStatus != "" || item.plant != ""
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.hidStatus != "" || item.plant != ""
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.rentStatus != ""
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.rentStatus != ""
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.rentStatus != ""
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.rentStatus != ""
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.rentStatus != "" || item.plant != ""
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.rentStatus != "" || item.plant != ""
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.rentStatus != "" || item.plant != ""
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.rentStatus != "" || item.plant != ""
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.plant != ""
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.plant != ""
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.plant != ""
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.plant != ""
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.plant != "" || item.hidStatus != "" || item.rentStatus != ""
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.plant != "" || item.hidStatus != "" || item.rentStatus != ""
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.plant != "" || item.hidStatus != "" || item.rentStatus != ""
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.plant != "" || item.hidStatus != "" || item.rentStatus != ""
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.plant == "" || item.hidStatus == "" || item.rentStatus == ""
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.plant == "" || item.hidStatus == "" || item.rentStatus == ""
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.plant == "" || item.hidStatus == "" || item.rentStatus == ""
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.plant == "" || item.hidStatus == "" || item.rentStatus == ""
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (area.Count() > 0 && area != null)
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.PSLType == "S" && item.PSLAge > 365 && item.PslStatus.Contains("Completed") && area.Contains(item.Area)
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.PSLType == "S" && item.PSLAge > 365 && item.PslStatus != "Completed" && area.Contains(item.Area)
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.PSLType == "S" && item.PSLAge > 365 && area.Contains(item.Area)
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.PSLAge > 365 && item.PslStatus != "Completed" && item.PSLType == "S" && area.Contains(item.Area)
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (salesOffice.Count() > 0 && salesOffice != null)
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.PSLType == "S" && item.PSLAge > 365 && item.PslStatus.Contains("Completed") && salesOffice.Contains(item.SalesOffice)
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.PSLType == "S" && item.PSLAge > 365 && item.PslStatus != "Completed" && salesOffice.Contains(item.SalesOffice)
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.PSLType == "S" && item.PSLAge > 365 && salesOffice.Contains(item.SalesOffice)
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.PSLAge > 365 && item.PslStatus != "Completed" && item.PSLType == "S" && salesOffice.Contains(item.SalesOffice)
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN

                                     }).ToList();
            }

            if (pslId.Count() > 0 && pslId != null)
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.PSLType == "S" && item.PSLAge > 365 && item.PslStatus.Contains("Completed") && pslId.Contains(item.PSLId)
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN

                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.PSLType == "S" && item.PSLAge > 365 && item.PslStatus != "Completed" && pslId.Contains(item.PSLId)
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN

                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.PSLType == "S" && item.PSLAge > 365 && pslId.Contains(item.PSLId)
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN

                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.PSLAge > 365 && item.PslStatus != "Completed" && item.PSLType == "S" && pslId.Contains(item.PSLId)
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN

                                     }).ToList();
            }

            

            var listItemArea = new List<string>();
            var listItemSalesOffic = new List<string>();
            var listItemPSLId = new List<string>();
            var tempArea = "";
            foreach (var item in getistDataPending)
            {
                if (psltype.Count() > 0)
                {
                    foreach (var data in psltype)
                    {
                        if (data == "S")
                        {
                            if (tempArea != item.Area)
                            {
                                listItemArea.Add(item.Area);
                                tempArea = item.Area;
                            }
                            listItemSalesOffic.Add(item.SalesOffice);
                            listItemPSLId.Add(item.PSLId);
                        }
                        else
                        {
                            listItemArea = new List<string>();
                            listItemSalesOffic = new List<string>();
                            listItemPSLId = new List<string>();
                        }

                    }
                }
                else
                {
                    if (tempArea != item.Area)
                    {
                        listItemArea.Add(item.Area);
                        tempArea = item.Area;
                    }
                    listItemSalesOffic.Add(item.SalesOffice);
                    listItemPSLId.Add(item.PSLId);
                }

            }
            if (psltype.Count() > 0)
            {
                foreach (var item in psltype)
                {
                    if (item == "S")
                    {
                        var getDataCompletedParse = Convert.ToDecimal(getDataCompleted.Count());
                        var getDataPendingParse = Convert.ToDecimal(getDataPending.Count());
                        var getDataAllParse = Convert.ToDecimal(getDataAll.Count());

                        var listItemDataSets = new List<decimal>();
                        var countDataCompleted = getDataCompletedParse;
                        var countDataPending = getDataPendingParse;

                        listItemDataSets.Add(countDataCompleted);
                        listItemDataSets.Add(countDataPending);

                        listItem.ElementScoreFilterSafetyLegacy = getDataCompletedParse;
                        listItem.DataFilterSafetyLegacy = listItemDataSets;
                        listItem.Area = listItemArea;
                        listItem.SalesOffice = listItemSalesOffic;
                        listItem.PSLId = listItemPSLId;
                        listItem.Completed = getDataPending.Count();
                    }
                    else
                    {
                        var getDataCompletedParse = Convert.ToDecimal(getDataCompleted.Count());
                        var getDataPendingParse = Convert.ToDecimal(getDataPending.Count());
                        var getDataAllParse = Convert.ToDecimal(getDataAll.Count());

                        var listItemDataSets = new List<decimal>();
                        var countDataCompleted = getDataCompletedParse;
                        var countDataPending = getDataPendingParse;

                        listItemDataSets.Add(countDataCompleted);
                        listItemDataSets.Add(countDataPending);

                        listItem.ElementScoreFilterSafetyLegacy = getDataCompletedParse;
                        listItem.DataFilterSafetyLegacy = listItemDataSets;
                        listItem.Area = listItemArea;
                        listItem.SalesOffice = listItemSalesOffic;
                        listItem.PSLId = listItemPSLId;
                        listItem.Completed = 0;
                    }
                }
            }
            else
            {
                var getDataCompletedParse = Convert.ToDecimal(getDataCompleted.Count());
                var getDataPendingParse = Convert.ToDecimal(getDataPending.Count());
                var getDataAllParse = Convert.ToDecimal(getDataAll.Count());

                var listItemDataSets = new List<decimal>();
                var countDataCompleted = getDataCompletedParse;
                var countDataPending = getDataPendingParse;

                listItemDataSets.Add(countDataCompleted);
                listItemDataSets.Add(countDataPending);

                listItem.ElementScoreFilterSafetyLegacy = getDataCompletedParse;
                listItem.DataFilterSafetyLegacy = listItemDataSets;
                listItem.Area = listItemArea;
                listItem.SalesOffice = listItemSalesOffic;
                listItem.PSLId = listItemPSLId;
                listItem.Completed = getDataPending.Count();
            }

            return listItem;
        }

        public DataChartPSLCompletionPIPFilterPriority GetDataForChartCompletionFilterPriority(string[] area, string[] pslId, string[] salesOffice, string[] psltype, string dateFrom, string dateEnd, string hid, string rental, string inventory, string others)
        {
            var monthFrom = DateTime.Today.AddMonths(-24);
           var monthEnd = DateTime.Today.AddMonths(-13);
            var listItem = new DataChartPSLCompletionPIPFilterPriority();
            var getDataCompletedFilter = (from item in _ctx.PSLMaster
                                          where item.LetterDate.Value >= monthFrom && item.LetterDate.Value <= monthEnd
                                          select new
                                          {
                                              Area = item.Area,
                                              PslStatus = item.Validation,
                                              PSLAge = item.PslAge,
                                              PSLType = item.PSLType,
                                              TerminationDate = item.LetterDate,
                                              SalesOffice = item.SalesOffice,
                                              PSLId = item.PSLId,
                                              rentStatus = item.RentStatus,
                                              hidStatus = item.HIDStatus,
                                              plant = item.Plant,
                                              RepairDate = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                                              DateRepair = item.RepairDate,
                                              PSLSN = item.PSLSN
                                          });
            var vargetDataCompletedFilter = (from item in getDataCompletedFilter
                                             where item.RepairDate < 365
                                             select new
                                             {
                                                 Area = item.Area,
                                                 PslStatus = item.PslStatus,
                                                 PSLAge = item.PSLAge,
                                                 PSLType = item.PSLType,
                                                 TerminationDate = item.TerminationDate,
                                                 SalesOffice = item.SalesOffice,
                                                 PSLId = item.PSLId,
                                                 rentStatus = item.rentStatus,
                                                 hidStatus = item.hidStatus,
                                                 plant = item.plant,
                                                 DateRepair = item.RepairDate,
                                                 PSLSN = item.PSLSN
                                             });
            var getDataCompleted = (from item in vargetDataCompletedFilter
                                    where item.PSLType == "P" && item.PslStatus.Contains("Completed") && item.Area != null && item.PSLId.Substring(0, 2) == "PI"
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).OrderBy(odb => odb.Area).ToList();

            var varGetDataPending = (from item in _ctx.PSLMaster
                                     where item.LetterDate.Value >= monthFrom && item.LetterDate.Value <= monthEnd
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.Validation,
                                         PSLAge = item.PslAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.RentStatus,
                                         hidStatus = item.HIDStatus,
                                         plant = item.Plant,
                                         SubsDate = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                                         RepairDate = item.RepairDate,
                                         PSLSN = item.PSLSN
                                     });
            var getDataPending = (from item in varGetDataPending
                                  where item.PSLType == "P" && item.Area != null && item.PslStatus == "Completed" && item.RepairDate == null && item.PSLId.Substring(0, 2) == "PI" || item.PSLType == "P" && item.PslStatus == "Completed" && item.Area != null && item.SubsDate > 365 && item.PSLId.Substring(0, 2) == "PI" || item.Area != null && item.PSLType == "P" && item.PSLId.Substring(0, 2) == "PI" && item.PslStatus == "Outstanding" && item.PSLAge < 365
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).OrderBy(odb => odb.Area).ToList();

            var getDataAll = (from item in vargetDataCompletedFilter
                              where item.PSLType == "P" && item.Area != null && item.PSLId.Substring(0, 2) == "PI"
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).OrderBy(odb => odb.Area).ToList();

            var getistDataPending = (from item in varGetDataPending
                                     where item.PSLType == "P" && item.Area != null && item.PslStatus == "Completed" && item.RepairDate == null && item.PSLId.Substring(0, 2) == "PI" || item.PSLType == "P" && item.PslStatus == "Completed" && item.Area != null && item.SubsDate > 365 && item.PSLId.Substring(0, 2) == "PI" || item.Area != null && item.PSLType == "P" && item.PSLId.Substring(0, 2) == "PI" && item.PslStatus == "Outstanding" && item.PSLAge < 365
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).OrderBy(odb => odb.Area).ToList();

            if (!string.IsNullOrWhiteSpace(dateFrom) && !string.IsNullOrWhiteSpace(dateEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(dateFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(dateEnd, "dd-MM-yyyy", null);
                getDataCompletedFilter = (from item in _ctx.PSLMaster
                                          where item.LetterDate.Value >= convertToDateTimeFrom && item.LetterDate.Value <= convertToDateTimeEnd
                                          select new
                                          {
                                              Area = item.Area,
                                              PslStatus = item.Validation,
                                              PSLAge = item.PslAge,
                                              PSLType = item.PSLType,
                                              TerminationDate = item.LetterDate,
                                              SalesOffice = item.SalesOffice,
                                              PSLId = item.PSLId,
                                              rentStatus = item.RentStatus,
                                              hidStatus = item.HIDStatus,
                                              plant = item.Plant,
                                              RepairDate = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                                              DateRepair = item.RepairDate,
                                              PSLSN = item.PSLSN
                                          });
                vargetDataCompletedFilter = (from item in getDataCompletedFilter
                                             where item.RepairDate < 365
                                             select new
                                             {
                                                 Area = item.Area,
                                                 PslStatus = item.PslStatus,
                                                 PSLAge = item.PSLAge,
                                                 PSLType = item.PSLType,
                                                 TerminationDate = item.TerminationDate,
                                                 SalesOffice = item.SalesOffice,
                                                 PSLId = item.PSLId,
                                                 rentStatus = item.rentStatus,
                                                 hidStatus = item.hidStatus,
                                                 plant = item.plant,
                                                 DateRepair = item.RepairDate,
                                                 PSLSN = item.PSLSN
                                             });
                getDataCompleted = (from item in vargetDataCompletedFilter
                                    where item.PSLType == "P" && item.PslStatus.Contains("Completed") && item.Area != null && item.PSLId.Substring(0, 2) == "PI"
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).OrderBy(odb => odb.Area).ToList();

                varGetDataPending = (from item in _ctx.PSLMaster
                                     where item.LetterDate.Value >= convertToDateTimeFrom && item.LetterDate.Value <= convertToDateTimeEnd
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.Validation,
                                         PSLAge = item.PslAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.RentStatus,
                                         hidStatus = item.HIDStatus,
                                         plant = item.Plant,
                                         SubsDate = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                                         RepairDate = item.RepairDate,
                                         PSLSN = item.PSLSN
                                     });
                getDataPending = (from item in varGetDataPending
                                  where item.PSLType == "P" && item.Area != null && item.PslStatus == "Completed" && item.RepairDate == null && item.PSLId.Substring(0, 2) == "PI" || item.PSLType == "P" && item.PslStatus == "Completed" && item.Area != null && item.SubsDate > 365 && item.PSLId.Substring(0, 2) == "PI" || item.Area != null && item.PSLType == "P" && item.PSLId.Substring(0, 2) == "PI" && item.PslStatus == "Outstanding" && item.PSLAge < 365
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).OrderBy(odb => odb.Area).ToList();

                getDataAll = (from item in vargetDataCompletedFilter
                              where item.PSLType == "P" && item.Area != null && item.PSLId.Substring(0, 2) == "PI"
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).OrderBy(odb => odb.Area).ToList();

                getistDataPending = (from item in varGetDataPending
                                     where item.PSLType == "P" && item.Area != null && item.PslStatus == "Completed" && item.RepairDate == null && item.PSLId.Substring(0, 2) == "PI" || item.PSLType == "P" && item.PslStatus == "Completed" && item.Area != null && item.SubsDate > 365 && item.PSLId.Substring(0, 2) == "PI" || item.Area != null && item.PSLType == "P" && item.PSLId.Substring(0, 2) == "PI" && item.PslStatus == "Outstanding" && item.PSLAge < 365
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).OrderBy(odb => odb.Area).ToList();
            }

            if (!string.IsNullOrWhiteSpace(dateFrom) && string.IsNullOrWhiteSpace(dateEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(dateFrom, "dd-MM-yyyy", null);
                getDataCompletedFilter = (from item in _ctx.PSLMaster
                                          where item.RepairDate != null && item.LetterDate != null && item.LetterDate.Value == convertToDateTimeFrom
                                          select new
                                          {
                                              Area = item.Area,
                                              PslStatus = item.Validation,
                                              PSLAge = item.PslAge,
                                              PSLType = item.PSLType,
                                              TerminationDate = item.LetterDate,
                                              SalesOffice = item.SalesOffice,
                                              PSLId = item.PSLId,
                                              rentStatus = item.RentStatus,
                                              hidStatus = item.HIDStatus,
                                              plant = item.Plant,
                                              RepairDate = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                                              DateRepair = item.RepairDate,
                                              PSLSN = item.PSLSN
                                          });
                vargetDataCompletedFilter = (from item in getDataCompletedFilter
                                             where item.RepairDate < 365
                                             select new
                                             {
                                                 Area = item.Area,
                                                 PslStatus = item.PslStatus,
                                                 PSLAge = item.PSLAge,
                                                 PSLType = item.PSLType,
                                                 TerminationDate = item.TerminationDate,
                                                 SalesOffice = item.SalesOffice,
                                                 PSLId = item.PSLId,
                                                 rentStatus = item.rentStatus,
                                                 hidStatus = item.hidStatus,
                                                 plant = item.plant,
                                                 DateRepair = item.RepairDate,
                                                 PSLSN = item.PSLSN
                                             });
                getDataCompleted = (from item in vargetDataCompletedFilter
                                    where item.PSLType == "P" && item.PslStatus.Contains("Completed") && item.Area != null && item.PSLId.Substring(0, 2) == "PI"
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).OrderBy(odb => odb.Area).ToList();

                varGetDataPending = (from item in _ctx.PSLMaster
                                     where item.LetterDate.Value == convertToDateTimeFrom
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.Validation,
                                         PSLAge = item.PslAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.RentStatus,
                                         hidStatus = item.HIDStatus,
                                         plant = item.Plant,
                                         SubsDate = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                                         RepairDate = item.RepairDate,
                                         PSLSN = item.PSLSN
                                     });
                getDataPending = (from item in varGetDataPending
                                  where item.PSLType == "P" && item.Area != null && item.RepairDate == null && item.PSLId.Substring(0, 2) == "PI" || item.PSLType == "P" && item.PslStatus == "Completed" && item.Area != null && item.SubsDate > 365 && item.PSLId.Substring(0, 2) == "PI"
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).OrderBy(odb => odb.Area).ToList();

                getDataAll = (from item in vargetDataCompletedFilter
                              where item.PSLType == "P" && item.Area != null && item.PSLId.Substring(0, 2) == "PI"
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).OrderBy(odb => odb.Area).ToList();

                getistDataPending = (from item in varGetDataPending
                                     where item.PSLType == "P" && item.Area != null && item.RepairDate == null && item.PSLId.Substring(0, 2) == "PI" || item.PSLType == "P" && item.PslStatus == "Completed" && item.Area != null && item.SubsDate > 365 && item.PSLId.Substring(0, 2) == "PI"
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).OrderBy(odb => odb.Area).ToList();
            }

            if (hid == "on" && rental == "" && inventory == "")
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.hidStatus != ""
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.hidStatus != ""
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.hidStatus != ""
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.hidStatus != ""
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.hidStatus != "" || item.rentStatus != ""
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.hidStatus != "" || item.rentStatus != ""
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.hidStatus != "" || item.rentStatus != ""
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.hidStatus != "" || item.rentStatus != ""
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.hidStatus != "" || item.plant != ""
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.hidStatus != "" || item.plant != ""
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.hidStatus != "" || item.plant != ""
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.hidStatus != "" || item.plant != ""
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.rentStatus != ""
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.rentStatus != ""
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.rentStatus != ""
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.rentStatus != ""
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.rentStatus != "" || item.plant != ""
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.rentStatus != "" || item.plant != ""
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.rentStatus != "" || item.plant != ""
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.rentStatus != "" || item.plant != ""
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.plant != ""
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.plant != ""
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.plant != ""
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.plant != ""
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.plant != "" || item.hidStatus != "" || item.rentStatus != ""
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.plant != "" || item.hidStatus != "" || item.rentStatus != ""
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.plant != "" || item.hidStatus != "" || item.rentStatus != ""
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.plant != "" || item.hidStatus != "" || item.rentStatus != ""
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.plant == "" || item.hidStatus == "" || item.rentStatus == ""
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.plant == "" || item.hidStatus == "" || item.rentStatus == ""
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.plant == "" || item.hidStatus == "" || item.rentStatus == ""
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.plant == "" || item.hidStatus == "" || item.rentStatus == ""
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (area.Count() > 0 && area != null)
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.PSLType == "P" && item.PslStatus.Contains("Completed") && area.Contains(item.Area)
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.PSLType == "P" && item.PslStatus != "Completed" && area.Contains(item.Area)
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.PSLType == "P" && area.Contains(item.Area)
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.PslStatus != "Completed" && item.PSLType == "P" && area.Contains(item.Area)
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN
                                     }).ToList();
            }

            if (salesOffice.Count() > 0 && salesOffice != null)
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.PSLType == "P" && item.PslStatus.Contains("Completed") && salesOffice.Contains(item.SalesOffice)
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN
                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.PSLType == "P" && item.PslStatus != "Completed" && salesOffice.Contains(item.SalesOffice)
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN
                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.PSLType == "P" && salesOffice.Contains(item.SalesOffice)
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN
                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.PslStatus != "Completed" && item.PSLType == "P" && salesOffice.Contains(item.SalesOffice)
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN

                                     }).ToList();
            }

            if (pslId.Count() > 0 && pslId != null)
            {
                getDataCompleted = (from item in getDataCompleted
                                    where item.PSLType == "P" && item.PslStatus.Contains("Completed") && pslId.Contains(item.PSLId)
                                    select new
                                    {
                                        Area = item.Area,
                                        PslStatus = item.PslStatus,
                                        PSLAge = item.PSLAge,
                                        PSLType = item.PSLType,
                                        TerminationDate = item.TerminationDate,
                                        SalesOffice = item.SalesOffice,
                                        PSLId = item.PSLId,
                                        rentStatus = item.rentStatus,
                                        hidStatus = item.hidStatus,
                                        plant = item.plant,
                                        PSLSN = item.PSLSN

                                    }).ToList();

                getDataPending = (from item in getDataPending
                                  where item.PSLType == "P" && item.PslStatus != "Completed" && pslId.Contains(item.PSLId)
                                  select new
                                  {
                                      Area = item.Area,
                                      PslStatus = item.PslStatus,
                                      PSLAge = item.PSLAge,
                                      PSLType = item.PSLType,
                                      TerminationDate = item.TerminationDate,
                                      SalesOffice = item.SalesOffice,
                                      PSLId = item.PSLId,
                                      rentStatus = item.rentStatus,
                                      hidStatus = item.hidStatus,
                                      plant = item.plant,
                                      PSLSN = item.PSLSN

                                  }).ToList();

                getDataAll = (from item in getDataAll
                              where item.PSLType == "P" && pslId.Contains(item.PSLId)
                              select new
                              {
                                  Area = item.Area,
                                  PslStatus = item.PslStatus,
                                  PSLAge = item.PSLAge,
                                  PSLType = item.PSLType,
                                  TerminationDate = item.TerminationDate,
                                  SalesOffice = item.SalesOffice,
                                  PSLId = item.PSLId,
                                  rentStatus = item.rentStatus,
                                  hidStatus = item.hidStatus,
                                  plant = item.plant,
                                  PSLSN = item.PSLSN

                              }).ToList();

                getistDataPending = (from item in getistDataPending
                                     where item.PslStatus != "Completed" && item.PSLType == "P" && pslId.Contains(item.PSLId)
                                     select new
                                     {
                                         Area = item.Area,
                                         PslStatus = item.PslStatus,
                                         PSLAge = item.PSLAge,
                                         PSLType = item.PSLType,
                                         TerminationDate = item.TerminationDate,
                                         SalesOffice = item.SalesOffice,
                                         PSLId = item.PSLId,
                                         rentStatus = item.rentStatus,
                                         hidStatus = item.hidStatus,
                                         plant = item.plant,
                                         PSLSN = item.PSLSN

                                     }).ToList();
            }

            var groupDataPending = getDataPending.Select(s => s.PSLSN).Distinct().Count();

            var listItemArea = new List<string>();
            var listItemSalesOffic = new List<string>();
            var listItemPSLId = new List<string>();
            var tempArea = "";

            foreach (var item in getistDataPending)
            {
                if(psltype.Count() > 0)
                {
                    foreach(var data in psltype)
                    {
                        if (data == "P")
                        {
                            if (tempArea != item.Area)
                            {
                                listItemArea.Add(item.Area);
                                tempArea = item.Area;
                            }
                            listItemSalesOffic.Add(item.SalesOffice);
                            listItemPSLId.Add(item.PSLId);
                        }
                        else
                        {
                            listItemArea = new List<string>();
                            listItemSalesOffic = new List<string>();
                            listItemPSLId = new List<string>();
                        }

                    }
                }
                else
                {
                    if (tempArea != item.Area)
                    {
                        listItemArea.Add(item.Area);
                        tempArea = item.Area;
                    }
                    listItemSalesOffic.Add(item.SalesOffice);
                    listItemPSLId.Add(item.PSLId);
                }
               
            }
            if(psltype.Count() > 0)
            {
                foreach(var item in psltype)
                {
                    if(item == "P")
                    {
                        var getDataCompletedParse = Convert.ToDecimal(getDataCompleted.Count());
                        var getDataPendingParse = Convert.ToDecimal(getDataPending.Count());
                        var getDataAllParse = Convert.ToDecimal(getDataAll.Count());

                        var listItemDataSets = new List<decimal>();
                        var countDataCompleted = (getDataCompletedParse != 0 && getDataAllParse != 0) ? (getDataCompletedParse / getDataAllParse) * 100 : 0;
                        var countDataPending = (getDataPendingParse != 0 && getDataAllParse != 0) ? (getDataPendingParse / getDataAllParse) * 100 : 0;

                        listItemDataSets.Add(countDataCompleted);
                        listItemDataSets.Add(countDataPending);

                        listItem.ElementScoreFilterPriority = getDataCompletedParse;
                        listItem.DataFilterPriority = listItemDataSets;
                        listItem.Area = listItemArea;
                        listItem.SalesOffice = listItemSalesOffic;
                        listItem.PSLId = listItemPSLId;
                        listItem.Completed = countDataCompleted;
                        listItem.CountPending = groupDataPending;
                    }
                    else
                    {
                        var getDataCompletedParse = 0;
                        var getDataPendingParse = 0;
                        var getDataAllParse = 0;

                        var listItemDataSets = new List<decimal>();
                        var countDataCompleted = (getDataCompletedParse != 0 && getDataAllParse != 0) ? (getDataCompletedParse / getDataAllParse) * 100 : 0;
                        var countDataPending = (getDataPendingParse != 0 && getDataAllParse != 0) ? (getDataPendingParse / getDataAllParse) * 100 : 0;

                        listItemDataSets.Add(countDataCompleted);
                        listItemDataSets.Add(countDataPending);

                        listItem.ElementScoreFilterPriority = getDataCompletedParse;
                        listItem.DataFilterPriority = listItemDataSets;
                        listItem.Area = listItemArea;
                        listItem.SalesOffice = listItemSalesOffic;
                        listItem.PSLId = listItemPSLId;
                        listItem.Completed = 0;
                    }
                }
            }
            else
            {
                var getDataCompletedParse = Convert.ToDecimal(getDataCompleted.Count());
                var getDataPendingParse = Convert.ToDecimal(getDataPending.Count());
                var getDataAllParse = Convert.ToDecimal(getDataAll.Count());

                var listItemDataSets = new List<decimal>();
                var countDataCompleted = (getDataCompletedParse != 0 && getDataAllParse != 0) ? (getDataCompletedParse / getDataAllParse) * 100 : 0;
                var countDataPending = (getDataPendingParse != 0 && getDataAllParse != 0) ? (getDataPendingParse / getDataAllParse) * 100 : 0;

                listItemDataSets.Add(countDataCompleted);
                listItemDataSets.Add(countDataPending);

                listItem.ElementScoreFilterPriority = getDataCompletedParse;
                listItem.DataFilterPriority = listItemDataSets;
                listItem.Area = listItemArea;
                listItem.SalesOffice = listItemSalesOffic;
                listItem.PSLId = listItemPSLId;
                listItem.Completed = countDataCompleted;
                listItem.CountPending = groupDataPending;
            }
            
            return listItem;
        }

        public List<TablePSLCompletionPIP> GetDataForTablePSLCompletionPIP(string[] splitArea, string[] splitStoreName, string[] splitPSLType, int column, string order, string valueSearch, bool searchArea, bool searchPSLNo, bool searchStoreName, bool searchModel, bool searchSerialNumber, bool searchSRNo, bool searchQuotNo, bool searchSoNo, bool searchSAPPSLStatus, string Month, string type, string hid, string rental, string inventory, string others)
        {
            var dateNow = DateTime.Now.Year - 1;
            var getListFromDate = (from item in _ctx.PSLMaster
                                   where item.Area != null && item.LetterDate.Value.Year == dateNow && item.PSLId.Substring(0, 2) == "PI" && item.PSLType == "S" || item.Area != null && item.LetterDate.Value.Year == dateNow && item.PSLId.Substring(0, 2) == "PI" && item.PSLType == "P"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLId,
                                       StoreName = item.SalesOffice,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.ServiceOrderNo,
                                       SapPSLStatus = item.Validation,
                                       PSLStatus = item.SapPSLStatus,
                                       ReleaseDate = item.ServiceOrderReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            if(splitPSLType.Count() > 0)
            {
                getListFromDate = (from item in _ctx.PSLMaster
                                   where splitPSLType.Contains(item.PSLType) && item.Area != null && item.LetterDate.Value.Year == dateNow && item.PSLId.Substring(0, 2) == "PI"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLId,
                                       StoreName = item.SalesOffice,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.ServiceOrderNo,
                                       SapPSLStatus = item.Validation,
                                       PSLStatus = item.SapPSLStatus,
                                       ReleaseDate = item.ServiceOrderReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }
            if (hid == "on" && rental == "" && inventory == "")
            {
                getListFromDate = (from item in getListFromDate
                                   where item.HIDStatus != ""
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       PSLStatus = item.PSLStatus,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                getListFromDate = (from item in getListFromDate
                                   where item.HIDStatus != "" || item.RentStatus != ""
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       PSLStatus = item.PSLStatus,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                getListFromDate = (from item in getListFromDate
                                   where item.HIDStatus != "" || item.Plant != ""
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       PSLStatus = item.PSLStatus,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                getListFromDate = (from item in getListFromDate
                                   where item.RentStatus != ""
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       PSLStatus = item.PSLStatus,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                getListFromDate = (from item in getListFromDate
                                   where item.RentStatus != "" || item.Plant != ""
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       PSLStatus = item.PSLStatus,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                getListFromDate = (from item in getListFromDate
                                   where item.Plant != ""
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       PSLStatus = item.PSLStatus,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                getListFromDate = (from item in getListFromDate
                                   where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       PSLStatus = item.PSLStatus,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                getListFromDate = (from item in getListFromDate
                                   where item.HIDStatus == "" || item.RentStatus == "" || item.Plant == ""
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       PSLStatus = item.PSLStatus,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }

            if (Month.Contains("jan"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.LetterDate.Value.Year == dateNow && item.LetterDate.Value.Month == 1 && item.SapPSLStatus == "Completed" || item.LetterDate.Value.Year == dateNow && item.LetterDate.Value.Month == 2 && item.SapPSLStatus != "Completed"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       PSLStatus = item.PSLStatus,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }
            if (Month.Contains("feb"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.LetterDate.Value.Year == dateNow && item.LetterDate.Value.Month == 2 && item.SapPSLStatus == "Completed" || item.LetterDate.Value.Year == dateNow && item.LetterDate.Value.Month == 2 && item.SapPSLStatus != "Completed"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       PSLStatus = item.PSLStatus,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }
            if (Month.Contains("mar"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.LetterDate.Value.Year == dateNow && item.LetterDate.Value.Month == 3 && item.SapPSLStatus == "Completed" || item.LetterDate.Value.Year == dateNow && item.LetterDate.Value.Month == 3 && item.SapPSLStatus != "Completed"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       PSLStatus = item.PSLStatus,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }
            if (Month.Contains("apr"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.LetterDate.Value.Year == dateNow && item.LetterDate.Value.Month == 4 && item.SapPSLStatus == "Completed" || item.LetterDate.Value.Year == dateNow && item.LetterDate.Value.Month == 4 && item.SapPSLStatus != "Completed"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       PSLStatus = item.PSLStatus,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }
            if (Month.Contains("may"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.LetterDate.Value.Year == dateNow && item.LetterDate.Value.Month == 5 && item.SapPSLStatus == "Completed" || item.LetterDate.Value.Year == dateNow && item.LetterDate.Value.Month == 5 && item.SapPSLStatus != "Completed"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       PSLStatus = item.PSLStatus,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }
            if (Month.Contains("jun"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.LetterDate.Value.Year == dateNow && item.LetterDate.Value.Month == 6 && item.SapPSLStatus == "Completed" || item.LetterDate.Value.Year == dateNow && item.LetterDate.Value.Month == 6 && item.SapPSLStatus != "Completed"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       PSLStatus = item.PSLStatus,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }
            if (Month.Contains("jul"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.LetterDate.Value.Year == dateNow && item.LetterDate.Value.Month == 7 && item.SapPSLStatus == "Completed" || item.LetterDate.Value.Year == dateNow && item.LetterDate.Value.Month == 7 && item.SapPSLStatus != "Completed"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       PSLStatus = item.PSLStatus,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }
            if (Month.Contains("aug"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.LetterDate.Value.Year == dateNow && item.LetterDate.Value.Month == 8 && item.SapPSLStatus == "Completed" || item.LetterDate.Value.Year == dateNow && item.LetterDate.Value.Month == 8 && item.SapPSLStatus != "Completed"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       PSLStatus = item.PSLStatus,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }
            if (Month.Contains("sep"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.LetterDate.Value.Year == dateNow && item.LetterDate.Value.Month == 9 && item.SapPSLStatus == "Completed" || item.LetterDate.Value.Year == dateNow && item.LetterDate.Value.Month == 9 && item.SapPSLStatus != "Completed"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       PSLStatus = item.PSLStatus,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }
            if (Month.Contains("oct"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.LetterDate.Value.Year == dateNow && item.LetterDate.Value.Month == 10 && item.SapPSLStatus == "Completed" || item.LetterDate.Value.Year == dateNow && item.LetterDate.Value.Month == 10 && item.SapPSLStatus != "Completed"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       PSLStatus = item.PSLStatus,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }
            if (Month.Contains("nov"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.LetterDate.Value.Year == dateNow && item.LetterDate.Value.Month == 11 && item.SapPSLStatus == "Completed" || item.LetterDate.Value.Year == dateNow && item.LetterDate.Value.Month == 11 && item.SapPSLStatus != "Completed"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       PSLStatus = item.PSLStatus,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }
            if (Month.Contains("dec"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.LetterDate.Value.Year == dateNow && item.LetterDate.Value.Month == 12 && item.SapPSLStatus == "Completed" || item.LetterDate.Value.Year == dateNow && item.LetterDate.Value.Month == 12 && item.SapPSLStatus != "Completed"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       PSLStatus = item.PSLStatus,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }

            if (splitArea.Count() > 0)
            {
                getListFromDate = (from item in getListFromDate
                                   where splitArea.Contains(item.Area)
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       PSLStatus = item.PSLStatus,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }

            if (splitStoreName.Count() > 0)
            {
                getListFromDate = (from item in getListFromDate
                                   where splitStoreName.Contains(item.StoreName)
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       PSLStatus = item.PSLStatus,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }

            if (type.ToLower().Contains("completed"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.SapPSLStatus.Contains("Completed")
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       PSLStatus = item.PSLStatus,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }

            if (type.ToLower().Contains("outstanding"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.SapPSLStatus != "Completed"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       PSLStatus = item.PSLStatus,
                                       ReleaseDate = item.ReleaseDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice,
                                       RentStatus = item.RentStatus,
                                       HIDStatus = item.HIDStatus,
                                       Plant = item.Plant,
                                       DaysToExpired = item.DaysToExpired,
                                       WipAge = (item.WipAge != 0) ? item.WipAge : 0,
                                       Validation = item.Validation,
                                       PslAge = item.PslAge,
                                       LetterDate = item.LetterDate,
                                       CatPSLStatus = item.CatPSLStatus,
                                       TerminationDate = item.TerminationDate
                                   });
            }



            if (!string.IsNullOrWhiteSpace(valueSearch))
            {
                if (searchArea == true || searchPSLNo || true || searchStoreName == true || searchModel == true || searchSerialNumber == true || searchSRNo == true || searchQuotNo == true || searchSoNo == true || searchSAPPSLStatus == true)
                {
                    getListFromDate = getListFromDate.Where(w => w.Area.Contains(valueSearch) || w.PSLNo.Contains(valueSearch) || w.StoreName.Contains(valueSearch) || w.Model.Contains(valueSearch) || w.SerialNumber.Contains(valueSearch) || w.ServiceRequestNo.ToString().Contains(valueSearch) || w.QuotationNo.ToString().Contains(valueSearch) || w.SONo.ToString().Contains(valueSearch) || w.SapPSLStatus.Contains(valueSearch));
                }
            }

            #region OrderData
            if (column == 0)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.Area);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.Area);
                }
            }
            else if (column == 1)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.PSLNo);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.PSLNo);
                }
            }
            else if (column == 2)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.StoreName);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.StoreName);
                }
            }
            else if (column == 3)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.Model);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.Model);
                }
            }
            else if (column == 4)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.SerialNumber);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.SerialNumber);
                }
            }
            else if (column == 5)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.ServiceRequestNo);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.ServiceRequestNo);
                }
            }
            else if (column == 6)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.QuotationNo);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.QuotationNo);
                }
            }
            else if (column == 7)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.SONo);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.SONo);
                }
            }
            else if (column == 8)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.SapPSLStatus);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.SapPSLStatus);
                }
            }
            #endregion
            var listitem = new List<TablePSLCompletionPIP>();
            int ida = 0;
            foreach (var item in getListFromDate.ToList())
            {
                var list = new TablePSLCompletionPIP();
                list.Row = ida++;
                if (!string.IsNullOrWhiteSpace(item.Area))
                {
                    list.Area = item.Area;
                }
                else
                {
                    list.Area = "-";
                }

                if (!string.IsNullOrWhiteSpace(item.PSLNo))
                {
                    list.PSLNo = item.PSLNo;
                }
                else
                {
                    list.PSLNo = "-";
                }

                if (!string.IsNullOrWhiteSpace(item.StoreName))
                {
                    list.StoreName = item.StoreName;
                }
                else
                {
                    list.StoreName = "-";
                }

                if (!string.IsNullOrWhiteSpace(item.Model))
                {
                    list.Model = item.Model;
                }
                else
                {
                    list.Model = "-";
                }

                if (!string.IsNullOrWhiteSpace(item.SerialNumber))
                {
                    list.SerialNo = item.SerialNumber;
                }
                else
                {
                    list.SerialNo = "-";
                }

                if (!string.IsNullOrWhiteSpace(item.ServiceRequestNo))
                {
                    list.SRNo = item.ServiceRequestNo;
                }
                else
                {
                    list.SRNo = "-";
                }

                if (!string.IsNullOrWhiteSpace(item.QuotationNo))
                {
                    list.QuotNo = item.QuotationNo;
                }
                else
                {
                    list.QuotNo = "-";
                }

                if (!string.IsNullOrWhiteSpace(item.SONo))
                {
                    list.SoNo = item.SONo;
                }
                else
                {
                    list.SoNo = "-";
                }

                if (!string.IsNullOrWhiteSpace(item.PSLStatus))
                {
                    list.PSLStatus = item.PSLStatus;
                }
                else
                {
                    list.PSLStatus = "-";
                }
               if(item.ReleaseDate != null)
                {
                    var dataReleaseDate = item.ReleaseDate.Value.Date.ToString();
                    var splitDate = dataReleaseDate.Split(' ');
                    list.ReleaseDateString = splitDate[0];
                }
                else
                {
                    list.ReleaseDateString = "-";
                }
               if(item.TerminationDate != null)
                {
                    var dataTerminationDate = item.TerminationDate.Value.Date.ToString();
                    var splitDate = dataTerminationDate.Split(' ');
                    list.TerminationDateString = splitDate[0];
                }
                else
                {
                    list.TerminationDateString = "-";
                }
                
                
                list.ReleaseDate = item.ReleaseDate;
                list.TerminationDate = item.TerminationDate;
                list.LetterDate = item.LetterDate;
                list.CatPSLStatus = item.CatPSLStatus;
                list.WipAge = item.WipAge;
                list.DaysToExpired = item.DaysToExpired;
                list.Validation = item.Validation;
                list.PslAge = item.PslAge;
                listitem.Add(list);
            }
            return listitem;

        }

        public List<TablePSLCompletionPIP> GetDataForTablePSLCompletionPIPCompleted(string[] splitArea, string[] splitStoreName, int column, string order, string valueSearch, bool searchArea, bool searchPSLNo, bool searchStoreName, bool searchModel, bool searchSerialNumber, bool searchSRNo, bool searchQuotNo, bool searchSoNo, bool searchSAPPSLStatus, string Month)
        {
            var dateNow = DateTime.Now;
            var getListFromDate = (from item in _ctx.PSLMaster
                                   where item.Area != "" && item.Area != null && item.TerminationDate.Value.Year == dateNow.Year
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLId,
                                       StoreName = item.SalesOffice,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.ServiceOrderNo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice
                                   });
            if (Month.Contains("jan"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.TerminationDate.Value.Year == dateNow.Year && item.TerminationDate.Value.Month == 1 && item.SapPSLStatus == "Completed"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice
                                   });
            }
            if (Month.Contains("feb"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.TerminationDate.Value.Year == dateNow.Year && item.TerminationDate.Value.Month == 2 && item.SapPSLStatus == "Completed"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice
                                   });
            }
            if (Month.Contains("mar"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.TerminationDate.Value.Year == dateNow.Year && item.TerminationDate.Value.Month == 3 && item.SapPSLStatus == "Completed"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice
                                   });
            }
            if (Month.Contains("apr"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.TerminationDate.Value.Year == dateNow.Year && item.TerminationDate.Value.Month == 4 && item.SapPSLStatus == "Completed"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice
                                   });
            }
            if (Month.Contains("may"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.TerminationDate.Value.Year == dateNow.Year && item.TerminationDate.Value.Month == 5 && item.SapPSLStatus == "Completed" 
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice
                                   });
            }
            if (Month.Contains("jun"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.TerminationDate.Value.Year == dateNow.Year && item.TerminationDate.Value.Month == 6 && item.SapPSLStatus == "Completed"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice
                                   });
            }
            if (Month.Contains("jul"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.TerminationDate.Value.Year == dateNow.Year && item.TerminationDate.Value.Month == 7 && item.SapPSLStatus == "Completed"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice
                                   });
            }
            if (Month.Contains("aug"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.TerminationDate.Value.Year == dateNow.Year && item.TerminationDate.Value.Month == 8 && item.SapPSLStatus == "Completed"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice
                                   });
            }
            if (Month.Contains("sep"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.TerminationDate.Value.Year == dateNow.Year && item.TerminationDate.Value.Month == 9 && item.SapPSLStatus == "Completed"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice
                                   });
            }
            if (Month.Contains("oct"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.TerminationDate.Value.Year == dateNow.Year && item.TerminationDate.Value.Month == 10 && item.SapPSLStatus == "Completed"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice
                                   });
            }
            if (Month.Contains("nov"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.TerminationDate.Value.Year == dateNow.Year && item.TerminationDate.Value.Month == 11 && item.SapPSLStatus == "Completed"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice
                                   });
            }
            if (Month.Contains("dec"))
            {
                getListFromDate = (from item in getListFromDate
                                   where item.TerminationDate.Value.Year == dateNow.Year && item.TerminationDate.Value.Month == 12 && item.SapPSLStatus == "Completed"
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice
                                   });
            }

            if (splitArea.Count() > 0)
            {
                getListFromDate = (from item in getListFromDate
                                   where splitArea.Contains(item.Area)
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice
                                   });
            }

            if (splitStoreName.Count() > 0)
            {
                getListFromDate = (from item in getListFromDate
                                   where splitStoreName.Contains(item.StoreName)
                                   select new
                                   {
                                       Area = item.Area,
                                       PSLNo = item.PSLNo,
                                       StoreName = item.StoreName,
                                       Model = item.Model,
                                       SerialNumber = item.SerialNumber,
                                       ServiceRequestNo = item.ServiceRequestNo,
                                       QuotationNo = item.QuotationNo,
                                       SONo = item.SONo,
                                       SapPSLStatus = item.SapPSLStatus,
                                       TerminationDate = item.TerminationDate,
                                       PSLType = item.PSLType,
                                       SalesOffice = item.SalesOffice
                                   });
            }
            

            if (!string.IsNullOrWhiteSpace(valueSearch))
            {
                if (searchArea == true || searchPSLNo || true || searchStoreName == true || searchModel == true || searchSerialNumber == true || searchSRNo == true || searchQuotNo == true || searchSoNo == true || searchSAPPSLStatus == true)
                {
                    getListFromDate = getListFromDate.Where(w => w.Area.Contains(valueSearch) || w.PSLNo.Contains(valueSearch) || w.StoreName.Contains(valueSearch) || w.Model.Contains(valueSearch) || w.SerialNumber.Contains(valueSearch) || w.ServiceRequestNo.ToString().Contains(valueSearch) || w.QuotationNo.ToString().Contains(valueSearch) || w.SONo.ToString().Contains(valueSearch) || w.SapPSLStatus.Contains(valueSearch));
                }
            }

            #region OrderData
            if (column == 0)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.Area);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.Area);
                }
            }
            else if (column == 1)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.PSLNo);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.PSLNo);
                }
            }
            else if (column == 2)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.StoreName);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.StoreName);
                }
            }
            else if (column == 3)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.Model);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.Model);
                }
            }
            else if (column == 4)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.SerialNumber);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.SerialNumber);
                }
            }
            else if (column == 5)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.ServiceRequestNo);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.ServiceRequestNo);
                }
            }
            else if (column == 6)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.QuotationNo);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.QuotationNo);
                }
            }
            else if (column == 7)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.SONo);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.SONo);
                }
            }
            else if (column == 8)
            {
                if (order == "asc")
                {
                    getListFromDate = getListFromDate.OrderBy(ord => ord.SapPSLStatus);
                }
                else
                {
                    getListFromDate = getListFromDate.OrderByDescending(odb => odb.SapPSLStatus);
                }
            }
            #endregion
            var listitem = new List<TablePSLCompletionPIP>();
            int ida = 0;
            foreach (var item in getListFromDate.ToList())
            {
                var list = new TablePSLCompletionPIP();
                list.Row = ida++;
                list.Area = item.Area;
                list.PSLNo = item.PSLNo;
                list.StoreName = item.StoreName;
                list.Model = item.Model;
                list.SerialNo = item.SerialNumber;
                list.SRNo = item.ServiceRequestNo;
                list.QuotNo = item.QuotationNo;
                list.SoNo = item.SONo;
                list.PSLStatus = item.SapPSLStatus;
                listitem.Add(list);
            }
            return listitem;

        }

        public List<string> GetListSalesOfficeForCompletionPipSafety(string parent, string dateRangeFrom, string dateRangeEnd, string inventory, string rental, string hid, string others, string[] splitPSLType, string[] area, string[] storeName)
        {
            var monthFrom = DateTime.Today.AddMonths(-24);
            var monthEnd = DateTime.Today.AddMonths(-13);
            var getData = (from item in _ctx.PSLMaster
                           where item.LetterDate.Value >= monthFrom && item.LetterDate.Value <= monthEnd
                           select new
                           {
                               PSLAge = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                               PSLAGE = item.PslAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });

            if (!string.IsNullOrWhiteSpace(dateRangeFrom) && !string.IsNullOrWhiteSpace(dateRangeEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(dateRangeEnd, "dd-MM-yyyy", null);
                getData = (from item in _ctx.PSLMaster
                           where item.LetterDate.Value >= convertToDateTimeFrom && item.LetterDate.Value <= convertToDateTimeEnd
                           select new
                           {
                               PSLAge = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                               PSLAGE = item.PslAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }
            if (!string.IsNullOrWhiteSpace(dateRangeFrom) && string.IsNullOrWhiteSpace(dateRangeEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFrom, "dd-MM-yyyy", null);
                //var convertToDateTimeEnd = DateTime.ParseExact(dateRangeEnd, "dd-MM-yyyy", null);
                getData = (from item in _ctx.PSLMaster
                           where item.LetterDate.Value == convertToDateTimeFrom
                           select new
                           {
                               PSLAge = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                               PSLAGE = item.PslAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if(area.Count() > 0)
            {
                getData = (from item in getData
                           where area.Contains(item.Area)
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if(storeName.Count() > 0)
            {
                getData = (from item in getData
                           where storeName.Contains(item.SalesOffice)
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "on" && rental == "" && inventory == "")
            {
                getData = (from item in getData
                           where item.HIDStatus != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                getData = (from item in getData
                           where item.HIDStatus != "" || item.RentStatus != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                getData = (from item in getData
                           where item.HIDStatus != "" || item.Plant != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                getData = (from item in getData
                           where item.RentStatus != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                getData = (from item in getData
                           where item.RentStatus != "" || item.Plant != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                getData = (from item in getData
                           where item.Plant != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                getData = (from item in getData
                           where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                getData = (from item in getData
                           where item.HIDStatus == "" || item.RentStatus == "" || item.Plant == ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            var vargetData = (from item in getData
                              where item.Area == parent && item.PSLType == "S" && item.Validation == "Completed" && item.RepairDate == null && item.PSLId.Substring(0, 2) == "PI" || item.Area == parent && item.PSLType == "S" && item.Validation == "Completed" && item.PSLAge > 365 && item.PSLId.Substring(0, 2) == "PI" || item.Area == parent && item.PSLType == "S" && item.PSLId.Substring(0, 2) == "PI" && item.Validation == "Outstanding" && item.PSLAGE < 365
                              group item by item.SalesOffice into sales
                           select new
                           {
                               SalesOffice = sales.FirstOrDefault().SalesOffice
                           }).ToList();
            var listData = new List<string>();
            foreach(var item in vargetData)
            {
                listData.Add(item.SalesOffice);
            }
            return listData;
        }

        public List<string> GetListPSLIdForCompletionPipSafety(string parent, string parentSalesOffice, string dateRangeFrom, string dateRangeEnd, string inventory, string rental, string hid, string others, string[] splitPSLType, string[] area, string[] storeName)
        {
            var monthFrom = DateTime.Today.AddMonths(-24);
           var monthEnd = DateTime.Today.AddMonths(-13);
            var getData = (from item in _ctx.PSLMaster
                           where item.LetterDate.Value >= monthFrom && item.LetterDate.Value <= monthEnd
                           select new
                           {
                               PSLAge = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                               PSLAGE = item.PslAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLSN,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });

            if (!string.IsNullOrWhiteSpace(dateRangeFrom) && !string.IsNullOrWhiteSpace(dateRangeEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(dateRangeEnd, "dd-MM-yyyy", null);
                getData = (from item in _ctx.PSLMaster
                           where item.LetterDate.Value >= convertToDateTimeFrom && item.LetterDate.Value <= convertToDateTimeEnd
                           select new
                           {
                               PSLAge = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                               PSLAGE = item.PslAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }
            if (!string.IsNullOrWhiteSpace(dateRangeFrom) && string.IsNullOrWhiteSpace(dateRangeEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFrom, "dd-MM-yyyy", null);
                //var convertToDateTimeEnd = DateTime.ParseExact(dateRangeEnd, "dd-MM-yyyy", null);
                getData = (from item in _ctx.PSLMaster
                           where item.LetterDate.Value == convertToDateTimeFrom
                           select new
                           {
                               PSLAge = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                               PSLAGE = item.PslAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if(area.Count() > 0)
            {
                getData = (from item in getData
                           where area.Contains(item.Area)
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if(storeName.Count() > 0)
            {
                getData = (from item in getData
                           where storeName.Contains(item.SalesOffice)
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "on" && rental == "" && inventory == "")
            {
                getData = (from item in getData
                           where item.HIDStatus != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                getData = (from item in getData
                           where item.HIDStatus != "" || item.RentStatus != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                getData = (from item in getData
                           where item.HIDStatus != "" || item.Plant != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                getData = (from item in getData
                           where item.RentStatus != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                getData = (from item in getData
                           where item.RentStatus != "" || item.Plant != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                getData = (from item in getData
                           where item.Plant != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                getData = (from item in getData
                           where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                getData = (from item in getData
                           where item.HIDStatus == "" || item.RentStatus == "" || item.Plant == ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }


            var vargetData = (from item in getData
                              where item.Area == parent && item.SalesOffice == parentSalesOffice && item.PSLType == "S" && item.Validation == "Completed" && item.RepairDate == null && item.PSLId.Substring(0, 2) == "PI" || item.Area == parent && item.SalesOffice == parentSalesOffice && item.PSLType == "S" && item.Validation == "Completed" && item.PSLAge > 365 && item.PSLId.Substring(0, 2) == "PI" || item.Area == parent && item.SalesOffice == parentSalesOffice && item.PSLType == "S" && item.PSLId.Substring(0, 2) == "PI" && item.Validation == "Outstanding" && item.PSLAGE < 365
                              group item by item.PSLId into pslId
                              select new
                              {
                                  PSLSN = pslId.FirstOrDefault().PSLId
                              }).ToList();
            var listData = new List<string>();
            foreach (var item in vargetData)
            {
                listData.Add(item.PSLSN);
            }
            return listData;
        }

        public List<string> GetListSalesOfficeForCompletionPipSafetyLegacy(string parent, string dateRangeFrom, string dateRangeEnd, string inventory, string rental, string hid, string others, string[] splitPSLType, string[] area, string[] storeName)
        {
            var monthFrom = DateTime.Today.AddMonths(-24);
           var monthEnd = DateTime.Today.AddMonths(-13);
            var getData = (from item in _ctx.PSLMaster
                           where item.LetterDate.Value >= monthFrom && item.LetterDate.Value <= monthEnd
                           select new
                           {
                               PSLAge = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                           });
            if (!string.IsNullOrWhiteSpace(dateRangeFrom) && !string.IsNullOrWhiteSpace(dateRangeEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(dateRangeEnd, "dd-MM-yyyy", null);
                getData = (from item in _ctx.PSLMaster
                           where item.LetterDate.Value >= convertToDateTimeFrom && item.LetterDate.Value <= convertToDateTimeEnd
                           select new
                           {
                               PSLAge = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                           });
            }
            if (!string.IsNullOrWhiteSpace(dateRangeFrom) && string.IsNullOrWhiteSpace(dateRangeEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFrom, "dd-MM-yyyy", null);
                //var convertToDateTimeEnd = DateTime.ParseExact(dateRangeEnd, "dd-MM-yyyy", null);
                getData = (from item in _ctx.PSLMaster
                           where item.LetterDate.Value == convertToDateTimeFrom
                           select new
                           {
                               PSLAge = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant,
                           });
            }

            if(area.Count() > 0)
            {
                getData = (from item in getData
                           where area.Contains(item.Area)
                           select new
                           {
                               PSLAge = item.PSLAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant
                           });
            }
            if (storeName.Count() > 0)
            {
                getData = (from item in getData
                           where storeName.Contains(item.SalesOffice)
                           select new
                           {
                               PSLAge = item.PSLAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "on" && rental == "" && inventory == "")
            {
                getData = (from item in getData
                           where item.HIDStatus != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                getData = (from item in getData
                           where item.HIDStatus != "" || item.RentStatus != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                getData = (from item in getData
                           where item.HIDStatus != "" || item.Plant != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                getData = (from item in getData
                           where item.RentStatus != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                getData = (from item in getData
                           where item.RentStatus != "" || item.Plant != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                getData = (from item in getData
                           where item.Plant != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                getData = (from item in getData
                           where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant
                           });
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                getData = (from item in getData
                           where item.HIDStatus == "" || item.RentStatus == "" || item.Plant == ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               RentStatus = item.RentStatus,
                               HIDStatus = item.HIDStatus,
                               Plant = item.Plant
                           });
            }

            var getDataRebuil = (from item in getData
                                 select new
                                 {
                                     PSLAge = item.PSLAge,
                                     SalesOffice = item.SalesOffice,
                                     Area = item.Area,
                                     PSLType = item.PSLType,
                                     Validation = item.Validation,
                                     PSLId = item.PSLId,
                                     RepairDate = item.RepairDate
                                 });

            var vargetData = (from item in getDataRebuil
                           where item.Area == parent && item.PSLType == "S" && item.Area != null && item.PSLId.Substring(0, 2) == "PI" && item.RepairDate == null && item.PSLAge > 365
                           group item by item.SalesOffice into sales
                           select new
                           {
                               SalesOffice = sales.FirstOrDefault().SalesOffice
                           }).ToList();
            var listData = new List<string>();
            foreach (var item in vargetData)
            {
                listData.Add(item.SalesOffice);
            }
            return listData;
        }

        public List<string> GetListPSLIdForCompletionPipSafetyLegacy(string parent, string parentSalesOffice, string dateRangeFrom, string dateRangeEnd, string inventory, string rental, string hid, string others, string[] splitPSLType, string[] area, string[] storeName)
        {
            var monthFrom = DateTime.Today.AddMonths(-24);
           var monthEnd = DateTime.Today.AddMonths(-13);
            var getData = (from item in _ctx.PSLMaster
                           where item.LetterDate.Value >= monthFrom && item.LetterDate.Value <= monthEnd
                           select new
                           {
                               PSLAge = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                               PSLAGE = item.PslAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLSN,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });

            if (!string.IsNullOrWhiteSpace(dateRangeFrom) && !string.IsNullOrWhiteSpace(dateRangeEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(dateRangeEnd, "dd-MM-yyyy", null);
                getData = (from item in _ctx.PSLMaster
                           where item.LetterDate.Value >= convertToDateTimeFrom && item.LetterDate.Value <= convertToDateTimeEnd
                           select new
                           {
                               PSLAge = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                               PSLAGE = item.PslAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLSN,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }
            if (!string.IsNullOrWhiteSpace(dateRangeFrom) && string.IsNullOrWhiteSpace(dateRangeEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFrom, "dd-MM-yyyy", null);
                //var convertToDateTimeEnd = DateTime.ParseExact(dateRangeEnd, "dd-MM-yyyy", null);
                getData = (from item in _ctx.PSLMaster
                           where item.LetterDate.Value == convertToDateTimeFrom
                           select new
                           {
                               PSLAge = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                               PSLAGE = item.PslAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLSN,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if(area.Count() > 0)
            {
                getData = (from item in getData
                           where area.Contains(item.Area)
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }
            if (storeName.Count() > 0)
            {
                getData = (from item in getData
                           where storeName.Contains(item.SalesOffice)
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "on" && rental == "" && inventory == "")
            {
                getData = (from item in getData
                           where item.HIDStatus != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                getData = (from item in getData
                           where item.HIDStatus != "" || item.RentStatus != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                getData = (from item in getData
                           where item.HIDStatus != "" || item.Plant != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                getData = (from item in getData
                           where item.RentStatus != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                getData = (from item in getData
                           where item.RentStatus != "" || item.Plant != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                getData = (from item in getData
                           where item.Plant != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                getData = (from item in getData
                           where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                getData = (from item in getData
                           where item.HIDStatus == "" || item.RentStatus == "" || item.Plant == ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            var vargetData = (from item in getData
                              where item.Area == parent && item.SalesOffice == parentSalesOffice && item.PSLId != "" && item.PSLType == "S" && item.Area != null && item.PSLId.Substring(0, 2) == "PI" && item.RepairDate == null && item.PSLAge > 365
                              group item by item.PSLId into pslId
                              select new
                              {
                                  PSLSN = pslId.FirstOrDefault().PSLId
                              }).ToList();
            var listData = new List<string>();
            foreach (var item in vargetData)
            {
                listData.Add(item.PSLSN);
            }
            return listData;
            //var getData = (from item in _ctx.PSLMaster
            //               select new
            //               {
            //                   PSLAge = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
            //                   SalesOffice = item.SalesOffice,
            //                   Area = item.Area,
            //                   PSLType = item.PSLType,
            //                   Validation = item.Validation,
            //                   PSLId = item.PSLId,
            //                   PSLSN = item.PSLSN,
            //                   RepairDate = item.RepairDate
            //               });
            //var getDataRebuil = (from item in getData
            //                     select new
            //                     {
            //                         PSLAge = item.PSLAge,
            //                         SalesOffice = item.SalesOffice,
            //                         Area = item.Area,
            //                         PSLType = item.PSLType,
            //                         Validation = item.Validation,
            //                         PSLId = item.PSLId,
            //                         PSLSN = item.PSLSN,
            //                         RepairDate = item.RepairDate
            //                     });
            //var vargetData = (from item in getDataRebuil
            //               where item.Area == parent && item.SalesOffice == parentSalesOffice && item.PSLId != "" && item.PSLType == "S" && item.Area != null && item.PSLId.Substring(0, 2) == "PI" && item.RepairDate == null && item.PSLAge > 365
            //                  group item by item.PSLSN into psl
            //               select new
            //               {
            //                   PSLId = psl.FirstOrDefault().PSLSN
            //               }).ToList();
            //var listData = new List<string>();
            //foreach (var item in vargetData)
            //{
            //    listData.Add(item.PSLId);
            //}
            //return listData;
        }

        public List<string> GetListSalesOfficeForCompletionPipPriority(string parent, string dateRangeFrom, string dateRangeEnd, string inventory, string rental, string hid, string others, string[] splitPSLType, string[] area, string[] storeName)
        {
            var monthFrom = DateTime.Today.AddMonths(-24);
           var monthEnd = DateTime.Today.AddMonths(-13);
            var getData = (from item in _ctx.PSLMaster
                           where item.LetterDate.Value >= monthFrom && item.LetterDate.Value <= monthEnd
                           select new
                           {
                               PSLAge = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                               PSLAGE = item.PslAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });

            if (!string.IsNullOrWhiteSpace(dateRangeFrom) && !string.IsNullOrWhiteSpace(dateRangeEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(dateRangeEnd, "dd-MM-yyyy", null);
                getData = (from item in _ctx.PSLMaster
                           where item.LetterDate.Value >= convertToDateTimeFrom && item.LetterDate.Value <= convertToDateTimeEnd
                           select new
                           {
                               PSLAge = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                               PSLAGE = item.PslAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }
            if (!string.IsNullOrWhiteSpace(dateRangeFrom) && string.IsNullOrWhiteSpace(dateRangeEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFrom, "dd-MM-yyyy", null);
                //var convertToDateTimeEnd = DateTime.ParseExact(dateRangeEnd, "dd-MM-yyyy", null);
                getData = (from item in _ctx.PSLMaster
                           where item.LetterDate.Value == convertToDateTimeFrom
                           select new
                           {
                               PSLAge = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                               PSLAGE = item.PslAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if(area.Count() > 0)
            {
                getData = (from item in getData
                           where area.Contains(item.Area)
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }
            if (storeName.Count() > 0)
            {
                getData = (from item in getData
                           where storeName.Contains(item.SalesOffice)
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "on" && rental == "" && inventory == "")
            {
                getData = (from item in getData
                           where item.HIDStatus != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                getData = (from item in getData
                           where item.HIDStatus != "" || item.RentStatus != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                getData = (from item in getData
                           where item.HIDStatus != "" || item.Plant != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                getData = (from item in getData
                           where item.RentStatus != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                getData = (from item in getData
                           where item.RentStatus != "" || item.Plant != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                getData = (from item in getData
                           where item.Plant != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                getData = (from item in getData
                           where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                getData = (from item in getData
                           where item.HIDStatus == "" || item.RentStatus == "" || item.Plant == ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            var vargetData = (from item in getData
                              where item.Area == parent && item.PSLType == "P" && item.Validation == "Completed" && item.RepairDate == null && item.PSLId.Substring(0, 2) == "PI" || item.Area == parent && item.PSLType == "P" && item.Validation == "Completed" && item.PSLAge > 365 && item.PSLId.Substring(0, 2) == "PI" || item.Area == parent && item.PSLType == "P" && item.PSLId.Substring(0, 2) == "PI" && item.Validation == "Outstanding" && item.PSLAGE < 365
                              group item by item.SalesOffice into sales
                              select new
                              {
                                  SalesOffice = sales.FirstOrDefault().SalesOffice
                              }).ToList();
            var listData = new List<string>();
            foreach (var item in vargetData)
            {
                listData.Add(item.SalesOffice);
            }
            return listData;
        }

        public List<string> GetListPSLIdForCompletionPipPriority(string parent, string parentSalesOffice, string dateRangeFrom, string dateRangeEnd, string inventory, string rental, string hid, string others, string[] splitPSLType, string[] area, string[] storeName)
        {
            var monthFrom = DateTime.Today.AddMonths(-24);
           var monthEnd = DateTime.Today.AddMonths(-13);
            var getData = (from item in _ctx.PSLMaster
                           where item.LetterDate.Value >= monthFrom && item.LetterDate.Value <= monthEnd
                           select new
                           {
                               PSLAge = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                               PSLAGE = item.PslAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLSN,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });

            if (!string.IsNullOrWhiteSpace(dateRangeFrom) && !string.IsNullOrWhiteSpace(dateRangeEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFrom, "dd-MM-yyyy", null);
                var convertToDateTimeEnd = DateTime.ParseExact(dateRangeEnd, "dd-MM-yyyy", null);
                getData = (from item in _ctx.PSLMaster
                           where item.LetterDate.Value >= convertToDateTimeFrom && item.LetterDate.Value <= convertToDateTimeEnd
                           select new
                           {
                               PSLAge = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                               PSLAGE = item.PslAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLSN,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }
            if (!string.IsNullOrWhiteSpace(dateRangeFrom) && string.IsNullOrWhiteSpace(dateRangeEnd))
            {
                var convertToDateTimeFrom = DateTime.ParseExact(dateRangeFrom, "dd-MM-yyyy", null);
                //var convertToDateTimeEnd = DateTime.ParseExact(dateRangeEnd, "dd-MM-yyyy", null);
                getData = (from item in _ctx.PSLMaster
                           where item.LetterDate.Value == convertToDateTimeFrom
                           select new
                           {
                               PSLAge = DbFunctions.DiffDays(item.LetterDate, item.RepairDate),
                               PSLAGE = item.PslAge,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLSN,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if(area.Count() > 0)
            {
                getData = (from item in getData
                           where area.Contains(item.Area)
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (storeName.Count() > 0)
            {
                getData = (from item in getData
                           where storeName.Contains(item.SalesOffice)
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }


            if (hid == "on" && rental == "" && inventory == "")
            {
                getData = (from item in getData
                           where item.HIDStatus != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "on" && rental == "on" && inventory == "")
            {
                getData = (from item in getData
                           where item.HIDStatus != "" || item.RentStatus != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "on" && rental == "" && inventory == "on")
            {
                getData = (from item in getData
                           where item.HIDStatus != "" || item.Plant != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "" && rental == "on" && inventory == "")
            {
                getData = (from item in getData
                           where item.RentStatus != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "" && rental == "on" && inventory == "on")
            {
                getData = (from item in getData
                           where item.RentStatus != "" || item.Plant != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "" && rental == "" && inventory == "on")
            {
                getData = (from item in getData
                           where item.Plant != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (hid == "on" && rental == "on" && inventory == "on")
            {
                getData = (from item in getData
                           where item.RentStatus != "" || item.Plant != "" || item.HIDStatus != ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            if (others == "on" && hid == "" && rental == "" && inventory == "")
            {
                getData = (from item in getData
                           where item.HIDStatus == "" || item.RentStatus == "" || item.Plant == ""
                           select new
                           {
                               PSLAge = item.PSLAge,
                               PSLAGE = item.PSLAGE,
                               SalesOffice = item.SalesOffice,
                               Area = item.Area,
                               PSLType = item.PSLType,
                               Validation = item.Validation,
                               PSLId = item.PSLId,
                               RepairDate = item.RepairDate,
                               LetterDate = item.LetterDate,
                               HIDStatus = item.HIDStatus,
                               RentStatus = item.RentStatus,
                               Plant = item.Plant
                           });
            }

            var vargetData = (from item in getData
                              where item.Area == parent && item.SalesOffice == parentSalesOffice && item.PSLType == "P" && item.Validation == "Completed" && item.RepairDate == null && item.PSLId.Substring(0, 2) == "PI" || item.Area == parent && item.SalesOffice == parentSalesOffice && item.PSLType == "P" && item.Validation == "Completed" && item.PSLAge > 365 && item.PSLId.Substring(0, 2) == "PI" || item.Area == parent && item.SalesOffice == parentSalesOffice && item.PSLType == "P" && item.PSLId.Substring(0, 2) == "PI" && item.Validation == "Outstanding" && item.PSLAGE < 365
                              group item by item.PSLId into pslId
                              select new
                              {
                                  PSLSN = pslId.FirstOrDefault().PSLId
                              }).ToList();
            var listData = new List<string>();
            foreach (var item in vargetData)
            {
                listData.Add(item.PSLSN);
            }
            return listData;
        }
      

        public Tuple<List<TablePSLUpdateOverview>, int> GetDataForTablePSLUpdateOverview(string[] SerialNumber, int Start, int length,int download)
        {
            Start = Start == null ? 0 :Start;
            length = length == null ? 10 : length;
            int ida = 0;
            var listItem = new List<TablePSLUpdateOverview>();
            List<PSLMaster> listDataSN = new List<PSLMaster>();
            if (SerialNumber.Length > 0)
            {

                var getdata = _ctx.PSLMaster.Where(item => !item.TerritoryIndicator.Contains("Out Of Territory"));
                foreach (var item in getdata)
                {
                    if (SerialNumber.Contains(item.SerialNumber))
                    {
                        listDataSN.Add(item);
                    }
                }

                var groupItem = listDataSN.GroupBy(g => new { g.Area, g.PSLId }).Select(item => item.FirstOrDefault());

                
                foreach (var item in groupItem)
                {
                    if (SerialNumber.Contains(item.SerialNumber))
                    {
                        var list = new TablePSLUpdateOverview();

                        if (!string.IsNullOrWhiteSpace(item.Area))
                        {
                            list.Area = item.Area;
                        }
                        else
                        {
                            list.Area = "-";
                        }
                        list.PSLId = item.PSLId;
                        list.TotalAmount = item.TotalAmount;
                        list.TotalSO = (item.SoTotalCost != 0 && item.SoTotalCost != null) ? item.SoTotalCost : 0;
                        list.TotalClaim = (item.WarrantyClaimTotal != 0 && item.WarrantyClaimTotal != null) ? item.WarrantyClaimTotal : 0;
                        list.Settled = item.Settled;
                        list.ReleaseDate = item.ServiceOrderReleaseDate;
                        list.TerminationDate = item.TerminationDate;
                        list.DaysToExpired = item.DaysToExpired;
                        list.Validation = item.Validation;
                        list.PslAge = item.PslAge;
                        listItem.Add(list);
                    }
                }
                var countData = listItem.Count();
                if (download != 1)
                {
                    listItem = listItem.OrderBy(ob => true).Skip(Start).Take(length).ToList();
                }
                return Tuple.Create(listItem, countData);
            }
            else
            {
                var dataBaru = _ctx.PSLMaster.Take(0);
                foreach (var item in dataBaru)
                {
                    var list = new TablePSLUpdateOverview();
                    list.Row = ida++;
                    if (!string.IsNullOrWhiteSpace(item.Area))
                    {
                        list.Area = item.Area;
                    }
                    else
                    {
                        list.Area = "-";
                    }
                    list.Model = item.Model;
                    list.PSLId = item.PSLId;
                    list.TotalAmount = item.TotalAmount;
                    list.TotalSO = item.SoTotalCost;
                    list.TotalClaim = item.TotalAmount;
                    list.Settled = item.Settled;
                    list.ReleaseDate = item.ServiceOrderReleaseDate;
                    list.TerminationDate = item.TerminationDate;
                    list.DaysToExpired = item.DaysToExpired;
                    list.Validation = item.Validation;
                    list.PslAge = item.PslAge;
                    list.CountData = item.ServiceClaimAllowanceGroup;
                    listItem.Add(list);
                }
                return Tuple.Create(listItem, 0);
            }
            
        }

       
    }
}
