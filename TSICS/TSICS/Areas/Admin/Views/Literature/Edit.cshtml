@model Com.Trakindo.TSICS.Data.Model.Article
@using Com.Trakindo.TSICS.Data.Model

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";

    List<SelectListItem> listCategoryEmpty = new List<SelectListItem>();
    listCategoryEmpty.Add(new SelectListItem { Text = "Select Category", Value = null });


    List<SelectListItem> listStatus = new List<SelectListItem>();
    listStatus.Add(new SelectListItem { Text = "Publish", Value = "1", Selected = Model.Status == 1 ? true : false });
    listStatus.Add(new SelectListItem { Text = "Reject", Value = "3", Selected = Model.Status == 3 ? true : false });

    List<SelectListItem> userLevelList = new List<SelectListItem>();
    userLevelList.Add(new SelectListItem { Text = "Guest", Value = "guest" });
    userLevelList.Add(new SelectListItem { Text = "Green", Value = "green" });
    userLevelList.Add(new SelectListItem { Text = "Yellow", Value = "yellow" });
}

<main class="body position-relative d-flex flex-column">
    <div data-active_page="Literature--all-post" class="content-wrap flex-fill">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", id = "request-form", novalidate = "", Class = "needs-validation" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.ArticleId)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <section class="position-relative mt-5">
                <div class="container-fluid container-admin ml-0">
                    <div class="row">
                        <div class="col-lg-12 position-relative">
                            <h3 class="font-secondary"> <span class="text-dark">EDIT </span><span class="text-secondary">LITERATURE</span></h3>
                            <section class="card bg-white shadow-sm border-0 mb-5">
                                <nav class="card-navbar navbar navbar-dark bg-secondary text-white">
                                    <div class="left d-flex align-items-center">
                                        <div class="h4 font-secondary mb-0">CHOOSE CATEGORY</div>
                                    </div>
                                    <div class="right">
                                        <button data-toggle="collapse" data-target="#collapse-target-1" type="button" class="btn btn-sm bg-transparent rounded-pill text-white btn-remove"><i class="fa fa-chevron-right"></i></button>
                                    </div>
                                </nav>
                                <fieldset id="collapse-target-1" class="collapse show">
                                    <legend></legend>
                                    <div class="card-body">

                                        <div class="form-group row no-gutters">
                                            <div class="col-md-3 d-flex justify-content-between align-items-center">Category 1<span class="d-none d-md-inline mx-1">:</span></div>
                                            <div class="col-md-9">
                                                @Html.DropDownListFor(model => model.Category1Id, new SelectList(ViewBag.ListCategory1, "ArticleCategoryId", "Name"), "Select Category", new { @required = "", @class = "selectpicker", placeholder = "Select Category", data_style = "border bg-white", data_width = "100%", data_live_search = "true", data_container = "body" })
                                            </div>
                                        </div>
                                        <div class="form-group row no-gutters">
                                            <div class="col-md-3 d-flex justify-content-between align-items-center">Category 2<span class="d-none d-md-inline mx-1">:</span></div>
                                            <div class="col-md-9">
                                                @Html.DropDownListFor(model => model.Category2Id, new SelectList(ViewBag.ListCategory2, "ArticleCategoryId", "Name"), null, new { @class = "form-control", placeholder = "Select Category", data_style = "border bg-white", data_width = "100%", data_live_search = "true", data_container = "body" })
                                            </div>
                                        </div>
                                        <div class="form-group row no-gutters">
                                            <div class="col-md-3 d-flex justify-content-between align-items-center">Category 3<span class="d-none d-md-inline mx-1">:</span></div>
                                            <div class="col-md-9">
                                                @Html.DropDownListFor(model => model.Category3Id, new SelectList(ViewBag.ListCategory3, "ArticleCategoryId", "Name"), null, new { @class = "form-control", placeholder = "Select Category", data_style = "border bg-white", data_width = "100%", data_live_search = "true", data_container = "body" })
                                            </div>
                                        </div>
                                        <div class="form-group row no-gutters">
                                            <div class="col-md-3 d-flex justify-content-between align-items-center">Category 4<span class="d-none d-md-inline mx-1">:</span></div>
                                            <div class="col-md-9">
                                                @Html.DropDownListFor(model => model.Category4Id, new SelectList(ViewBag.ListCategory4, "ArticleCategoryId", "Name"), null, new { @class = "form-control", placeholder = "Select Category", data_style = "border bg-white", data_width = "100%", data_live_search = "true", data_container = "body" })
                                            </div>
                                        </div>
                                        <div class="form-group row no-gutters">
                                            <div class="col-md-3 d-flex justify-content-between align-items-center">Category 5<span class="d-none d-md-inline mx-1">:</span></div>
                                            <div class="col-md-9">
                                                @Html.DropDownListFor(model => model.Category5Id, new SelectList(ViewBag.ListCategory5, "ArticleCategoryId", "Name"), null, new { @class = "form-control", placeholder = "Select Category", data_style = "border bg-white", data_width = "100%", data_live_search = "true", data_container = "body" })
                                            </div>
                                        </div>
                                        <div class="form-group row no-gutters">
                                            <div class="col-md-3 d-flex justify-content-between align-items-center">Category 6<span class="d-none d-md-inline mx-1">:</span></div>
                                            <div class="col-md-9">
                                                @Html.DropDownListFor(model => model.Category6Id, new SelectList(ViewBag.ListCategory6, "ArticleCategoryId", "Name"), null, new { @class = "form-control", placeholder = "Select Category", data_style = "border bg-white", data_width = "100%", data_live_search = "true", data_container = "body" })
                                            </div>
                                        </div>
                                        <div class="form-group row no-gutters">
                                            <div class="col-md-3 d-flex justify-content-between align-items-center">Category 7<span class="d-none d-md-inline mx-1">:</span></div>
                                            <div class="col-md-9">
                                                @Html.DropDownListFor(model => model.Category7Id, new SelectList(ViewBag.ListCategory7, "ArticleCategoryId", "Name"), null, new { @class = "form-control", placeholder = "Select Category", data_style = "border bg-white", data_width = "100%", data_live_search = "true", data_container = "body" })
                                            </div>
                                        </div>

                                    </div>
                                    <div id="checkbox-tag" class="bg-warning card-body light no-gutters row p-0"></div>
                                </fieldset>
                            </section>
                          
                            <section class="card bg-white shadow-sm border-0 mb-5">
                                <nav class="card-navbar navbar navbar-dark bg-secondary text-white">
                                    <div class="left d-flex align-items-center">
                                        <div class="h4 font-secondary mb-0">LITERATURE CONTENT</div>
                                    </div>
                                    <div class="right">
                                        <button data-toggle="collapse" data-target="#collapse-target-3" type="button" class="btn btn-sm bg-transparent rounded-pill text-white btn-remove"><i class="fa fa-chevron-right"></i></button>
                                    </div>
                                </nav>
                                <div id="collapse-target-3" class="collapse show">
                                    <fieldset class="card-body">
                                        <legend></legend>
                                        <div class="text-muted">ATTACHMENT</div>
                                        <div class="border p-4">
                                            <div class="form-group mb-4">
                                                <label>Title</label>
                                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control border" } })
                                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group mb-4">
                                                <label>Content</label>
                                                <textarea name="@Html.NameFor(model => model.Description)" id="article-description" data-clone-target="#article-description-preview" required class="form-control bg-light clone-wysiwig">@Model.Description</textarea><em class="small form-text text-danger invalid-feedback">Field cannot be empty</em>
                                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                <button data-attachment_add_item="#attachment-item-output" data-use_options="{'name':'file_level[]','options':{'Guest':'guest','Green':'green','Yellow':'yellow'}}" type="button" class="btn bg-light border rounded-pill d-flex align-items-center px-3" data-accept="zip,application/octet-stream,application/zip,application/x-zip,application/x-zip-compressed,application/msword, application/vnd.ms-excel, application/vnd.ms-powerpoint, text/plain, application/pdf, image/*">
                                                    <span>Add New</span>
                                                    <i style="font-size: 1.5rem" class="fa fa-plus-circle ml-3"></i>
                                                </button>
                                            </div>
                                            <div class="form-group mb-0">
                                                <div id="attachment-item-output" class="row">
                                                    @if (ViewBag.Attachments != null)
                                                    {
                                                        int currentAttachmentsIndex = 0;
                                                        foreach (TicketAttachmentsAPI ticketAttachment in ViewBag.Attachments)
                                                        {
                                                            <div id="item-@ticketAttachment.Id" class="hide-attachment-item">
                                                                <div class="attachment-item col-12 col-xs-6 col-sm-auto mt-2 mb-3" style="max-width: 180px;">
                                                                    <div class="card border-0">
                                                                        <div class="position-relative">
                                                                            <div style="top: 0; left: 0; right: 0;" class="position-absolute overflow-hidden">
                                                                                <input type="hidden" name="current-attachments[]" value="@ticketAttachment.Id" />
                                                                            </div>
                                                                            <div class="attachment-select mb-2">
                                                                                <select data-style="border bg-white" class="form-control" name="current-file_level[]" aria-invalid="false">
                                                                                    @if (ticketAttachment.Level == "guest")
                                                                                {
                                                                                <option value="guest" selected>Guest</option>
                                                                                }
                                                                                else
                                                                                {
                                                                                <option value="guest">Guest</option>
                                                                                }

                                                                                    @if (ticketAttachment.Level == "green")
                                                                                {
                                                                                <option value="green" selected>Green</option>
                                                                                }
                                                                                else
                                                                                {
                                                                                <option value="green">Green</option>
                                                                                }

                                                                                    @if (ticketAttachment.Level == "yellow")
                                                                                {
                                                                                <option value="yellow" selected>Yellow</option>
                                                                                }
                                                                                else
                                                                                {
                                                                                <option value="yellow">Yellow</option>
                                                                                }
                                                                                </select>
                                                                            </div>
                                                                            <picture class="d-block atc-prev-wrap text-center">
                                                                                @{
                                                                                string[] imgExt = { ".jpg", ".png", ".jpeg", ".gif", ".bmp", ".tif", ".tiff" };
                                                                                if (!imgExt.Contains(ticketAttachment.Type))
                                                                                {
                                                                                    <img src="" alt="" style="width: 110px; height: 110px; display: none;" class="card-img-top object-fit-cover attachment-preview rounded-0 img-thumbnail mb-2" id="current-image-@currentAttachmentsIndex">
                                                                                    if (ticketAttachment.Type.Contains(".zip") || ticketAttachment.Type.Contains(".rar") || ticketAttachment.Type.Contains(".7zip"))
                                                                                    {
                                                                                        <i style="height: 110px; font-size: 3rem; line-height: 110px; width: 110px; border: solid 1px #ddd;" class="fa fa-file-archive text-muted mb-2"></i>
                                                                                    }
                                                                                    else if (ticketAttachment.Type.Contains(".doc"))
                                                                                    {
                                                                                        <i style="height: 110px; font-size: 3rem; line-height: 110px; width: 110px; border: solid 1px #ddd;" class="fa fa-file-word text-muted mb-2"></i>
                                                                                    }
                                                                                    else if (ticketAttachment.Type.Contains(".xls"))
                                                                                    {
                                                                                        <i style="height: 110px; font-size: 3rem; line-height: 110px; width: 110px; border: solid 1px #ddd;" class="fa fa-file-excel text-muted mb-2"></i>
                                                                                    }
                                                                                    else if (ticketAttachment.Type.Contains(".ppt"))
                                                                                    {
                                                                                        <i style="height: 110px; font-size: 3rem; line-height: 110px; width: 110px; border: solid 1px #ddd;" class="fa fa-file-powerpoint text-muted mb-2"></i>
                                                                                    }
                                                                                    else if (ticketAttachment.Type.Contains(".pdf"))
                                                                                    {
                                                                                        <i style="height: 110px; font-size: 3rem; line-height: 110px; width: 110px; border: solid 1px #ddd;" class="fa fa-file-pdf text-muted mb-2"></i>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <i style="height: 110px; font-size: 3rem; line-height: 110px; width: 110px; border: solid 1px #ddd;" class="fa fa-file text-muted mb-2"></i>
                                                                                    }
                                                                                }
                                                                                else
                                                                                {
                                                                                    <img src="@ticketAttachment.Name" alt="" style="width: 110px; height: 110px;" class="card-img-top object-fit-cover attachment-preview rounded-0 img-thumbnail mb-2">
                                                                                        
                                                                                    }
                                                                                }
                                                                            </picture>
                                                                        </div>
                                                                        <div class="d-flex justify-content-between align-items-center ">
                                                                            <small class="attachment-filename text-truncate d-inline-block text-muted" style="max-width: 100px;">@(currentAttachmentsIndex + 1). @ticketAttachment.NameWithOutBase64</small>
                                                                            <button type="button" value="@ticketAttachment.Id" class="btn btn-outline-warning btn-delete-attachment btn-sm rounded-pill p-0" style="width:1.25rem; height: 1.25rem; line-height: 1.25rem; text-align: center;"><i class="fa fa-times"></i></button>
                                                                        </div>
                                                                        @{string file = ViewBag.Domain + ticketAttachment.NameWithOutBase64;}
                                                                        <a href="@file" target="_blank" class="btn-link d-block badge badge-success small mt-2">Download</a>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                                                    currentAttachmentsIndex = currentAttachmentsIndex + 1;
                                                                                }
                                                                            }
                                                </div>
                                            </div>
                                        </div>
                                    </fieldset>
                                    <fieldset class="card-body">
                                        <legend></legend>
                                        <div class="text-muted">TAG</div>
                                        <div class="rounded-lg border bg-light">
                                            <div class="p-1 p-md-4">
                                                <div class="input-group flex-nowrap border">
                                                    <input data-add_tag_input="#add-tag-list" id="add-tag" type="text" class="bg-white flex-fill rounded-0 border-0 px-md-3">
                                                    <label for="add-tag" class="input-group-append mb-0">
                                                        <button type="button" class="btn border-0 input-group-text rounded-0 text-wrap btn-add_tag_input p-2 px-md-4 py-md-2"><span>Add TAG</span></button>
                                                    </label>
                                                </div>
                                            </div>
                                            <div id="add-tag-list" class="row no-gutters">
                                                @{
                                                    int tagElmntIdx = 0;
                                                    if (ViewBag.Tags != null)
                                                    {
                                                        foreach (ArticleTags tag in ViewBag.Tags)
                                                        {
                                                            <div class="tag-item col-auto text-truncate ml-3 mr-2 my-2 m-md-3" style="max-width: 300px;" id="tag-@tagElmntIdx">
                                                                <input type="hidden" value="@tag.Name" name="tag-input[]">
                                                                <div class="bg-secondary rounded-pill text-white pl-2 pr-3">
                                                                    <button type="button" class="btn rounded-circle text-white btn-sm btn-remove mr-2"><i class="fa fa-times"></i></button>
                                                                    <span>@tag.Name</span>
                                                                </div>
                                                            </div>

                                                            tagElmntIdx = tagElmntIdx + 1;
                                                        }
                                                    }
                                                }
                                            </div>
                                        </div>
                                    </fieldset>
                                </div>
                            </section>
                        </div>
                    </div>
                </div>
            </section>
            <section style="bottom: 0;" class="position-sticky bg-light py-3 sticky-submit-form z-index-10">
                <div class="container-fluid container-admin ml-0">
                    <div class="row">
                        <div class="col-12">
                            <div class="cust-fab d-inline-block d-md-none left">
                                <input id="fab-check" type="checkbox" name="" class="fab-check">
                                <label for="fab-check" class="btn btn-warning text-white rounded-circle btn-fab-trigger"><i class="fa fa-plus"></i></label>
                                <div class="fab-group">
                                    <button type="submit" name="Submit" value="Submit" class="fab-item btn rounded-pill btn-light border-warning shadow-sm">Submit</button>
                                    <button type="submit" name="Submit" value="Draft" class="fab-item btn rounded-pill btn-light border-warning shadow-sm">Save as Draft</button>
                                    <a href="javascript:history.go(-1);" class="fab-item btn rounded-pill btn-light border-warning shadow-sm" role="button" aria-pressed="true">Cancel</a>
                                </div>
                            </div>
                            <div class="d-none d-md-flex justify-content-between">
                                <div>
                                    <a href="javascript:history.go(-1);" class="fab-item btn btn-light border-warning shadow-sm" role="button" aria-pressed="true">Cancel</a>
                                
                                </div>
                                <div>
                                    <button type="submit" name="Submit" value="Draft" class="btn rounded-0 bg-secondary text-white my-1">Save as Draft</button>
                                    <button type="submit" name="Submit" value="Submit" class="btn rounded-0 btn-warning my-1 ml-2">Submit</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            <div class="sticky-submit-form-observer"></div>
                                                    }

    </div>
</main>

@section ScriptBottom {
    <script type="text/javascript">
        CKEDITOR.replace('article-description');
        $(document).ready(function () {
            $("#Category1Id").change(function () {
                $("#Category2Id").empty();
                $("#Category3Id").empty();
                $("#Category4Id").empty();
                $("#Category5Id").empty();
                $("#Category6Id").empty();
                $("#Category7Id").empty();
                $("#Category3Id").append("<option value='null'>Select</option>");
                $("#Category4Id").append("<option value='null'>Select</option>");
                $("#Category5Id").append("<option value='null'>Select</option>");
                $("#Category6Id").append("<option value='null'>Select</option>");
                $("#Category7Id").append("<option value='null'>Select</option>");
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetChild")',
                    dataType: 'json',
                    data: { id: $("#Category1Id").val() },
                    success: function (mems) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $("#Category2Id").append('<option value="null">Select</option>');
                        $.each(mems, function (i, member) {
                            $("#Category2Id").append('<option value="' + member.Value + '">' + member.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve category.' + ex);
                    }
                });
                return false;
            });
            $("#Category2Id").change(function () {
                $("#Category3Id").empty();
                $("#Category4Id").empty();
                $("#Category5Id").empty();
                $("#Category6Id").empty();
                $("#Category7Id").empty();
                $("#Category4Id").append("<option value='null'>Select</option>");
                $("#Category5Id").append("<option value='null'>Select</option>");
                $("#Category6Id").append("<option value='null'>Select</option>");
                $("#Category7Id").append("<option value='null'>Select</option>");
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetChild")',
                    dataType: 'json',
                    data: { id: $("#Category2Id").val() },
                    success: function (mems) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $("#Category3Id").append('<option value="null">Select</option>');
                        $.each(mems, function (i, member) {
                            $("#Category3Id").append('<option value="' + member.Value + '">' + member.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve category.' + ex);
                    }
                });
                return false;
            });
            $("#Category3Id").change(function () {
                $("#Category4Id").empty();
                $("#Category5Id").empty();
                $("#Category6Id").empty();
                $("#Category7Id").empty();
                $("#Category5Id").append("<option value='null'>Select</option>");
                $("#Category6Id").append("<option value='null'>Select</option>");
                $("#Category7Id").append("<option value='null'>Select</option>");
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetChild")',
                    dataType: 'json',
                    data: { id: $("#Category3Id").val() },
                    success: function (mems) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $("#Category4Id").append('<option value="null">Select</option>');
                        $.each(mems, function (i, member) {
                            $("#Category4Id").append('<option value="' + member.Value + '">' + member.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve category.' + ex);
                    }
                });
                return false;
            });
            $("#Category4Id").change(function () {
                $("#Category5Id").empty();
                $("#Category6Id").empty();
                $("#Category7Id").empty();
                $("#Category6Id").append("<option value='null'>Select</option>");
                $("#Category7Id").append("<option value='null'>Select</option>");
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetChild")',
                    dataType: 'json',
                    data: { id: $("#Category4Id").val() },
                    success: function (mems) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $("#Category5Id").append('<option value="null">Select</option>');
                        $.each(mems, function (i, member) {
                            $("#Category5Id").append('<option value="' + member.Value + '">' + member.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve category.' + ex);
                    }
                });
                return false;
            });
            $("#Category5Id").change(function () {
                $("#Category6Id").empty();
                $("#Category7Id").empty();
                $("#Category7Id").append("<option value='null'>Select</option>");
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetChild")',
                    dataType: 'json',
                    data: { id: $("#Category5Id").val() },
                    success: function (mems) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $("#Category6Id").append('<option value="null">Select</option>');
                        $.each(mems, function (i, member) {
                            $("#Category6Id").append('<option value="' + member.Value + '">' + member.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve category.' + ex);
                    }
                });
                return false;
            });
        $("#Category6Id").change(function () {
            $("#Category7Id").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetChild")',
                    dataType: 'json',
                    data: { id: $("#Category6Id").val() },
                    success: function (mems) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $("#Category7Id").append('<option value="null">Select</option>');
                        $.each(mems, function (i, member) {
                            $("#Category7Id").append('<option value="' + member.Value + '">' + member.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve category.' + ex);
                    }
                });
                return false;
            });
        $(".btn-delete-attachment").click(function () {
            var idItem = $(this).val()
            $.ajax({
                type: 'POST',
                url: '@Url.Action("DeleteFileLiterature","Literature")',
                dataType: 'json',
                data: { id: idItem },
                success: function (mems) {
                    alert("Attachment Deleted");
                    $("#item-" + idItem).remove();
                    },
                    error: function (ex) {
                        alert('Attachment Delete Failed. error : ' + ex);
                    }
            });
               return false;
            });
        
        });
    </script>
}

